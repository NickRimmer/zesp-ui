{"version":3,"sources":["loader.js","i18n sync /^.*$","data/controls sync /^/.//.*$","shared/app-dialog/index.tsx","store/slices/spinnerSlice.tsx","store/slices/zespSlice.tsx","services/zesp/common/ZespResponseValidators.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/unknown.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/controls/OnOffToggle.tsx","device-controls/index.tsx","device-controls/layouts/DefaultLayout.tsx","device-controls/layouts/binary-sensor/index.tsx","device-controls/layouts/index.tsx","device-controls/layouts/ble-beacon/index.tsx","device-controls/layouts/binary-sensor/auto.tsx","device-controls/layouts/ble-beacon/auto.tsx","services/zesp/service-devices.tsx","store/slices/devicesSlice.tsx","store/slices/zespFirmwareSlice.tsx","services/zesp/service-root.tsx","services/zesp/zespSettings.hook.tsx","services/zesp/service-firmware.tsx","models/UiSettings.tsx","store/slices/settingsSlice.tsx","services/zesp/service-report-updates.tsx","shared/agents/ZespAgent.hook.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","services/zesp/common/service-connector.tsx","shared/agents/ZespAgent.tsx","shared/power-dialog/index.tsx","shared/top-menu/index.tsx","shared/loading-spinner/index.tsx","shared/fadein-transition/index.tsx","pages/devices/item-image.tsx","pages/devices/item.tsx","services/devices.tsx","pages/devices/index.tsx","pages/setup/index.tsx","pages/device-info/header.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","shared/updates-notification/UpdatesNotificationDialog.tsx","shared/updates-notification/UpdatesNotification.tsx","shared/footer/AppFooter.tsx","App.tsx","reportWebVitals.ts","store/configure.tsx","index.tsx","i18n/config.js"],"names":["window","$","jQuery","require","console","debug","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AppDialog","children","show","title","setShow","footer","useState","dialogLoaded","setDialogLoaded","useEffect","onHideHandler","Modal","onExited","onHide","Header","className","type","onClick","Body","Footer","initialState","spinnerShow","spinnerMessage","spinnerSlice","createSlice","name","reducers","setSpinnerShow","state","action","payload","setSpinner","message","getSpinner","spinner","actions","zespSlice","connectionStatus","initialized","setConnectionStatus","setInitialized","getStatus","zesp","getInitialized","JsonZespResponseValidator","fileName","isValid","event","dataType","responseFileName","dataParts","exec","TypedZespResponseValidator","AllMessagesZespResponseValidator","DeviceControls","props","config","reportKey","deviceInfo","zespInfo","IEEE","endpoint","clusterId","attributeId","Report","layoutId","settings","customLayout","find","x","undefined","OnOffRoot","zespSend","useContext","ZespContext","report","Row","ButtonGroup","Button","variant","val","toString","data","arguments","commandOn","isBinary","commandOff","LevelRoot","currentValue","Number","max","min","value","setValue","minMaxAttributes","inRange","Math","FormControl","style","width","onChange","result","command","replace","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","key","initialValue","readValue","item","localStorage","getItem","JSON","parse","error","warn","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","RgbRoot","split","length","r","g","b","color","setColor","colorPicker","setColorPicker","colorChangeHandler","rgb","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","Transition","setClassName","onRefresh","classNameFrom","onLoad","classNameTo","setTimeout","timeOutMs","HighlightOnUpdate","UnknownControl","showDetails","setShowDetails","configData","reportData","label","parsed","trim","roleParts","role","roleSettings","units","preventDefault","href","NoReport","IlluminanceSensor","parseInt","LevelControl","sendValueToZesp","formatCommand","Device","PlayerSrcRoot","srcReport","playSettings","playReport","toast","src","setSrc","play","setPlay","list","placeholder","icon","i","OnOffBinarySensor","payloadOn","zespRoleSettings","ValueSensor","unit","OnOffToggle","commandToggle","DeviceControlCol1","Col","md","DeviceControlCol2","DefaultLayout","controls","unknown","forEach","control","controlProps","element","getControlForDevice","device","push","showUnknown","setShowUnknown","reportKeysValue","reportKeysBattery","deviceClasses","batteryValuesRange","getValueSettings","onOffReport","getReport","iconClassName","icons","onFalse","valueClassName","valueTitle","statusValue","status","deviceClass","valueSettings","onTrue","styles","titles","getBatterySettings","stateClassName","valuePercents","valueString","valueNumber","round","oneOfKeys","layoutsAvailable","default","binarySensorLayout","battery","bleBeacon","isInRange","signalLevel","lastUpdateMs","time","lastDate","Date","calculateRelative","now","relative","setRelative","timer","setInterval","clearInterval","lastUpdateStyle","rangeStyle","toLocaleDateString","toLocaleTimeString","autoDetectors","valueReportKey","layoutTools","binarySensorValueKeys","batteryReportKey","binarySensorBatteryKeys","roleDeviceClassIs","DevType","class","rangeReport","signalReport","autoDetect","layout","autoDetector","expectedDeviceClasses","reportDeviceClass","indexOf","ServiceDevices","getDevicesListAsync","Promise","reject","zespRequestAsync","responseValidator","then","onDevicesListReceived","devices","zespVersion","catch","reason","jsonString","zespDevices","assign","buildDeviceInfo","getDeviceModelSettings","modelId","predefinedDevices","modelIds","findIndex","ModelId","devicesSlice","setDevices","updateReport","ieee","update","updateRootReports","getDeviceByIee","getAllDevices","zespFirmwareUpdateInfo","zespFirmwareInstalledVersion","zespSkipVersion","zespFirmwareSlice","setZespFirmwareUpdate","setZespFirmwareInstalledVersion","getZespFirmwareUpdateInfo","zespFirmware","getZespFirmwareInstalledVersion","extractReports","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","useZespSettings","setCustom","dataStr","getAsync","json","parseResponse","setAsync","join","toLocaleLowerCase","response","getCustomAsync","jsonStr","setUiSettings","timeoutSeconds","updates","currentVersion","updatesInformation","UiDefaultSettings","zespSettings","uiSettings","settingsSlice","setZespSettings","getZespSettings","getUiSettings","onReport","subscribe","onUpdate","EndPoint","ClusterId","AttribId","Data","useZespAgent","dispatch","uiSettingsRef","useRef","connectAsync","server","getDevices","getRoot","ServiceRoot","reports","readUiSettings","current","readFirmwareUpdates","firmwareUpdate","firmwareLastCheck","ServiceFirmware","firmwareInfo","subscribeReportUpdates","ServiceUpdates","Result","ConnectionStartTimeout","RestartConnectionTimeout","DefaultRequestTimeoutSeconds","WatcherIntervalSeconds","ZespDataEventType","ZespDataEvent","useZespConnector","_server","_onMessageEvent","EventTarget","_ws","_lastMessageTimestamp","_watcher","_onMessageReceived","ws","messageParts","messageType","shift","unshift","resultEvent","_runWatcher","zespStatusChangeHandler","underlyingWebsocket","readyState","Constants","args","dataHex","replaceAll","match","group","Uint8Array","_getBinaryData","send","responseReceived","validator","listener","force","close","_tryToCloseWS","protocol","document","location","serverAddress","address","WebsocketBuilder","onOpen","onClose","onError","onMessage","build","_tryConnectWs","handler","zespEvent","unsubscribe","getServerAddress","React","createContext","ZespAgent","useDispatch","zespStatus","useSelector","setZesp","_restartTimerRef","Provider","clearTimeout","finally","PowerDialogLink","navLink","buttons","t","useTranslation","to","process","LoadingSpinner","centered","size","backdrop","Spinner","animation","FadeIn","image","setImage","testImage","Image","onerror","backgroundImage","detailsLink","xs","sm","lg","xxl","tags","Devices","buildLayoutSettingsFromZesp","reduce","groupName","deviceType","substr","reportKeyInfo","registeredCluster","DataHaClusterIds","buildLayoutItemForRole","attributes","getLayoutItem","filter","dataCluster","roleName","layoutItem","DevicesList","devicesSorting","a","buildListItem","Name","getImageUrl","getTagsFromReports","Img","reportKeyDetails","clusterInfo","HomeAutoClusters","sort","deviceItems","Card","SaveSettings","updatedSettings","success","alert","Container","Nav","Item","exact","marginTop","headerClassName","groups","headerContent","activeGroupName","setActiveGroupName","onDetailsClicked","onCloseClicked","layoutProps","layoutName","LayoutElements","history","useHistory","useParams","keysA","keysB","handleClose","handleSubmit","input","prop","attr","ReactForm","onSubmit","restProps","Form","predefinedMessages","predefinedBinary","messages","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","repsPaused","_setRepsPaused","messagesRef","pausedRef","repsPausedRef","addMessages","startsWith","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","togglePause","toggleRepsPause","i2","controlId","defaultValue","inputProps","Group","as","Label","column","Control","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","allSettings","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","rel","Wifi","ssid","pass","ip","mask","gw","Routes","isInitialized","path","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","deleteConfirmed","setDeleteConfirmed","popover","Popover","dangerouslySetInnerHTML","__html","editServer","updateAction","addAction","closeAction","InputGroup","Text","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","setServerIndex","UpdatesNotificationDialog","onClosed","zespFirmwareUpdate","zespFirmwareCurrentVersion","SettingsService","zespFirmwareUpdateVersion","updateData","firmwareSkipUpdate","UpdatesNotification","zespCurrentVersion","showDialog","setShowDialog","AppFooter","Content","serverIndex","serversString","selectedServer","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","zespReducer","devicesReducer","spinnerReducer","settingsReducer","zespFirmwareReducer","ReactDOM","render","StrictMode","getElementById","languages","namespaces","i18n","use","initReactI18next","init","fallbackLng","lng","resources","lang","ns","loadResources","defaultNS"],"mappings":"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","file":"static/js/main.3db71771.chunk.js","sourcesContent":["window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 98,\n\t\"./config.js\": 98,\n\t\"./locales/en/common\": 124,\n\t\"./locales/en/common.json\": 124,\n\t\"./locales/en/nav\": 125,\n\t\"./locales/en/nav.json\": 125,\n\t\"./locales/en/pages/devices\": 126,\n\t\"./locales/en/pages/devices.json\": 126,\n\t\"./locales/en/pages/setup-mqtt\": 127,\n\t\"./locales/en/pages/setup-mqtt.json\": 127,\n\t\"./locales/en/pages/setup-wifi\": 128,\n\t\"./locales/en/pages/setup-wifi.json\": 128,\n\t\"./locales/en/pages/welcome\": 129,\n\t\"./locales/en/pages/welcome.json\": 129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","var map = {\n\t\"./root\": 155,\n\t\"./root.json\": 155\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 320;","import React, {Fragment, useEffect, useState} from \"react\";\nimport {Modal} from \"react-bootstrap\";\n\ninterface IProps {\n  show: boolean,\n  title: string,\n  setShow: (show: boolean) => void,\n  footer: React.ReactElement | undefined,\n}\n\nexport const AppDialog: React.FunctionComponent<IProps> = ({\n  children,\n  show,\n  title,\n  setShow,\n  footer,\n}): React.ReactElement => {\n  const [dialogLoaded, setDialogLoaded] = useState(show);\n\n  useEffect(() => {\n    if (show) setDialogLoaded(true);\n  }, [show]);\n\n  const onClosedHandler = () => setDialogLoaded(false);\n  const onHideHandler = () => setShow(false);\n\n  if (!dialogLoaded) return (<Fragment/>);\n  return (\n    <Modal show={show} onExited={onClosedHandler} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>{title}</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        {children}\n      </Modal.Body>\n\n      {footer && (\n        <Modal.Footer>\n          {footer}\n        </Modal.Footer>\n      )}\n    </Modal>\n  )\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\ninterface IState {\n  spinnerShow: boolean,\n  spinnerMessage: string,\n}\n\nconst initialState: IState = {\n  spinnerShow: false,\n  spinnerMessage: \"Loading...\",\n}\n\nexport const spinnerSlice = createSlice({\n  name: \"spinner\",\n  initialState,\n  reducers: {\n    setSpinnerShow: (state, action: PayloadAction<boolean>): void => {\n      state.spinnerShow = action.payload;\n      if (state.spinnerShow) state.spinnerMessage = initialState.spinnerMessage;\n    },\n\n    setSpinner: (state, action: PayloadAction<{ show: boolean, message: string | undefined }>): void => {\n      state.spinnerShow = action.payload.show;\n      state.spinnerMessage = action.payload.message || initialState.spinnerMessage;\n    }\n  }\n});\n\nconst getters = {\n  getSpinner: (state: RootState) => state.spinner,\n}\n\nexport const {getSpinner} = getters;\nexport const {setSpinnerShow, setSpinner} = spinnerSlice.actions;\nexport default spinnerSlice.reducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\nexport type zespConnectionStatus = \"disconnected\" | \"connected\" | \"connecting\" | \"reconnect\" | \"closed\";\n\nexport interface ZespState {\n  connectionStatus: zespConnectionStatus,\n  initialized: boolean,\n}\n\nconst initialState: ZespState = {\n  connectionStatus: \"disconnected\",\n  initialized: false,\n}\n\nexport const zespSlice = createSlice({\n  name: \"zesp\",\n  initialState,\n  reducers: {\n    setConnectionStatus: (state, action: PayloadAction<zespConnectionStatus>) => {\n      state.connectionStatus = action.payload;\n    },\n\n    setInitialized: (state, action: PayloadAction<boolean>) => {\n      state.initialized = action.payload;\n    },\n  }\n})\n\nconst getters = {\n  getStatus: (state: RootState) => state.zesp.connectionStatus,\n  getInitialized: (state: RootState) => state.zesp.initialized,\n}\n\nexport const {getStatus, getInitialized,} = getters;\nexport const {setConnectionStatus, setInitialized,} = zespSlice.actions;\nexport default zespSlice.reducer;","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataControlSettings>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataControlSettings>(props: IDeviceControlProps<DataControlSettings>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    zespSend({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    zespSend({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  // const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useContext, useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  // const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    zespSend({data: command});\n    // setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    zespSend({data: command});\n    // setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler} width=\"270px\"/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(\n    () => setClassName(props.classNameFrom),\n    [props.children?.toString()]);\n\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {DeviceControls} from \"../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"./index\";\nimport {HighlightOnUpdate} from \"../shared/transition/HighlightOnUpdate\";\nimport {Row} from \"react-bootstrap\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataControlSettings>) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<NoReport id={props.config.id} reportData={reportData} configData={configData}/>)\n\n  const label = report.label || props.config.label || props.config.id || \"Unknown data\";\n  const value =\n    (report.parsed && report.parsed.toString().trim() === report.val.toString().trim() && report.parsed)\n    || (report.parsed && report.val && `${report.parsed} (${report.val})`)\n    || report.val\n    || \"No data\";\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 && JSON.parse(roleParts[1]);\n  const units = (roleSettings && roleSettings[\"unit_of_measurement\"]) || \"\";\n\n  const showDetailsClicked = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setShowDetails(!showDetails);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value} {units}</HighlightOnUpdate>\n        <a onClick={showDetailsClicked} href=\"#\" className=\"value-info\" title=\"Unrecognized data, click to show details\">\n          <i className=\"bi bi-info-circle-fill ms-2 text-secondary\"/>\n        </a>\n      </DeviceControlCol2>\n      <div className={`alert alert-info flex-column col-12 ${showDetails ? \"\" : \"d-none\"}`}>\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </Row>\n  )\n\n  // return \n}\n\nconst NoReport = (props: { id: string, configData: string, reportData: string }) => (\n  <Row>\n    <DeviceControlCol1>{props.id}</DeviceControlCol1>\n    <DeviceControlCol2>\n      <div className=\"alert alert-info\">\n        <div>{props.configData}</div>\n        {props.reportData && (<div className=\"mt-2\">{props.reportData}</div>)}\n      </div>\n    </DeviceControlCol2>\n  </Row>\n)\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.parsed ? Number(report.parsed) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    sendValueToZesp(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    sendValueToZesp(result);\n  }\n\n  const sendValueToZesp = (value: number) => {\n    const data = formatCommand(props.config.arguments.command, value, props);\n    zespSend({data: data});\n  }\n\n  const label = report?.label || props.config.label || \"Level\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number, props: IDeviceControlProps<LayoutSettingsLevel>): string => command\n  .replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useContext, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataControlSettings>) => {\n  const {zespSend} = useContext(ZespContext);\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\",\n    \"http://listen.181fm.com/181-thebox_128k.mp3?\",\n    \"http://stream.live.vc.bbcmedia.co.uk/bbc_radio_one\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    // DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    setPlay(\"OFF\");\n    // DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    // DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) zespSend({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    // DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) zespSend({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = props.config.zespRoleSettings[\"unit_of_measurement\"] || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOffToggle} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffToggle = (props: IDeviceControlProps<LayoutSettingsOnOffToggle>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    const command = props.config.arguments.commandOn.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const offHandler = () => {\n    const command = props.config.arguments.commandOff.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const toggleHandler = () => {\n    const command = props.config.arguments.commandToggle.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  }\n\n  const label = report?.label || props.config.label || \"Power\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.parsed.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant=\"secondary\" onClick={toggleHandler}>Toggle</Button>\n          <Button variant={report?.parsed.toString() === \"0\" ? \"primary\" : \"secondary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {Fragment, FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsOnOffToggle, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./unknown\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\nimport {OnOffToggle} from \"./controls/OnOffToggle\";\n\ntype ElementTypes = \"regular\" | \"skip\" | \"unknown\";\n\ninterface IResult {\n  element: JSX.Element,\n  type: ElementTypes\n}\n\nexport const getControlForDevice = (config: DataControlSettings, deviceInfo: DeviceInfo): IResult => {\n  const controlProps: IDeviceControlProps<DataControlSettings> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return {type: \"regular\", element: (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>)};\n    case \"level_root\" :\n      return {type: \"regular\", element: (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n    case \"rgb_root\" :\n      return {type: \"regular\", element: (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>)};\n    case \"player_src_root\" :\n      return {type: \"regular\", element: (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"player_control_root\":\n      return {type: \"skip\", element: (<Fragment/>)};\n\n    case \"level_control\" :\n      return {type: \"regular\", element: (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n\n    case \"illuminance_sensor\" :\n      return {type: \"regular\", element: (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>)};\n    case \"binary_sensor\" :\n      return {type: \"regular\", element: (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"sensor\" :\n      return {type: \"regular\", element: (<ValueSensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n\n    case \"on_off_toggle\":\n      return {type: \"regular\", element: (<OnOffToggle {...controlProps} config={controlProps.config as LayoutSettingsOnOffToggle}/>)};\n\n    default:\n      return {type: \"unknown\", element: (<UnknownControl {...controlProps}/>)}\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n}","import {getControlForDevice} from \"../index\";\nimport React, {FunctionComponent, useState} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\n\nexport const DefaultLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const controls: React.ReactElement[] = [];\n  const unknown: React.ReactElement[] = [];\n\n  props.settings.forEach(settings => {\n    const control = getControlForDevice(settings, props.device);\n    if (control.type === \"skip\") return;\n\n    if (control.type === \"unknown\") unknown.push(control.element);\n    else controls.push(control.element);\n  });\n\n  // show by default if now identified controls found\n  const [showUnknown, setShowUnknown] = useState(controls.length === 0);\n\n  const onToggleUnknownHandler = () => {\n    setShowUnknown(!showUnknown);\n  }\n\n  return (\n    <div className=\"default-layout\">\n      {controls.length > 0 && (\n        <div className=\"elements\">\n          {controls.map((element, i) => {\n            return (<div key={i} className=\"device-control-group\">{element}</div>);\n          })}\n        </div>\n      )}\n\n      {unknown.length > 0 && (\n        <>\n          <button onClick={onToggleUnknownHandler} className=\"show-unknown-btn btn btn-outline-info\">Unknown reports ({unknown.length})</button>\n          <div className={`elements unknown ${showUnknown ? \"show\" : \"hide\"}`}>\n            {unknown.map((element, i) => {\n              return (<div key={i} className=\"device-control-group\">{element}</div>);\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}","import React, {FunctionComponent} from \"react\";\nimport \"./styles.scss\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {IDeviceClassSettings} from \"./IDeviceClassSettings\";\n\nexport const reportKeysValue = [\"0100060000\", \"0104060000\"];\nexport const reportKeysBattery = [\"010000FF02\"];\n\nconst deviceClasses: { [deviceClass: string]: IDeviceClassSettings } = require(\"./device-classes.json\");\nconst batteryWarningLevelPercents = 50;\nconst batteryValuesRange = [2.7, 3.1]; // battery values to calculate percents from 0 to 100%\n\nexport const BinarySensorLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const value = getValueSettings(props);\n  const battery = getBatterySettings(props);\n\n  return (\n    <div className=\"row custom-binary-layout\">\n      <div className=\"col col-5 left\">\n        <i className={`bi ${value.iconClassName}`}/>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Current status:</div>\n          <div className={value.valueClassName}>{value.valueTitle}</div>\n        </div>\n\n        <div className=\"text-center mt-3 w-100\">\n          <div>Battery Level: <span className={`status ${battery.stateClassName}`}>{battery.valueTitle}</span></div>\n          <div className=\"progress mt-3\">\n            <div\n              className={`progress-bar ${battery.stateClassName}`}\n              role=\"progressbar\"\n              style={{width: `${battery.valuePercents}%`}}/>\n          </div>\n          <div className=\"battery-icon\">\n            <i className={`bi bi-battery-half ${battery.stateClassName}`}/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n// region getValueSettings \nconst getValueSettings = (props: LayoutProps): {\n  iconClassName: string,\n  valueClassName: string,\n  valueTitle: string\n} => {\n  const onOffReport = getReport(reportKeysValue, props);\n  if (!onOffReport) return {\n    iconClassName: deviceClasses[\"default\"].icons!.onFalse,\n    valueClassName: \"status-unknown\",\n    valueTitle: \"Unknown\"\n  }\n\n  // try to get status of binary sensor\n  const statusValue = onOffReport.parsed || onOffReport.val;\n  const roleParts = onOffReport.role && onOffReport.role.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const status: boolean = roleSettings && roleSettings[\"payload_on\"]\n    ? statusValue === roleSettings[\"payload_on\"] // compare with role settings\n    : (statusValue === \"1\" || statusValue === \"01\") // compare with default expected\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const iconClassName = status ? `${valueSettings.icons!.onTrue} ${valueSettings.styles!.onTrue}` : `${valueSettings.icons!.onFalse} ${valueSettings.styles!.onFalse}`;\n  const valueClassName = status ? `status ${valueSettings.styles!.onTrue}` : `status ${valueSettings.styles!.onFalse}`;\n  const valueTitle = status ? valueSettings.titles.onTrue : valueSettings.titles.onFalse;\n\n  return {iconClassName, valueClassName, valueTitle};\n}\n// endregion\n\n// region getBatterySettings\nconst getBatterySettings = (props: LayoutProps): {\n  stateClassName: string,\n  valueTitle: string,\n  valuePercents: number\n} => {\n  const report = getReport(reportKeysBattery, props);\n\n  // return default for unknown\n  if (!report) return {stateClassName: \"??\", valueTitle: \"-\", valuePercents: 0};\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const units = roleSettings && roleSettings[\"unit_of_measurement\"] || \"\";\n  const valueString = Number(report.parsed || report.val) || undefined;\n  let valuePercents: number | undefined = undefined;\n\n  // get percents\n  if (!valueString) valuePercents = undefined\n  else if (units === \"%\") valuePercents = Number(valueString);\n  else {\n    let valueNumber = Number(valueString) || undefined;\n    if (valueNumber) {\n      valueNumber = Math.min(batteryValuesRange[1], Math.max(batteryValuesRange[0], valueNumber));\n      valuePercents = Math.round((1 - (batteryValuesRange[1] - valueNumber) / (batteryValuesRange[1] - batteryValuesRange[0])) * 100);\n    }\n  }\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const valueTitle = `${valueString || \"??\"} ${units}`;\n  const stateClassName = !valuePercents\n    ? \"status-unknown\"\n    : valuePercents <= batteryWarningLevelPercents\n      ? valueSettings.styles!.onFalse\n      : valueSettings.styles!.onTrue;\n\n  return {\n    stateClassName,\n    valuePercents: valuePercents || 0,\n    valueTitle\n  };\n}\n// endregion\n\nconst getReport = (oneOfKeys: string[], props: LayoutProps): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = props.device.zespInfo.Report[key];\n    if (report) return report;\n  }\n}","import {DefaultLayout} from \"./DefaultLayout\";\nimport {BinarySensorLayout} from \"./binary-sensor\";\nimport {FunctionComponent} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\nimport AutoDetectionBinarySensor from \"./binary-sensor/auto\";\nimport AutoDetectionBleBeacon from \"./ble-beacon/auto\";\nimport BleBeaconLayout from \"./ble-beacon\";\n\n// list of available layouts with names\nexport const layoutsAvailable = {\n  default: DefaultLayout,\n  binarySensorLayout: BinarySensorLayout,\n  bleBeacon: BleBeaconLayout,\n} as { [name: string]: FunctionComponent<LayoutProps> };\n\n// list of layout auto detection functions, which return layout name\nconst autoDetectors: { (zespInfo: ZespDeviceInfo): string | undefined }[] = [\n  AutoDetectionBinarySensor,\n  AutoDetectionBleBeacon,\n];\n\n// region help methods\nexport const layoutTools = {\n  autoDetect: (zespInfo: ZespDeviceInfo): string | undefined => {\n    for (const autoDetector of autoDetectors) {\n      const layout = autoDetector(zespInfo);\n      if (layout) return layout;\n    }\n\n    return undefined;\n  },\n\n  roleDeviceClassIs: (expectedDeviceClasses: string[], report: ZespReportInfo): boolean => {\n    const roleParts = report.role && report.role.split(\"&\");\n    if (roleParts.length < 2) return false;\n\n    const roleSettings = JSON.parse(roleParts[1]);\n    const reportDeviceClass = roleSettings[\"device_class\"];\n    if (!reportDeviceClass) return false;\n\n    return expectedDeviceClasses.indexOf(reportDeviceClass) >= 0;\n  },\n  getReport: (oneOfKeys: string[], zespInfo: ZespDeviceInfo): ZespReportInfo | undefined => {\n    for (const key of oneOfKeys) {\n      const report = zespInfo.Report[key];\n      if (report) return report;\n    }\n  }\n}\n// endregion","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {HighlightOnUpdate} from \"../../../shared/transition/HighlightOnUpdate\";\n\nconst lastUpdateTresholdSeconds = 60 * 5;\n\nexport const BleBeacon: FunctionComponent<LayoutProps> = (props) => {\n  const isInRange = props.device.zespInfo.Report[\"ble_InRange\"]?.parsed === \"1\";\n  const signalLevel = props.device.zespInfo.Report[\"ble_signal_level\"]?.parsed;\n\n  const lastUpdateMs = Math.max(props.device.zespInfo.Report[\"ble_InRange\"].time, props.device.zespInfo.Report[\"ble_signal_level\"].time);\n  const lastDate = new Date(lastUpdateMs);\n  const calculateRelative = () => Math.round((Date.now() - lastUpdateMs) / 1000);\n  const [relative, setRelative] = useState(calculateRelative());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setRelative(calculateRelative());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    }\n  }, [lastUpdateMs]);\n\n  const lastUpdateStyle = relative < lastUpdateTresholdSeconds\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  const rangeStyle = isInRange\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  return (\n    <div className=\"row custom-layout\">\n      <div className=\"col col-5 left flex-column position-relative\">\n        <i className={`bi bi-wifi ${rangeStyle}`}/>\n        <div className={`icon-description ${rangeStyle}`}>{isInRange ? \"In range\" : \"Out of range\"}</div>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Signal level:</div>\n          <div className={`status ${rangeStyle}`}><HighlightOnUpdate>{signalLevel}</HighlightOnUpdate></div>\n        </div>\n        <div className=\"text-center mt-3\">\n          <div>Last update:</div>\n          <div className={`status ${lastUpdateStyle}`}>{lastDate.toLocaleDateString()} {lastDate.toLocaleTimeString()}</div>\n          <div className=\"small text-muted opacity-50\">{\n            relative < 60 ? `${relative} seconds ago` :\n              relative / 60 < 60 ? `${Math.round(relative / 60)} minutes ago` :\n                `${Math.round(relative / 60 / 60)} hours ago`\n          }</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BleBeacon;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {reportKeysBattery as binarySensorBatteryKeys, reportKeysValue as binarySensorValueKeys} from \"./index\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBinarySensor = (zespInfo: ZespDeviceInfo): string | undefined => {\n  const valueReportKey = layoutTools.getReport(binarySensorValueKeys, zespInfo);\n  const batteryReportKey = layoutTools.getReport(binarySensorBatteryKeys, zespInfo);\n\n  if (!valueReportKey || !batteryReportKey) return undefined; // these two guys required\n  if (!layoutTools.roleDeviceClassIs([\"battery\"], batteryReportKey)) return undefined;\n  if (!layoutTools.roleDeviceClassIs([\"door\", \"motion\"], valueReportKey)) return undefined;\n\n  console.debug(`Auto detected layout 'binarySensorLayout' for '${zespInfo.IEEE}'`);\n  return \"binarySensorLayout\";\n}\n\nexport default AutoDetectionBinarySensor;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBleBeacon = (zespInfo: ZespDeviceInfo): string | undefined => {\n  if (zespInfo.DevType !== \"BED\" || zespInfo.class !== \"beacon\") return undefined;\n\n  const rangeReport = layoutTools.getReport([\"ble_InRange\"], zespInfo);\n  const signalReport = layoutTools.getReport([\"ble_signal_level\"], zespInfo);\n  if (!rangeReport || !signalReport) return undefined;\n\n  return \"bleBeacon\";\n}\n\nexport default AutoDetectionBleBeacon;","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {layoutTools} from \"../../device-controls/layouts\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\ninterface IGetDevicesResponse {\n  devices: DeviceInfo[],\n  zespVersion: string | undefined,\n}\n\nconst ServiceDevices = {\n  getDevicesListAsync: (zesp: IZespConnector) => new Promise<IGetDevicesResponse>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(event => {\n        const result = onDevicesListReceived(event);\n        resolve({\n          devices: result,\n          zespVersion: event.dataParts.length > 1 ? event.dataParts[1] : undefined,\n        } as IGetDevicesResponse);\n      })\n      .catch(reason => reject(reason));\n  })\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent): DeviceInfo[] => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n\n  return zespDevices.map(buildDeviceInfo);\n}\n\nexport const getDeviceModelSettings = (modelId: string): { settings: DataDeviceSettings, controls: DataControlSettings[] } => {\n  const settings: DataDeviceSettings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === modelId) >= 0) || {} as DataDeviceSettings;\n  const controls = settings?.controls && require(`../../data/controls/${settings.controls}`) as DataControlSettings[] || [];\n\n  return {settings, controls};\n}\n\nconst buildDeviceInfo = (zespInfo: ZespDeviceInfo): DeviceInfo => {\n  const {settings, controls} = getDeviceModelSettings(zespInfo.ModelId);\n  controls.forEach(control => {\n    if (!control.reportKey) return;\n    const reportKey = control.reportKey.endpoint + control.reportKey.clusterId + control.reportKey.attributeId;\n    if (!zespInfo.Report[reportKey]) zespInfo.Report[reportKey] = {} as ZespReportInfo;\n  });\n\n  // try to autodetect layout by reports\n  const layout = settings.layout || layoutTools.autoDetect(zespInfo);\n\n  return {\n    zespInfo: zespInfo,\n    settings: {...settings, ...{layout: layout}},\n    customLayout: controls\n  };\n}\n\nexport default ServiceDevices;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {RootState} from \"../configure\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespReportUpdates} from \"../../services/zesp/service-root\";\n\nexport interface DevicesState {\n  devices: DeviceInfo[]\n}\n\nconst initialState: DevicesState = {\n  devices: []\n}\n\nexport const devicesSlice = createSlice({\n  name: \"devices\",\n  initialState,\n  reducers: {\n    setDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      state.devices = action.payload;\n    },\n    updateReport: (state, action: PayloadAction<{ ieee: string, reportKey: string, update: Partial<ZespReportInfo> }>): void => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Device '${action.payload.ieee}' not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report[action.payload.reportKey] = {...device.zespInfo.Report[action.payload.reportKey], ...action.payload.update};\n      // console.debug(`Device '${action.payload.ieee}' with report '${action.payload.reportKey}' has been updated`);\n    },\n    updateRootReports: (state, action: PayloadAction<ZespReportUpdates>) => {\n      const device = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = {...device.zespInfo.Report, ...action.payload} as { [reportId: string]: ZespReportInfo };\n    }\n  }\n})\n\nconst getters = {\n  getDeviceByIee: (state: RootState, ieee: string): DeviceInfo | undefined => state.devices.devices.find(x => x.zespInfo.IEEE === ieee),\n  getDevicesByModelId: (state: RootState, modelId: string): DeviceInfo[] => state.devices.devices.filter(x => x.zespInfo.ModelId === modelId),\n  getAllDevices: (state: RootState): DeviceInfo[] => state.devices.devices || [] as DeviceInfo[],\n}\n\nexport const {getDevicesByModelId, getDeviceByIee, getAllDevices} = getters;\nexport const {setDevices, updateReport, updateRootReports} = devicesSlice.actions;\nexport default devicesSlice.reducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\n\ninterface IState {\n  zespFirmwareUpdateInfo: DictionaryStrings | undefined,\n  zespFirmwareInstalledVersion: string,\n  zespSkipVersion: string | undefined,\n}\n\nconst initialState: IState = {\n  zespFirmwareUpdateInfo: undefined,\n  zespFirmwareInstalledVersion: \"-\",\n  zespSkipVersion: undefined,\n}\n\nexport const zespFirmwareSlice = createSlice({\n  name: \"zespFirmwareUpdate\",\n  initialState: initialState,\n  reducers: {\n    setZespFirmwareUpdate: (state, action: PayloadAction<DictionaryStrings>): void => {\n      state.zespFirmwareUpdateInfo = action.payload;\n    },\n\n    setZespFirmwareInstalledVersion: (state, action: PayloadAction<string>): void => {\n      state.zespFirmwareInstalledVersion = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespFirmwareUpdateInfo: (state: RootState) => state.zespFirmware.zespFirmwareUpdateInfo,\n  getZespFirmwareInstalledVersion: (state: RootState) => state.zespFirmware.zespFirmwareInstalledVersion,\n}\n\nexport const {getZespFirmwareUpdateInfo, getZespFirmwareInstalledVersion} = getters;\nexport const {setZespFirmwareUpdate, setZespFirmwareInstalledVersion} = zespFirmwareSlice.actions;\nexport default zespFirmwareSlice.reducer;","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespRootData} from \"./models/ZespRootData\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {getDeviceModelSettings} from \"./service-devices\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getRootDataAsync: (zesp: IZespConnector) => new Promise<ZespReportUpdates>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n    })\n      .then(event => {\n        const result = extractReports(event);\n\n        if (result) resolve(result);\n        else reject(\"Cannot update root device information\");\n      })\n      .catch(reason => reject(reason));\n  }),\n}\n\nexport type ZespReportUpdates = {\n  [key: string]: Partial<ZespReportInfo>\n}\n\nconst extractReports = (event: ZespDataEvent): ZespReportUpdates => {\n  const {controls} = getDeviceModelSettings(\"ZESP_Root\");\n  if (controls.length == 0) return {};\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const result: ZespReportUpdates = {};\n\n  const reportOnOff = controls.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) result[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId] = {val: data.on.toString()};\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = controls.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) result[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId] = {val: data.level.toString()};\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = controls.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) result[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId] = {val: `${data.B}:${data.G}:${data.R}`};\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = controls.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) result[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId] = {val: data.sound.volume.toString()};\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = controls.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) result[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId] = {val: data.sound.current_path?.toString()};\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = controls.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) result[playControl.endpoint + playControl.clusterId + playControl.attributeId] = {val: data.sound.play.toString()};\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  return result;\n}\n\n","import {ZespSettings} from \"./models/ZespSettings\";\nimport {JsonZespResponseValidator, TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport const useZespSettings = ({zespRequestAsync, zespSend}: IZespConnector) => {\n  const getAsync = (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    zespRequestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  })\n\n  const setAsync = (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      zespRequestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  }\n\n  const getCustomAsync = function getCustom<T>(name: string): Promise<T | undefined> {\n    return zespRequestAsync({\n      data: `LoadJson|/${name}.json`,\n      responseValidator: JsonZespResponseValidator(name)\n    })\n      .then(event => {\n        if (event.dataParts.length < 1) throw new Error(\"Unexpected JSON file response from ZESP\");\n        const jsonStr = event.dataParts[1];\n\n        if (!jsonStr || jsonStr.length === 0 || jsonStr.trim().toLocaleLowerCase() === \"null\") return undefined;\n        return JSON.parse(jsonStr) as T;\n      })\n  }\n\n  const setCustom = function setCustom<T>(name: string, data: T): void {\n    const fileName = `/${name}.json`;\n    const dataStr = JSON.stringify(data);\n\n    zespSend({\n      data: `SaveJson|${fileName}|${dataStr}`\n    });\n  }\n\n  const setUiSettings = (data: UiSettings): void => {\n    setCustom(\"zesp_ui\", data);\n  }\n\n  return {\n    getAsync,\n    setAsync,\n    getCustomAsync,\n    setCustom,\n    setUiSettings,\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n\nexport default useZespSettings;","import {FirmwareInfo} from \"../../models/FirmwareInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getFirmwareInfoAsync: (zesp: IZespConnector): Promise<FirmwareInfo> => zesp\n    .zespRequestAsync({\n      data: \"loadfwlist\",\n      responseValidator: TypedZespResponseValidator(\"rsploadfwlist\"),\n      timeoutSeconds: 15,\n    }).then(event => {\n      if (event.dataParts.length < 2) throw Error(\"Unexpected zesp firmware information response\");\n\n      const updates = JSON.parse(event.dataParts[0]) as DictionaryStrings[];\n      const currentVersion = event.dataParts[1];\n      if (!updates || updates.length === 0) throw Error(\"Unexpected zesp firmware udpates response\");\n      if (!currentVersion || currentVersion.length === 0) throw Error(\"Unexpected zesp current version response\");\n\n      const result: FirmwareInfo = {\n        currentVersion,\n        updatesInformation: updates[0]\n      };\n\n      return result;\n    }),\n}\n","import {DictionaryStrings} from \"./DictionaryStrings\";\n\nexport type UiSettings = {\n  firmwareUpdate: DictionaryStrings | undefined,\n  firmwareLastCheck: number | undefined,\n  firmwareSkipUpdate: string | undefined,\n}\n\nexport const UiDefaultSettings: UiSettings = {} as UiSettings;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {UiSettings} from \"../../models/UiSettings\";\n\ninterface IState {\n  zespSettings: ZespSettings | undefined,\n  uiSettings: UiSettings | undefined,\n}\n\nconst initialState: IState = {\n  zespSettings: undefined,\n  uiSettings: undefined,\n}\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setZespSettings: (state, action: PayloadAction<ZespSettings>): void => {\n      state.zespSettings = action.payload;\n    },\n\n    setUiSettings: (state, action: PayloadAction<UiSettings>): void => {\n      state.uiSettings = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespSettings: (state: RootState) => state.settings.zespSettings,\n  getUiSettings: (state: RootState) => state.settings.uiSettings,\n}\n\nexport const {getZespSettings, getUiSettings} = getters;\nexport const {setZespSettings, setUiSettings} = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, onReport))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const ieee = event.dataParts[1];\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportKey = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = {\n    parsed: data.parsed,\n    val: data.Data,\n    time: data.time,\n  } as Partial<ZespReportInfo>\n\n  onReport(ieee, reportKey, report);\n}","import {Dispatch} from \"redux\";\nimport {setConnectionStatus} from \"../../store/slices/zespSlice\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport ServiceDevices from \"../../services/zesp/service-devices\";\nimport {setDevices, updateReport, updateRootReports} from \"../../store/slices/devicesSlice\";\nimport {setZespFirmwareInstalledVersion, setZespFirmwareUpdate} from \"../../store/slices/zespFirmwareSlice\";\nimport ServiceRoot from \"../../services/zesp/service-root\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport ServiceFirmware from \"../../services/zesp/service-firmware\";\nimport {UiDefaultSettings, UiSettings} from \"../../models/UiSettings\";\nimport {setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {useRef} from \"react\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport ServiceUpdates from \"../../services/zesp/service-report-updates\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\n\nexport const useZespAgent = (dispatch: Dispatch, zesp: IZespConnector) => {\n  const uiSettingsRef = useRef<UiSettings>({} as UiSettings);\n  const firmwareUpdateMinTimout = 1000 * 60 * 60 * 24;\n\n  // init\n  const connectAsync = (server: IServerInfo): Promise<void> => zesp\n    .connectAsync(server, (status) => dispatch(setConnectionStatus(status)), false)\n\n  // read devices list\n  const getDevices = (): Promise<void> => ServiceDevices.getDevicesListAsync(zesp)\n    .then(result => {\n      dispatch(setDevices(result.devices));\n      if (result.zespVersion) dispatch(setZespFirmwareInstalledVersion(result.zespVersion));\n    });\n\n  // read root info\n  const getRoot = (): Promise<void> => ServiceRoot\n    .getRootDataAsync(zesp)\n    .then(reports => {\n      dispatch(updateRootReports(reports))\n      console.debug(\"Root device reports updated\");\n    });\n\n  // read ui settings\n  const readUiSettings = (): Promise<void> => useZespSettings(zesp)\n    .getCustomAsync<UiSettings>(\"zesp_ui\")\n    .then(settings => {\n      const result = settings || UiDefaultSettings;\n      dispatch(setUiSettings(result))\n      uiSettingsRef.current = result;\n    })\n\n  // private firmware updates downloading\n  const _getFirmware = (): void => {\n    ServiceFirmware\n      .getFirmwareInfoAsync(zesp)\n      .then(firmwareInfo => {\n        dispatch(setZespFirmwareInstalledVersion(firmwareInfo.currentVersion));\n        dispatch(setZespFirmwareUpdate(firmwareInfo.updatesInformation));\n\n        uiSettingsRef.current = {...uiSettingsRef.current, ...{firmwareUpdate: firmwareInfo.updatesInformation, firmwareLastCheck: Date.now()}};\n        useZespSettings(zesp).setCustom(\"zesp_ui\", uiSettingsRef.current);\n\n        dispatch(setUiSettings(uiSettingsRef.current));\n        console.debug(\"Firmware updates information loaded\");\n      })\n      .catch(reason => {\n        console.warn(\"Cannot read Firmware update information\");\n        console.warn(reason);\n      });\n  }\n\n  // read firmware updates\n  const readFirmwareUpdates = (): Promise<void> => {\n    const uiSettings = uiSettingsRef.current\n    if (!uiSettings) throw new Error(\"Read UI settings before firmware checking\");\n\n    if (uiSettings.firmwareUpdate && uiSettings.firmwareLastCheck && (Date.now() - uiSettings.firmwareLastCheck) < firmwareUpdateMinTimout) {\n      dispatch(setZespFirmwareUpdate(uiSettings.firmwareUpdate));\n      console.debug(\"Firmware information read from settings\");\n      return Promise.resolve();\n    }\n\n    // run firmware loading in background\n    _getFirmware();\n\n    return Promise.resolve();\n  }\n\n  // subscribe to report updates events\n  const subscribeReportUpdates = (): Promise<void> => {\n    const onReport = (ieee: string, reportKey: string, update: Partial<ZespReportInfo>) =>\n      dispatch(updateReport({ieee, reportKey, update}));\n\n    ServiceUpdates.subscribeToEvents(zesp, onReport);\n    return Promise.resolve();\n  }\n\n  return {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n  }\n}\n\nexport default useZespAgent;","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 100,\n\n  // connection verify interval\n  RestartConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n\n  // connection checker interval, should be greater then 'DefaultRequestTimeoutSeconds' \n  WatcherIntervalSeconds: 15,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\nimport Constants from \"./Constants\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IRequestAsyncArgs, ISendArgs, ZespConnectedAction, ZespConnectorHandler, ZespConnectorListener} from \"./service-connector.interfaces\";\nimport {AllMessagesZespResponseValidator} from \"./ZespResponseValidators\";\n\nexport const useZespConnector = () => {\n  const _onMessageEvent = new EventTarget();\n  let _ws: Websocket | undefined = undefined;\n  let _server: IServerInfo | undefined;\n  let _lastMessageTimestamp: number = Date.now();\n  let _watcher: NodeJS.Timeout | undefined = undefined;\n\n  const _onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n    _lastMessageTimestamp = Date.now();\n    const messageParts = e.data\n      .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n      .split(\"\\x00\");\n\n    if (messageParts.length == 0) {\n      console.warn(\"Received empty message from zesp\");\n      return;\n    }\n\n    let messageType = messageParts.shift();\n\n    const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n    if (jsonMatch) {\n      messageParts.unshift(messageType);\n      messageType = \"json\";\n    }\n\n    const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n    _onMessageEvent.dispatchEvent(resultEvent);\n  }\n\n  const _tryToCloseWS = (): boolean => {\n    if (_ws) {\n      try {\n        _ws.close(1000);\n        return true;\n      } catch {\n        // it's ok :P\n      }\n    }\n    return false;\n  }\n\n  const _tryConnectWs = (zespStatusChangeHandler: ZespConnectedAction) => new Promise<void>((resolve, reject) => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const serverAddress = `${protocol}://${_server!.address}:81`;\n    console.debug(`Create connection to ${serverAddress}`)\n    _ws = new WebsocketBuilder(serverAddress)\n      .onOpen(() => {\n        console.debug(\"ZESP connected\");\n        zespStatusChangeHandler(\"connected\");\n        resolve();\n      })\n      .onClose(() => {\n        console.debug(\"ZESP connection closed\");\n        zespStatusChangeHandler(\"closed\");\n        reject(\"ZESP connection closed\");\n      })\n      .onError(() => reject(\"ZESP connection error\"))\n      .onMessage(_onMessageReceived)\n      .build();\n  });\n\n  const _getBinaryData = (message: string): Uint8Array => {\n    const data = message.replaceAll(\" \", \"\");\n    const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    return new Uint8Array(dataHex);\n  }\n\n  const _pingAsync = (): Promise<ZespDataEvent> =>\n    zespRequestAsync({data: \"LoadJson|/ping.json\", responseValidator: AllMessagesZespResponseValidator})\n\n  const _runWatcher = (zespStatusChangeHandler: ZespConnectedAction): Promise<void> => {\n    if (_watcher) {\n      console.debug(\"Stop old watcher\");\n      clearInterval(_watcher);\n    }\n\n    console.debug(\"Start watcher\");\n    _watcher = setInterval(() => {\n      if (_ws?.underlyingWebsocket?.readyState !== 1) return;\n\n      const periodWithoutMessageSeconds = (Date.now() - _lastMessageTimestamp) / 1000;\n      if (periodWithoutMessageSeconds > Constants.WatcherIntervalSeconds) {\n        _lastMessageTimestamp = Date.now() + Constants.DefaultRequestTimeoutSeconds * 1000;\n        if (_watcher) clearInterval(_watcher); // stop watcher until 'ping' finished\n        \n        _pingAsync()\n          .then(() => _runWatcher(zespStatusChangeHandler)) // everything fine, continue watching\n          .catch(() => zespStatusChangeHandler(\"reconnect\")); // oops, try to restart. Do not start watcher at the moment\n      }\n    }, 5000);\n\n    return Promise.resolve();\n  }\n\n  const connectAsync = (server: IServerInfo, zespStatusChangeHandler: ZespConnectedAction, force: boolean) => {\n    _server = server;\n    return new Promise<void>((resolve, reject) => {\n      console.debug(\"Start WS connection...\");\n\n      if (!force) {\n        if (_ws?.underlyingWebsocket?.readyState === 0) {\n          reject(\"Already connecting\");\n          return;\n        }\n\n        if (_ws?.underlyingWebsocket?.readyState === 1) {\n          console.debug(\"ZESP already connected, skip connection\");\n          resolve();\n          return;\n        }\n      }\n\n      _tryToCloseWS();\n      _tryConnectWs(zespStatusChangeHandler)\n        .then(() => _runWatcher(zespStatusChangeHandler))\n        .then(resolve)\n        .catch(reject);\n    })\n  }\n\n  const zespSend = (args: ISendArgs): void => {\n    if (!_ws) {\n      console.warn(\"WebSocket client is not initialized yet\");\n      return;\n    }\n\n    const data = args.isBinary === true\n      ? _getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  }\n\n  const zespRequestAsync = (args: IRequestAsyncArgs) => new Promise<ZespDataEvent>((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      _onMessageEvent.addEventListener(ZespDataEventType, listener);\n      zespSend({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })\n\n  const subscribe = (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    _onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  }\n\n  const unsubscribe = (listener: ZespConnectorListener) => _onMessageEvent.removeEventListener(ZespDataEventType, listener)\n\n  const getServerAddress = () => _server?.address;\n\n  return {\n    connectAsync,\n    zespSend,\n    zespRequestAsync,\n    subscribe,\n    unsubscribe,\n    getServerAddress,\n  }\n}\n\nexport default useZespConnector;","import React, {Fragment, useContext, useEffect, useRef, useState} from \"react\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStatus, setConnectionStatus, setInitialized} from \"store/slices/zespSlice\";\nimport useZespAgent from \"./ZespAgent.hook\";\nimport useZespConnector from \"../../services/zesp/common/service-connector\";\nimport Constants from \"../../services/zesp/common/Constants\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\n\ninterface IProps {\n  server: IServerInfo\n}\n\nexport const ZespContext = React.createContext<IZespConnector>(useZespConnector());\n\nexport const ZespAgent: React.FC<IProps> = ({server, children})\n  : React.ReactElement => {\n  const dispatch = useDispatch();\n  const zespStatus = useSelector(getStatus);\n  const [zesp, setZesp] = useState(useContext(ZespContext));\n  const _restartTimerRef = useRef<NodeJS.Timeout | undefined>(undefined);\n\n  useEffect(() => {\n    if (zespStatus === \"reconnect\") {\n      setZesp(useZespConnector());\n      dispatch(setConnectionStatus(\"disconnected\"));\n    }\n\n    console.log(`ZESP agent status: ${zespStatus}`);\n  }, [zespStatus])\n\n  const {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n  } = useZespAgent(dispatch, zesp);\n\n  if (zespStatus === \"connected\") return (\n    <ZespContext.Provider value={zesp}>\n      {children}\n    </ZespContext.Provider>\n  );\n\n  if (zespStatus === \"closed\") {\n    if (_restartTimerRef.current) {\n      clearTimeout(_restartTimerRef.current);\n      _restartTimerRef.current = undefined;\n    }\n\n    _restartTimerRef.current = setTimeout(() => {\n      if (zespStatus === \"closed\") {\n        dispatch(setConnectionStatus(\"reconnect\"));\n      } else {\n        console.debug(`Cancel restarting, cause status: ${zespStatus}`);\n      }\n    }, Constants.RestartConnectionTimeout);\n  }\n\n  if (zespStatus !== \"disconnected\") return (<Fragment/>);\n  dispatch(setConnectionStatus(\"connecting\"));\n  connectAsync(server)\n    .then(getDevices)\n    .then(getRoot)\n    .then(readUiSettings)\n    .then(readFirmwareUpdates)\n    .then(subscribeReportUpdates)\n\n    // final steps\n    .then(() => dispatch(setInitialized(true)))\n    .catch(reason => console.error(reason))\n    .finally(() => {\n      setZesp(zesp);\n      console.debug(\"ZESP initialization completed\");\n    });\n\n  return (<Fragment/>);\n}\n","import React, {useContext, useState} from \"react\";\nimport {AppDialog} from \"../app-dialog\";\nimport {Button} from \"react-bootstrap\";\nimport {useDispatch} from \"react-redux\";\nimport {setSpinner} from \"../../store/slices/spinnerSlice\";\nimport {ZespContext} from \"../agents/ZespAgent\";\n\nexport const PowerDialogLink: React.FC = (): React.ReactElement => {\n  const [show, setShow] = useState(false);\n  const {zespSend} = useContext(ZespContext);\n  const dispatch = useDispatch();\n\n  const showPowerDialogClickHandler = () => setShow(true);\n\n  const onRestartClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Restarting, please wait...\"}));\n    setShow(false);\n    zespSend({data: \"RebootESP\"});\n  };\n\n  const onShutdownClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Shutting down...\"}));\n    // dispatch(setConnectionStatus(\"reconnect\"));\n    setShow(false);\n    setTimeout(() => document.location.href = \"/\", 2000);\n    zespSend({data: \"Shutdown\"});\n  };\n\n  const navLink = (<span className=\"nav-link clickable\" onClick={showPowerDialogClickHandler}><i className=\"bi bi-power\"/></span>)\n  const buttons = (\n    <>\n      <Button onClick={onRestartClickedHandler}>Restart ZESP</Button>\n      <Button onClick={onShutdownClickedHandler} variant=\"secondary\">Shutdown</Button>\n    </>\n  );\n\n  return (\n    <>\n      {navLink}\n      <AppDialog title=\"Power management\" show={show} setShow={setShow} footer={buttons}>\n        <div className=\"mb-3\">Restart of ZESP service can take a few minutes. This page will be reloaded automatically when restart completed.</div>\n        <div>To shutdown, just click Shutdown button. But this is way with one direction, make sure you know what are you doing.</div>\n      </AppDialog>\n    </>\n  )\n}\n\nexport default PowerDialogLink;","import React from 'react';\nimport './styles.scss'\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\nimport PowerDialogLink from \"../power-dialog\";\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center pe-2\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n      <div className=\"border-start mx-3 opacity-25\"/>\n      <PowerDialogLink/>\n    </nav>\n  );\n};\n\nexport default Result;","import React from \"react\";\nimport \"./styles.scss\"\nimport {Modal, Spinner} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\nimport {getSpinner} from \"../../store/slices/spinnerSlice\";\n\nconst LoadingSpinner = () => {\n  const {spinnerShow, spinnerMessage} = useSelector(getSpinner);\n\n  return (\n    <Modal show={spinnerShow} centered size=\"sm\" backdrop={true}>\n      <Modal.Body>\n        <div className=\"d-flex align-items-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"me-3\"/>\n          <div>{spinnerMessage}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default LoadingSpinner;","import {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: FunctionComponent = (props) => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={className}>\n      {props.children}\n    </div>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nconst defaultImage = \"/device-images/default.png\";\n\nexport default (props: IProps) => {\n  const [image, setImage] = useState(props.device.image);\n\n  useEffect(() => {\n    const testImage = new Image();\n    testImage.onerror = () => {\n      setImage(defaultImage);\n    }\n    testImage.src = image;\n  }, []);\n\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${image})`}}/>);\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {Col} from \"react-bootstrap\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nexport default (props: IProps) => {\n  const {device} = props;\n  const detailsLink = `/devices/${device.ieee}`;\n\n  return (\n    <Col xs={12} sm={6} lg={4} xxl={3} className=\"p-1\">\n      <NavLink className=\"item p-3 border rounded d-block\" to={detailsLink}>\n        <div className=\"d-flex\">\n          <div><ItemImage device={props.device}/></div>\n          <div className=\"ps-2\">\n            <div className=\"title\">{device.title}</div>\n            <div className=\"ieee text-muted small\">{device.ieee}</div>\n            {device.tags.length > 0 && (\n              <div className=\"badges small\">\n                {device.tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n              </div>\n            )}\n          </div>\n        </div>\n      </NavLink>\n    </Col>\n  );\n}\n","import {DataControlSettings, DataLayoutItemsGroup} from \"../models/DataControlSettings\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout && device.customLayout.length > 0\n      ? device.customLayout\n      : buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string, deviceType: string): ReportKeyInfo | undefined => {\n    if (!deviceType || deviceType === \"ZED\" || deviceType === \"ZR\") {\n      if (reportKey?.length !== 10) // 01 0000 0000\n      {\n        console.warn(`Unknown format of Zigbee report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: reportKey.substr(0, 2),\n        clusterId: reportKey.substr(2, 4),\n        attributeId: reportKey.substr(6),\n      }\n    }\n\n    if (deviceType === \"BED\") {\n      if (reportKey?.length < 1) // a-ny-thing\n      {\n        console.warn(`Unknown format of BLE report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: \"\",\n        clusterId: reportKey,\n        attributeId: \"\",\n      }\n    }\n\n    console.warn(`Unknown device type '${deviceType}'`);\n    return undefined;\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataControlSettings[] => {\n  const getLayoutItem = (reportKey: string): DataControlSettings | undefined => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey, device.zespInfo.DevType);\n    if (!reportKeyInfo) {\n      console.warn(`Cannot get report key details for '${device.zespInfo.IEEE}' device`);\n      return undefined;\n    }\n\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataControlSettings;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey, device.zespInfo.DevType)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key)).filter(x => x !== undefined) as DataControlSettings[];\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string, deviceType: string): DataControlSettings | undefined => {\n  // return undefined;\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey, deviceType);\n  if (!reportKeyInfo) return undefined;\n\n  const roleName = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: roleName} as DataControlSettings // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${roleName}`]\n    || dataCluster.attributes[roleName]\n    || {id: roleName} as DataControlSettings; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","import React, {useContext} from \"react\";\nimport \"./styles.scss\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card, Row} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {useTranslation} from \"react-i18next\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\nimport {Devices} from \"../../services/devices\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {getAllDevices} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result: React.FC = (): React.ReactElement => {\n  const {getServerAddress} = useContext(ZespContext);\n  const devices = useSelector(getAllDevices, (a: DeviceInfo[], b: DeviceInfo[]) => a.length === b.length);\n  if (devices.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  console.debug(\"Building list of devices to show...\");\n  const serverAddress = getServerAddress() || \"/\";\n  const deviceItems = [...devices]\n    .sort(devicesSorting)\n    .map(x => buildListItem(x, serverAddress));\n\n  console.debug(\"devices page updated...\");\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <DevicesList devices={deviceItems}/>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nconst DevicesList = (props: { devices: DeviceListItem[] }) => {\n  const {t} = useTranslation(\"pages.devices\");\n  const {devices} = props;\n\n  return (\n    <div className=\"group border-top pt-4\">\n      <div className=\"title h5 pb-3\">\n        <span>{t(\"groups.all\")}</span>\n        {devices.length > 1 && (<span className=\"badge bg-secondary ms-2\">{devices.length}</span>)}\n      </div>\n      <Row className=\"items\">\n        {devices.map((device, i) => (<Item device={device} key={i}/>))}\n      </Row>\n    </div>\n  );\n}\n\nconst devicesSorting = (a: DeviceInfo, b: DeviceInfo): number => {\n  if (a.zespInfo.ModelId === \"ZESP_Root\") return -1;\n  if (b.zespInfo.ModelId === \"ZESP_Root\") return 1;\n\n  if (a.zespInfo.ModelId < b.zespInfo.ModelId) return -1;\n  if (a.zespInfo.ModelId > b.zespInfo.ModelId) return 1;\n\n  return 0;\n}\n\nconst buildListItem = (device: DeviceInfo, serverAddress: string): DeviceListItem => {\n  const title = device.zespInfo.Name && device.zespInfo.Name.length > 0 ? device.zespInfo.Name : device.zespInfo.ModelId;\n  const image = getImageUrl(device, serverAddress);\n  const tags = getTagsFromReports(device.zespInfo.Report, device.zespInfo.DevType);\n\n  return {\n    title,\n    ieee: device.zespInfo.IEEE,\n    image,\n    tags\n  };\n}\n\nconst getImageUrl = (device: DeviceInfo, serverAddress: string): string => {\n  // device.settings?.image || device.zespInfo.Img\n  if (device.settings?.image)\n    return `${process.env.PUBLIC_URL}/device-images/${device.settings.image}`;\n\n  if (device.zespInfo.Img)\n    return `http://${serverAddress}:8081/${device.zespInfo.Img}`\n\n  const modelId = device.zespInfo.ModelId;\n  return `http://${serverAddress}:8081/img/${modelId}.jpg`;\n}\n\nconst getTagsFromReports = (reports: { [key: string]: ZespReportInfo }, deviceType: string): string[] => {\n  const result: string[] = [];\n\n  for (const key of Object.keys(reports)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key, deviceType);\n\n    if (!reportKeyDetails) {\n      console.warn(`Cannot read report '${key}' details for '${deviceType}' device type`);\n      continue;\n    }\n\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    result.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  return result\n    .filter((x, i) => result.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n}\n\nexport default Result;\n","import React, {Fragment, useContext, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setSpinnerShow} from \"../../store/slices/spinnerSlice\"\nimport {setZespSettings, getZespSettings} from \"../../store/slices/settingsSlice\"\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const settings = useSelector(getZespSettings);\n  const {getAsync} = useZespSettings(zesp);\n\n  useEffect(() => {\n    dispatch(setSpinnerShow(true));\n\n    getAsync()\n      .then(data => {\n        dispatch(setZespSettings(data));\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  }, []);\n\n  if (!settings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/firmware\">Firmware manager</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (\n  data: Partial<ZespSettings>,\n  settings: ZespSettings | undefined,\n  dispatch: Dispatch,\n  setAsync: { (settings: ZespSettings): Promise<void> }) =>\n  new Promise<void>((resolve, reject) => {\n    if (!settings) reject(\"Settings not loaded\");\n    dispatch(setSpinnerShow(true));\n\n    const updatedSettings: ZespSettings = ({...settings, ...data}) as ZespSettings;\n    setAsync(updatedSettings)\n      .then(() => {\n        dispatch(setZespSettings(updatedSettings));\n        resolve();\n        toast.success(\"Settings updated\");\n      })\n      .catch(reason => {\n        toast.error(`Cannot save: ${reason}`);\n        reject(reason);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  })\n\nexport default Result;","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClicked: () => void,\n  onDetailsClicked?: () => void,\n}) => {\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  return (\n    <Modal.Header className={headerClassName}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        {props.onDetailsClicked && (<button type=\"button\" className=\"btn\" onClick={props.onDetailsClicked}><i className=\"bi bi-three-dots-vertical\"/></button>)}\n        <span className=\"border-end ms-2 me-3\"/>\n        <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={props.onCloseClicked}/>\n      </div>\n    </Modal.Header>\n  )\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React, {FunctionComponent} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {DefaultLayout} from \"../../device-controls/layouts/DefaultLayout\";\nimport {layoutsAvailable} from \"../../device-controls/layouts\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  const layoutProps: LayoutProps = {\n    device: props.device,\n    settings: group.settings\n  };\n\n  const layoutName = props.device.settings?.layout || \"default\";\n  const LayoutElements: FunctionComponent<LayoutProps> = layoutsAvailable[layoutName] || DefaultLayout;\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      <LayoutElements {...layoutProps}/>\n    </Modal.Body>\n  )\n}","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Modal} from \"react-bootstrap\";\nimport {Devices} from \"../../services/devices\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport toast from \"react-hot-toast\";\nimport {getDeviceByIee} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/configure\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default () => {\n  const {ieee} = useParams<{ ieee: string }>();\n  const [show, setShow] = useState(true);\n  const history = useHistory();\n  const deviceInfo = useSelector((state: RootState) => getDeviceByIee(state, ieee), (a: DeviceInfo | undefined, b: DeviceInfo | undefined) => {\n    if (!a || !b) return false;\n    const keysA = Object.keys(a.zespInfo.Report);\n    const keysB = Object.keys(b.zespInfo.Report);\n\n    if (keysA.length != keysB.length) return false;\n    for (const key of keysA)\n      if (a.zespInfo.Report[key] !== b.zespInfo.Report[key]) return false;\n\n    return true;\n  });\n\n  if (!deviceInfo) return (<CustomDeviceNotFound/>);\n\n  const groups = Devices.getControlGroups(deviceInfo);\n  if (!groups || groups.length === 0) {\n    console.warn(`No controls found for '${deviceInfo.zespInfo.IEEE}' device`);\n    return (<CustomDeviceNotFound/>);\n  }\n\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const handleClose = () => setShow(false);\n  const handleExit = () => setTimeout(() => history.push(\"/devices\"), 100);\n  const handleDetails = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for logs\", {icon: \"👽\"});\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} onExited={handleExit}>\n      <CustomHeader\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}\n        setActiveGroupName={setActiveGroupName}\n        onCloseClicked={handleClose}\n        onDetailsClicked={handleDetails}\n      />\n\n      <CustomBody\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}/>\n    </Modal>\n  )\n}\n","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\", \"LoadJson|/zesp_ui.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default (): React.ReactElement => {\n  const {zespSend, subscribe, unsubscribe} = useContext(ZespContext);\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n  const [repsPaused, _setRepsPaused] = useState<boolean>(true);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n  const repsPausedRef = useRef(repsPaused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    if (repsPausedRef.current && (\n      message.startsWith(\"rep|\") ||\n      message.startsWith(\"ArBle|\")\n    )) return;\n\n    const data: string[] = [message.substr(0, 500), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const toggleRepsPause = () => {\n    const data = !repsPausedRef.current;\n    repsPausedRef.current = data;\n    _setRepsPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    zespSend({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    zespSend({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n          <button className={`btn btn-outline-${repsPaused ? \"secondary\" : \"info\"} ms-3 btn-sm float-end`}\n                  onClick={() => toggleRepsPause()}>{repsPaused ? \"REPs disabled\" : \"REPs enabled\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React, {useContext} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.MQTT;\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment, useContext} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n\n  if (!allSettings) return (<Fragment/>);\n  const settings = allSettings.Wifi;\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\nimport {getInitialized} from \"./store/slices/zespSlice\"\nimport {setSpinnerShow} from \"./store/slices/spinnerSlice\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const Routes = () => {\n  const isInitialized = useSelector(getInitialized);\n  const dispatch = useDispatch();\n\n  if (!isInitialized) {\n    // return (<div>Initialization...</div>);\n    setTimeout(() => dispatch(setSpinnerShow(true)), 0);\n    return (<Fragment/>);\n  }\n\n  setTimeout(() => dispatch(setSpinnerShow(false)), 300);\n\n  return (\n    <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee\" component={DeviceInfoPage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/firmware\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\n\ninterface IProps {\n  setServerIndex: (index: number) => void\n}\n\nexport const WelcomePage: FunctionComponent<IProps> = (props: IProps) => {\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => props.setServerIndex(index);\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import React, {useContext, useState} from \"react\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {Col, Modal, Row} from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUiSettings, setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {ZespContext} from \"../agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\ninterface IProps {\n  zespFirmwareUpdate: DictionaryStrings,\n  zespFirmwareCurrentVersion: string,\n  onClosed: () => void,\n}\n\nconst UpdatesNotificationDialog: React.FC<IProps> = ({\n  onClosed,\n  zespFirmwareUpdate,\n  zespFirmwareCurrentVersion\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const SettingsService = useZespSettings(zesp);\n  const uiSettings = useSelector(getUiSettings);\n  const zespFirmwareUpdateVersion = zespFirmwareUpdate[\"ver\"] || \"unknown\";\n\n  const onHideHandler = () => setShow(false);\n\n  const updateData: DictionaryStrings = {\n    ...{\"Current version\": zespFirmwareCurrentVersion},\n    ...{\"New version\": zespFirmwareUpdateVersion},\n    ...{...zespFirmwareUpdate, ...{\"ver\": undefined}} // skip ver from \"other\" properties, cause we'll show it before\n  }\n  const onUpdateClickHandler = () => {\n    toast.success(\"Not implemented yet...\", {icon: (<i className=\"bi bi-cone-striped text-warning\"/>)});\n  }\n\n  const onSkipClickHandler = () => {\n    const update: UiSettings = {...uiSettings || {} as UiSettings, ...{firmwareSkipUpdate: zespFirmwareUpdateVersion}};\n\n    dispatch(setUiSettings(update));\n    SettingsService.setUiSettings(update);\n\n    toast.success(\"Notification for this version disabled\", {icon: (<i className=\"bi bi-bell-slash-fill text-success\"/>)});\n  }\n\n  return (\n    <Modal show={show} onExited={onClosed} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>New version of ZESP Firmware</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        <div className=\"rows-striped\">\n          {Object.keys(updateData).map((key, i) => {\n            return updateData[key]\n              && updateData[key]!.trim().length > 0\n              && (<Row key={i}><Col xs={4} className=\"py-2 text-capitalize text-muted text-end\">{key}</Col><Col className=\"py-2 text-dark\">{updateData[key]}</Col></Row>);\n          })}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button className=\"btn btn-primary\" onClick={onUpdateClickHandler}>Download and Update</button>\n        <button className=\"btn btn-secondary\" onClick={onSkipClickHandler}>Skip this version</button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default UpdatesNotificationDialog;","import React, {Fragment, useState} from \"react\";\nimport UpdatesNotificationDialog from \"./UpdatesNotificationDialog\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion, getZespFirmwareUpdateInfo} from \"../../store/slices/zespFirmwareSlice\";\nimport {getUiSettings} from \"../../store/slices/settingsSlice\";\n\nexport const UpdatesNotification: React.FC = (): React.ReactElement => {\n  const zespFirmwareUpdate = useSelector(getZespFirmwareUpdateInfo);\n  const zespCurrentVersion = useSelector(getZespFirmwareInstalledVersion);\n  const uiSettings = useSelector(getUiSettings);\n  const [showDialog, setShowDialog] = useState(false);\n\n  if (!zespFirmwareUpdate\n    || zespFirmwareUpdate[\"ver\"] === zespCurrentVersion\n    || uiSettings?.firmwareSkipUpdate === zespFirmwareUpdate[\"ver\"]) return (<Fragment/>);\n\n  const title = `${zespCurrentVersion} to ${zespFirmwareUpdate[\"ver\"]} update`;\n  const onUpdatesClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  return (\n    <div>\n      <span onClick={onUpdatesClickedHandler} className=\"badge bg-info ms-3 notification-updates clickable\" title={title}>\n        <i className=\"bi bi-cloud-arrow-down-fill\"/>\n      </span>\n      {showDialog && (<UpdatesNotificationDialog\n        onClosed={() => setShowDialog(false)}\n        zespFirmwareUpdate={zespFirmwareUpdate}\n        zespFirmwareCurrentVersion={zespCurrentVersion}/>)}\n    </div>\n  )\n}\n\nexport default UpdatesNotification;","import React from \"react\";\nimport \"./styles.scss\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion} from \"../../store/slices/zespFirmwareSlice\";\n\nexport const AppFooter: React.FC = (): React.ReactElement => {\n  const uiVersion = \"0.0.1 alfa\";\n  const zespVersion = useSelector(getZespFirmwareInstalledVersion);\n\n  return (\n    <footer className=\"app-footer my-3\">\n      <div className=\"d-flex justify-content-center\">\n        <div><a href=\"https://github.com/NickRimmer/zesp-ui\" target={\"_blank\"} rel=\"noreferrer\">ZESP UI<i className=\"bi bi-github ms-2\"/></a></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div>UI <span className=\"highlight\">{uiVersion}</span></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div><a href=\"https://t.me/zesp32\" target={\"_blank\"} rel=\"noreferrer\">ZESP</a> <span className=\"highlight\">{zespVersion}</span></div>\n      </div>\n    </footer>\n  )\n}\n\nexport default AppFooter;","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport TopMenu from \"./shared/top-menu\";\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport {ZespAgent} from \"./shared/agents/ZespAgent\";\nimport {UpdatesNotification} from \"./shared/updates-notification\";\nimport {AppFooter} from \"./shared/footer\";\n\nconst Content = () => {\n  const [serverIndex, setServerIndex] = useState<number | null>(null);\n  const serversString = window.localStorage.getItem(\"servers\");\n  const servers = (serversString && JSON.parse(serversString)) || [];\n  const selectedServer = (serverIndex === null || servers.length <= serverIndex!)\n    ? null\n    : servers[serverIndex!];\n\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage setServerIndex={setServerIndex}/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  return (\n    <ZespAgent server={props.server}>\n      <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <header className=\"masthead\">\n          <a href=\"/\"><h3 className=\"masthead-brand\">ZESP:UI</h3></a>\n          <div className=\"d-flex flex-row align-items-center\">\n            <TopMenu/>\n            <UpdatesNotification/>\n          </div>\n        </header>\n        <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n          <Routes/>\n        </main>\n        <AppFooter/>\n      </div>\n    </ZespAgent>\n  )\n}\n\nconst Result = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Content/>\n        </Switch>\n      </Router>\n\n      <LoadingSpinner/>\n      <Toaster/>\n    </>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport zespReducer from \"./slices/zespSlice\";\nimport devicesReducer from \"./slices/devicesSlice\";\nimport spinnerReducer from \"./slices/spinnerSlice\";\nimport settingsReducer from \"./slices/settingsSlice\";\nimport zespFirmwareReducer from \"./slices/zespFirmwareSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    zesp: zespReducer,\n    devices: devicesReducer,\n    spinner: spinnerReducer,\n    settings: settingsReducer,\n    zespFirmware: zespFirmwareReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/configure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n                console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;"],"sourceRoot":""}