{"version":3,"sources":["i18n/config.js","loader.js","i18n sync /^.*$","data/controls sync /^/.//.*$","store/slices/spinnerSlice.tsx","shared/loading-spinner/index.tsx","shared/fadein-transition/index.tsx","store/slices/zespSlice.tsx","services/zesp/common/ZespResponseValidators.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/unknown.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/controls/OnOffToggle.tsx","device-controls/index.tsx","device-controls/layouts/DefaultLayout.tsx","device-controls/layouts/binary-sensor/index.tsx","device-controls/layouts/index.tsx","device-controls/layouts/ble-beacon/index.tsx","device-controls/layouts/binary-sensor/auto.tsx","device-controls/layouts/ble-beacon/auto.tsx","services/zesp/service-devices.tsx","store/slices/devicesSlice.tsx","store/slices/zespFirmwareSlice.tsx","services/zesp/service-root.tsx","services/zesp/zespSettings.hook.tsx","services/zesp/service-firmware.tsx","models/UiSettings.tsx","store/slices/settingsSlice.tsx","services/zesp/service-report-updates.tsx","shared/agents/ZespAgent.hook.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","services/zesp/common/service-connector.tsx","shared/agents/ZespAgent.tsx","services/devices.tsx","pages/devices/hook.tsx","pages/devices/item-image.tsx","pages/devices/item.tsx","shared/app-dialog/index.tsx","pages/devices/add-zigbee-dialog/index.tsx","pages/devices/add-zigbee-dialog/hook.tsx","pages/devices/add-buttons/index.tsx","pages/devices/add-buttons/hook.tsx","pages/devices/index.tsx","pages/setup/index.tsx","pages/device-info/hook.tsx","pages/device-info/header.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","pages/device-info/settings/index.tsx","pages/device-info/settings/hook.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","shared/footer/AppFooter.tsx","shared/power-dialog/index.tsx","shared/top-menu/index.tsx","shared/updates-notification/UpdatesNotificationDialog.tsx","shared/updates-notification/UpdatesNotification.tsx","shared/header/index.tsx","App.tsx","reportWebVitals.ts","store/configure.tsx","index.tsx"],"names":["languages","namespaces","i18n","use","initReactI18next","init","fallbackLng","lng","resources","result","lang","ns","path","replace","require","error","console","debug","loadResources","defaultNS","window","$","jQuery","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","spinnerShow","spinnerMessage","spinnerSlice","createSlice","name","reducers","setSpinnerShow","state","action","payload","setSpinner","show","message","getSpinner","spinner","actions","LoadingSpinner","useSelector","Modal","centered","size","backdrop","Body","className","Spinner","animation","variant","FadeIn","props","useState","setClassName","setTimeout","children","zespSlice","connectionStatus","initialized","setConnectionStatus","setInitialized","getStatus","zesp","getInitialized","JsonZespResponseValidator","fileName","isValid","event","dataType","responseFileName","dataParts","exec","TypedZespResponseValidator","AllMessagesZespResponseValidator","DeviceControls","config","reportKey","deviceInfo","zespInfo","IEEE","endpoint","clusterId","attributeId","Report","layoutId","settings","customLayout","find","x","undefined","OnOffRoot","zespSend","useContext","ZespContext","report","Row","ButtonGroup","Button","val","toString","onClick","data","arguments","commandOn","isBinary","commandOff","LevelRoot","currentValue","Number","max","min","value","setValue","minMaxAttributes","inRange","Math","FormControl","style","width","type","onChange","command","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","key","initialValue","readValue","item","localStorage","getItem","JSON","parse","warn","storedValue","setStoredValue","useEffect","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","RgbRoot","split","length","r","g","b","color","setColor","colorPicker","setColorPicker","colorChangeHandler","rgb","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","Transition","onRefresh","classNameFrom","onLoad","classNameTo","timeOutMs","HighlightOnUpdate","UnknownControl","showDetails","setShowDetails","configData","reportData","label","parsed","trim","roleParts","role","roleSettings","units","preventDefault","href","title","NoReport","IlluminanceSensor","parseInt","LevelControl","sendValueToZesp","formatCommand","Device","PlayerSrcRoot","srcReport","playSettings","playReport","toast","src","setSrc","play","setPlay","list","placeholder","icon","i","OnOffBinarySensor","payloadOn","zespRoleSettings","ValueSensor","unit","OnOffToggle","commandToggle","DeviceControlCol1","Col","md","DeviceControlCol2","DefaultLayout","controls","unknown","forEach","control","controlProps","element","getControlForDevice","device","push","showUnknown","setShowUnknown","reportKeysValue","reportKeysBattery","deviceClasses","batteryValuesRange","getValueSettings","onOffReport","getReport","iconClassName","icons","onFalse","valueClassName","valueTitle","statusValue","status","deviceClass","valueSettings","onTrue","styles","titles","getBatterySettings","stateClassName","valuePercents","valueString","valueNumber","round","oneOfKeys","layoutsAvailable","default","binarySensorLayout","battery","bleBeacon","isInRange","signalLevel","lastUpdateMs","time","lastDate","Date","calculateRelative","now","relative","setRelative","timer","setInterval","clearInterval","lastUpdateStyle","rangeStyle","toLocaleDateString","toLocaleTimeString","autoDetectors","valueReportKey","layoutTools","binarySensorValueKeys","batteryReportKey","binarySensorBatteryKeys","roleDeviceClassIs","DevType","class","rangeReport","signalReport","autoDetect","layout","autoDetector","expectedDeviceClasses","reportDeviceClass","indexOf","ServiceDevices","getDevicesListAsync","Promise","reject","zespRequestAsync","responseValidator","then","onDevicesListReceived","devices","zespVersion","catch","reason","subscribeListUpdate","onUpdateHandler","subscribe","jsonString","zespDevices","assign","buildDeviceInfo","getDeviceModelSettings","modelId","predefinedDevices","modelIds","findIndex","ModelId","devicesSlice","setDevices","updateDevices","root","updateWithoutRoot","filter","updateDevice","deviceIndex","updateReport","ieee","update","updateRootReports","getDeviceByIee","getAllDevices","zespFirmwareUpdateInfo","zespFirmwareInstalledVersion","zespSkipVersion","zespFirmwareSlice","setZespFirmwareUpdate","setZespFirmwareInstalledVersion","getZespFirmwareUpdateInfo","zespFirmware","getZespFirmwareInstalledVersion","extractReports","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","useZespSettings","setCustom","dataStr","getAsync","json","parseResponse","setAsync","join","toLocaleLowerCase","response","getCustomAsync","jsonStr","setUiSettings","timeoutSeconds","updates","currentVersion","updatesInformation","UiDefaultSettings","zespSettings","uiSettings","settingsSlice","setZespSettings","getZespSettings","getUiSettings","onReport","onUpdate","EndPoint","ClusterId","AttribId","Data","useZespAgent","dispatch","uiSettingsRef","useRef","connectAsync","server","getDevices","getRoot","ServiceRoot","reports","readUiSettings","current","readFirmwareUpdates","firmwareUpdate","firmwareLastCheck","ServiceFirmware","firmwareInfo","subscribeReportUpdates","ServiceUpdates","subscribeDevicesListUpdate","Result","ConnectionStartTimeout","RestartConnectionTimeout","DefaultRequestTimeoutSeconds","WatcherIntervalSeconds","ZespDataEventType","ZespDataEvent","useZespConnector","_server","_onMessageEvent","EventTarget","_ws","_lastMessageTimestamp","_watcher","_onMessageReceived","ws","messageParts","messageType","shift","unshift","resultEvent","_runWatcher","zespStatusChangeHandler","underlyingWebsocket","readyState","Constants","args","dataHex","replaceAll","match","group","Uint8Array","_getBinaryData","send","responseReceived","validator","listener","force","close","_tryToCloseWS","protocol","document","location","serverAddress","address","WebsocketBuilder","onOpen","onClose","onError","onMessage","build","_tryConnectWs","handler","zespEvent","unsubscribe","getServerAddress","React","createContext","ZespAgent","useDispatch","zespStatus","setZesp","_restartTimerRef","Provider","clearTimeout","finally","Devices","buildLayoutSettingsFromZesp","reduce","groupName","deviceType","substr","reportKeyInfo","registeredCluster","DataHaClusterIds","buildLayoutItemForRole","attributes","getLayoutItem","dataCluster","roleName","layoutItem","devicesUpdateDetector","a","Name","devicesSorting","buildListItem","image","getImageUrl","tags","getTagsFromReports","process","Img","reportKeyDetails","clusterInfo","HomeAutoClusters","sort","setImage","testImage","Image","onerror","backgroundImage","detailsLink","xs","sm","lg","xxl","to","AppDialog","footer","forceClose","onShow","onHide","onClosed","setShow","onHideHandler","onExited","Header","Footer","AddZigbeeDialog","logs","setLogs","logRef","isCompleted","setIsCompleted","isCompletedRef","joinListenerRef","allDevListenerRef","onJoinReceivedHandler","onAllDevReceivedHandler","stopPairing","stopListening","includes","messages","onChannelChangedHandler","channel","useHook","channels","Form","Select","currentTarget","ProgressBar","animated","striped","dangerouslySetInnerHTML","__html","AddDeviceButton","showDialog","setShowDialog","onAddZigbeeClickedHandler","onAddBleClickedHandler","success","DropdownButton","Dropdown","Item","deviceItems","t","useTranslation","Card","SaveSettings","updatedSettings","alert","Container","Nav","exact","marginTop","deviceUpdateDetector","keysA","keysB","Location","deleteConfirmed","setDeleteConfirmed","headerClassName","groups","headerContent","activeGroupName","setActiveGroupName","popover","Popover","as","Toggle","Menu","onSettingsHandler","onEditTemplateHandler","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","onDeleteDeviceHandler","Divider","onDebugDeviceHandler","onCloseClickHandler","layoutProps","layoutName","LayoutElements","history","useHistory","DeviceSettings","setForceClose","onCancelHandler","onSaveHandler","toLowerCase","setName","setLocation","Group","Label","column","Control","useParams","showSettings","setShowSettings","autoExit","setAutoExit","_returnBack","onExitHandler","duration","onSettingsClosedHandler","headerHandlers","handleSubmit","input","prop","attr","ReactForm","onSubmit","restProps","predefinedMessages","predefinedBinary","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","repsPaused","_setRepsPaused","messagesRef","pausedRef","repsPausedRef","addMessages","startsWith","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","togglePause","toggleRepsPause","i2","controlId","defaultValue","inputProps","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","allSettings","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","rel","Wifi","ssid","pass","ip","mask","gw","Routes","isInitialized","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","editServer","updateAction","addAction","closeAction","InputGroup","Text","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","setServerIndex","AppFooter","PowerDialogLink","navLink","buttons","UpdatesNotificationDialog","zespFirmwareUpdate","zespFirmwareCurrentVersion","SettingsService","zespFirmwareUpdateVersion","updateData","firmwareSkipUpdate","UpdatesNotification","zespCurrentVersion","AppHeader","Content","serverIndex","serversString","selectedServer","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","zespReducer","devicesReducer","spinnerReducer","settingsReducer","zespFirmwareReducer","ReactDOM","render","StrictMode","getElementById","msg"],"mappings":"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","file":"static/js/main.bfd82f2f.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n              // console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;","window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 119,\n\t\"./config.js\": 119,\n\t\"./locales/en/common\": 144,\n\t\"./locales/en/common.json\": 144,\n\t\"./locales/en/nav\": 145,\n\t\"./locales/en/nav.json\": 145,\n\t\"./locales/en/pages/devices\": 146,\n\t\"./locales/en/pages/devices.json\": 146,\n\t\"./locales/en/pages/setup-mqtt\": 147,\n\t\"./locales/en/pages/setup-mqtt.json\": 147,\n\t\"./locales/en/pages/setup-wifi\": 148,\n\t\"./locales/en/pages/setup-wifi.json\": 148,\n\t\"./locales/en/pages/welcome\": 149,\n\t\"./locales/en/pages/welcome.json\": 149\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 225;","var map = {\n\t\"./root\": 175,\n\t\"./root.json\": 175\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 345;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\ninterface IState {\n  spinnerShow: boolean,\n  spinnerMessage: string,\n}\n\nconst initialState: IState = {\n  spinnerShow: false,\n  spinnerMessage: \"Loading...\",\n}\n\nexport const spinnerSlice = createSlice({\n  name: \"spinner\",\n  initialState,\n  reducers: {\n    setSpinnerShow: (state, action: PayloadAction<boolean>): void => {\n      state.spinnerShow = action.payload;\n      if (state.spinnerShow) state.spinnerMessage = initialState.spinnerMessage;\n    },\n\n    setSpinner: (state, action: PayloadAction<{ show: boolean, message: string | undefined }>): void => {\n      state.spinnerShow = action.payload.show;\n      state.spinnerMessage = action.payload.message || initialState.spinnerMessage;\n    }\n  }\n});\n\nconst getters = {\n  getSpinner: (state: RootState) => state.spinner,\n}\n\nexport const {getSpinner} = getters;\nexport const {setSpinnerShow, setSpinner} = spinnerSlice.actions;\nexport default spinnerSlice.reducer;\n","import React from \"react\";\nimport \"./styles.scss\"\nimport {Modal, Spinner} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\nimport {getSpinner} from \"../../store/slices/spinnerSlice\";\n\nexport const LoadingSpinner = () => {\n  const {spinnerShow, spinnerMessage} = useSelector(getSpinner);\n\n  return (\n    <Modal show={spinnerShow} centered size=\"sm\" backdrop={true}>\n      <Modal.Body>\n        <div className=\"d-flex align-items-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"me-3\"/>\n          <div>{spinnerMessage}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport const CustomSpinner: React.FC<{ message: string }> = ({message}) => {\n  return (\n    <Modal show={true} centered size=\"sm\" backdrop={true}>\n      <Modal.Body>\n        <div className=\"d-flex align-items-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"me-3\"/>\n          <div>{message}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default LoadingSpinner;","import React, {HTMLAttributes, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: React.FC<HTMLAttributes<HTMLDivElement>> = (props): React.ReactElement => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={`${className} ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\nexport type zespConnectionStatus = \"disconnected\" | \"connected\" | \"connecting\" | \"reconnect\" | \"closed\";\n\nexport interface ZespState {\n  connectionStatus: zespConnectionStatus,\n  initialized: boolean,\n}\n\nconst initialState: ZespState = {\n  connectionStatus: \"disconnected\",\n  initialized: false,\n}\n\nexport const zespSlice = createSlice({\n  name: \"zesp\",\n  initialState,\n  reducers: {\n    setConnectionStatus: (state, action: PayloadAction<zespConnectionStatus>) => {\n      state.connectionStatus = action.payload;\n    },\n\n    setInitialized: (state, action: PayloadAction<boolean>) => {\n      state.initialized = action.payload;\n    },\n  }\n})\n\nconst getters = {\n  getStatus: (state: RootState) => state.zesp.connectionStatus,\n  getInitialized: (state: RootState) => state.zesp.initialized,\n}\n\nexport const {getStatus, getInitialized,} = getters;\nexport const {setConnectionStatus, setInitialized,} = zespSlice.actions;\nexport default zespSlice.reducer;","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataControlSettings>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataControlSettings>(props: IDeviceControlProps<DataControlSettings>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    zespSend({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    zespSend({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  // const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useContext, useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  // const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    zespSend({data: command});\n    // setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    zespSend({data: command});\n    // setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler} width=\"270px\"/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(\n    () => setClassName(props.classNameFrom),\n    [props.children?.toString()]);\n\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {DeviceControls} from \"../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"./index\";\nimport {HighlightOnUpdate} from \"../shared/transition/HighlightOnUpdate\";\nimport {Row} from \"react-bootstrap\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataControlSettings>) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<NoReport id={props.config.id} reportData={reportData} configData={configData}/>)\n\n  const label = report.label || props.config.label || props.config.id || \"Unknown data\";\n  const value =\n    (report.parsed && report.parsed.toString().trim() === report.val.toString().trim() && report.parsed)\n    || (report.parsed && report.val && `${report.parsed} (${report.val})`)\n    || report.val\n    || \"No data\";\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 && JSON.parse(roleParts[1]);\n  const units = (roleSettings && roleSettings[\"unit_of_measurement\"]) || \"\";\n\n  const showDetailsClicked = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setShowDetails(!showDetails);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value} {units}</HighlightOnUpdate>\n        <a onClick={showDetailsClicked} href=\"#\" className=\"value-info\" title=\"Unrecognized data, click to show details\">\n          <i className=\"bi bi-info-circle-fill ms-2 text-secondary\"/>\n        </a>\n      </DeviceControlCol2>\n      <div className={`alert alert-info flex-column col-12 ${showDetails ? \"\" : \"d-none\"}`}>\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </Row>\n  )\n\n  // return \n}\n\nconst NoReport = (props: { id: string, configData: string, reportData: string }) => (\n  <Row>\n    <DeviceControlCol1>{props.id}</DeviceControlCol1>\n    <DeviceControlCol2>\n      <div className=\"alert alert-info\">\n        <div>{props.configData}</div>\n        {props.reportData && (<div className=\"mt-2\">{props.reportData}</div>)}\n      </div>\n    </DeviceControlCol2>\n  </Row>\n)\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.parsed ? Number(report.parsed) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    sendValueToZesp(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    sendValueToZesp(result);\n  }\n\n  const sendValueToZesp = (value: number) => {\n    const data = formatCommand(props.config.arguments.command, value, props);\n    zespSend({data: data});\n  }\n\n  const label = report?.label || props.config.label || \"Level\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number, props: IDeviceControlProps<LayoutSettingsLevel>): string => command\n  .replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useContext, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataControlSettings>) => {\n  const {zespSend} = useContext(ZespContext);\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\",\n    \"http://listen.181fm.com/181-thebox_128k.mp3?\",\n    \"http://stream.live.vc.bbcmedia.co.uk/bbc_radio_one\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    // DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    setPlay(\"OFF\");\n    // DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    // DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) zespSend({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    // DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) zespSend({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = props.config.zespRoleSettings[\"unit_of_measurement\"] || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOffToggle} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffToggle = (props: IDeviceControlProps<LayoutSettingsOnOffToggle>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    const command = props.config.arguments.commandOn.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const offHandler = () => {\n    const command = props.config.arguments.commandOff.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const toggleHandler = () => {\n    const command = props.config.arguments.commandToggle.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  }\n\n  const label = report?.label || props.config.label || \"Power\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.parsed.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant=\"secondary\" onClick={toggleHandler}>Toggle</Button>\n          <Button variant={report?.parsed.toString() === \"0\" ? \"primary\" : \"secondary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {Fragment, FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsOnOffToggle, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./unknown\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\nimport {OnOffToggle} from \"./controls/OnOffToggle\";\n\ntype ElementTypes = \"regular\" | \"skip\" | \"unknown\";\n\ninterface IResult {\n  element: JSX.Element,\n  type: ElementTypes\n}\n\nexport const getControlForDevice = (config: DataControlSettings, deviceInfo: DeviceInfo): IResult => {\n  const controlProps: IDeviceControlProps<DataControlSettings> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return {type: \"regular\", element: (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>)};\n    case \"level_root\" :\n      return {type: \"regular\", element: (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n    case \"rgb_root\" :\n      return {type: \"regular\", element: (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>)};\n    case \"player_src_root\" :\n      return {type: \"regular\", element: (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"player_control_root\":\n      return {type: \"skip\", element: (<Fragment/>)};\n\n    case \"level_control\" :\n      return {type: \"regular\", element: (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n\n    case \"illuminance_sensor\" :\n      return {type: \"regular\", element: (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>)};\n    case \"binary_sensor\" :\n      return {type: \"regular\", element: (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"sensor\" :\n      return {type: \"regular\", element: (<ValueSensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n\n    case \"on_off_toggle\":\n      return {type: \"regular\", element: (<OnOffToggle {...controlProps} config={controlProps.config as LayoutSettingsOnOffToggle}/>)};\n\n    default:\n      return {type: \"unknown\", element: (<UnknownControl {...controlProps}/>)}\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n}","import {getControlForDevice} from \"../index\";\nimport React, {FunctionComponent, useState} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\n\nexport const DefaultLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const controls: React.ReactElement[] = [];\n  const unknown: React.ReactElement[] = [];\n\n  props.settings.forEach(settings => {\n    const control = getControlForDevice(settings, props.device);\n    if (control.type === \"skip\") return;\n\n    if (control.type === \"unknown\") unknown.push(control.element);\n    else controls.push(control.element);\n  });\n\n  // show by default if now identified controls found\n  const [showUnknown, setShowUnknown] = useState(controls.length === 0);\n\n  const onToggleUnknownHandler = () => {\n    setShowUnknown(!showUnknown);\n  }\n\n  return (\n    <div className=\"default-layout\">\n      {controls.length > 0 && (\n        <div className=\"elements\">\n          {controls.map((element, i) => {\n            return (<div key={i} className=\"device-control-group\">{element}</div>);\n          })}\n        </div>\n      )}\n\n      {unknown.length > 0 && (\n        <>\n          <button onClick={onToggleUnknownHandler} className=\"show-unknown-btn btn btn-outline-info\">Unknown reports ({unknown.length})</button>\n          <div className={`elements unknown ${showUnknown ? \"show\" : \"hide\"}`}>\n            {unknown.map((element, i) => {\n              return (<div key={i} className=\"device-control-group\">{element}</div>);\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}","import React, {FunctionComponent} from \"react\";\nimport \"./styles.scss\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {IDeviceClassSettings} from \"./IDeviceClassSettings\";\n\nexport const reportKeysValue = [\"0100060000\", \"0104060000\"];\nexport const reportKeysBattery = [\"010000FF02\"];\n\nconst deviceClasses: { [deviceClass: string]: IDeviceClassSettings } = require(\"./device-classes.json\");\nconst batteryWarningLevelPercents = 50;\nconst batteryValuesRange = [2.7, 3.1]; // battery values to calculate percents from 0 to 100%\n\nexport const BinarySensorLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const value = getValueSettings(props);\n  const battery = getBatterySettings(props);\n\n  return (\n    <div className=\"row custom-binary-layout\">\n      <div className=\"col col-5 left\">\n        <i className={`bi ${value.iconClassName}`}/>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Current status:</div>\n          <div className={value.valueClassName}>{value.valueTitle}</div>\n        </div>\n\n        <div className=\"text-center mt-3 w-100\">\n          <div>Battery Level: <span className={`status ${battery.stateClassName}`}>{battery.valueTitle}</span></div>\n          <div className=\"progress mt-3\">\n            <div\n              className={`progress-bar ${battery.stateClassName}`}\n              role=\"progressbar\"\n              style={{width: `${battery.valuePercents}%`}}/>\n          </div>\n          <div className=\"battery-icon\">\n            <i className={`bi bi-battery-half ${battery.stateClassName}`}/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n// region getValueSettings \nconst getValueSettings = (props: LayoutProps): {\n  iconClassName: string,\n  valueClassName: string,\n  valueTitle: string\n} => {\n  const onOffReport = getReport(reportKeysValue, props);\n  if (!onOffReport) return {\n    iconClassName: deviceClasses[\"default\"].icons!.onFalse,\n    valueClassName: \"status-unknown\",\n    valueTitle: \"Unknown\"\n  }\n\n  // try to get status of binary sensor\n  const statusValue = onOffReport.parsed || onOffReport.val;\n  const roleParts = onOffReport.role && onOffReport.role.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const status: boolean = roleSettings && roleSettings[\"payload_on\"]\n    ? statusValue === roleSettings[\"payload_on\"] // compare with role settings\n    : (statusValue === \"1\" || statusValue === \"01\") // compare with default expected\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const iconClassName = status ? `${valueSettings.icons!.onTrue} ${valueSettings.styles!.onTrue}` : `${valueSettings.icons!.onFalse} ${valueSettings.styles!.onFalse}`;\n  const valueClassName = status ? `status ${valueSettings.styles!.onTrue}` : `status ${valueSettings.styles!.onFalse}`;\n  const valueTitle = status ? valueSettings.titles.onTrue : valueSettings.titles.onFalse;\n\n  return {iconClassName, valueClassName, valueTitle};\n}\n// endregion\n\n// region getBatterySettings\nconst getBatterySettings = (props: LayoutProps): {\n  stateClassName: string,\n  valueTitle: string,\n  valuePercents: number\n} => {\n  const report = getReport(reportKeysBattery, props);\n\n  // return default for unknown\n  if (!report) return {stateClassName: \"??\", valueTitle: \"-\", valuePercents: 0};\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const units = roleSettings && roleSettings[\"unit_of_measurement\"] || \"\";\n  const valueString = Number(report.parsed || report.val) || undefined;\n  let valuePercents: number | undefined = undefined;\n\n  // get percents\n  if (!valueString) valuePercents = undefined\n  else if (units === \"%\") valuePercents = Number(valueString);\n  else {\n    let valueNumber = Number(valueString) || undefined;\n    if (valueNumber) {\n      valueNumber = Math.min(batteryValuesRange[1], Math.max(batteryValuesRange[0], valueNumber));\n      valuePercents = Math.round((1 - (batteryValuesRange[1] - valueNumber) / (batteryValuesRange[1] - batteryValuesRange[0])) * 100);\n    }\n  }\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const valueTitle = `${valueString || \"??\"} ${units}`;\n  const stateClassName = !valuePercents\n    ? \"status-unknown\"\n    : valuePercents <= batteryWarningLevelPercents\n      ? valueSettings.styles!.onFalse\n      : valueSettings.styles!.onTrue;\n\n  return {\n    stateClassName,\n    valuePercents: valuePercents || 0,\n    valueTitle\n  };\n}\n// endregion\n\nconst getReport = (oneOfKeys: string[], props: LayoutProps): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = props.device.zespInfo.Report[key];\n    if (report) return report;\n  }\n}","import {DefaultLayout} from \"./DefaultLayout\";\nimport {BinarySensorLayout} from \"./binary-sensor\";\nimport {FunctionComponent} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\nimport AutoDetectionBinarySensor from \"./binary-sensor/auto\";\nimport AutoDetectionBleBeacon from \"./ble-beacon/auto\";\nimport BleBeaconLayout from \"./ble-beacon\";\n\n// list of available layouts with names\nexport const layoutsAvailable = {\n  default: DefaultLayout,\n  binarySensorLayout: BinarySensorLayout,\n  bleBeacon: BleBeaconLayout,\n} as { [name: string]: FunctionComponent<LayoutProps> };\n\n// list of layout auto detection functions, which return layout name\nconst autoDetectors: { (zespInfo: ZespDeviceInfo): string | undefined }[] = [\n  AutoDetectionBinarySensor,\n  AutoDetectionBleBeacon,\n];\n\n// region help methods\nexport const layoutTools = {\n  autoDetect: (zespInfo: ZespDeviceInfo): string | undefined => {\n    for (const autoDetector of autoDetectors) {\n      const layout = autoDetector(zespInfo);\n      if (layout) return layout;\n    }\n\n    return undefined;\n  },\n\n  roleDeviceClassIs: (expectedDeviceClasses: string[], report: ZespReportInfo): boolean => {\n    const roleParts = report.role && report.role.split(\"&\");\n    if (roleParts.length < 2) return false;\n\n    const roleSettings = JSON.parse(roleParts[1]);\n    const reportDeviceClass = roleSettings[\"device_class\"];\n    if (!reportDeviceClass) return false;\n\n    return expectedDeviceClasses.indexOf(reportDeviceClass) >= 0;\n  },\n  getReport: (oneOfKeys: string[], zespInfo: ZespDeviceInfo): ZespReportInfo | undefined => {\n    for (const key of oneOfKeys) {\n      const report = zespInfo.Report[key];\n      if (report) return report;\n    }\n  }\n}\n// endregion","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {HighlightOnUpdate} from \"../../../shared/transition/HighlightOnUpdate\";\n\nconst lastUpdateTresholdSeconds = 60 * 5;\n\nexport const BleBeacon: FunctionComponent<LayoutProps> = (props) => {\n  const isInRange = props.device.zespInfo.Report[\"ble_InRange\"]?.parsed === \"1\";\n  const signalLevel = props.device.zespInfo.Report[\"ble_signal_level\"]?.parsed;\n\n  const lastUpdateMs = Math.max(props.device.zespInfo.Report[\"ble_InRange\"].time, props.device.zespInfo.Report[\"ble_signal_level\"].time);\n  const lastDate = new Date(lastUpdateMs);\n  const calculateRelative = () => Math.round((Date.now() - lastUpdateMs) / 1000);\n  const [relative, setRelative] = useState(calculateRelative());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setRelative(calculateRelative());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    }\n  }, [lastUpdateMs]);\n\n  const lastUpdateStyle = relative < lastUpdateTresholdSeconds\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  const rangeStyle = isInRange\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  return (\n    <div className=\"row custom-layout\">\n      <div className=\"col col-5 left flex-column position-relative\">\n        <i className={`bi bi-wifi ${rangeStyle}`}/>\n        <div className={`icon-description ${rangeStyle}`}>{isInRange ? \"In range\" : \"Out of range\"}</div>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Signal level:</div>\n          <div className={`status ${rangeStyle}`}><HighlightOnUpdate>{signalLevel}</HighlightOnUpdate></div>\n        </div>\n        <div className=\"text-center mt-3\">\n          <div>Last update:</div>\n          <div className={`status ${lastUpdateStyle}`}>{lastDate.toLocaleDateString()} {lastDate.toLocaleTimeString()}</div>\n          <div className=\"small text-muted opacity-50\">{\n            relative < 60 ? `${relative} seconds ago` :\n              relative / 60 < 60 ? `${Math.round(relative / 60)} minutes ago` :\n                `${Math.round(relative / 60 / 60)} hours ago`\n          }</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BleBeacon;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {reportKeysBattery as binarySensorBatteryKeys, reportKeysValue as binarySensorValueKeys} from \"./index\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBinarySensor = (zespInfo: ZespDeviceInfo): string | undefined => {\n  const valueReportKey = layoutTools.getReport(binarySensorValueKeys, zespInfo);\n  const batteryReportKey = layoutTools.getReport(binarySensorBatteryKeys, zespInfo);\n\n  if (!valueReportKey || !batteryReportKey) return undefined; // these two guys required\n  if (!layoutTools.roleDeviceClassIs([\"battery\"], batteryReportKey)) return undefined;\n  if (!layoutTools.roleDeviceClassIs([\"door\", \"motion\"], valueReportKey)) return undefined;\n\n  console.debug(`Auto detected layout 'binarySensorLayout' for '${zespInfo.IEEE}'`);\n  return \"binarySensorLayout\";\n}\n\nexport default AutoDetectionBinarySensor;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBleBeacon = (zespInfo: ZespDeviceInfo): string | undefined => {\n  if (zespInfo.DevType !== \"BED\" || zespInfo.class !== \"beacon\") return undefined;\n\n  const rangeReport = layoutTools.getReport([\"ble_InRange\"], zespInfo);\n  const signalReport = layoutTools.getReport([\"ble_signal_level\"], zespInfo);\n  if (!rangeReport || !signalReport) return undefined;\n\n  return \"bleBeacon\";\n}\n\nexport default AutoDetectionBleBeacon;","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {layoutTools} from \"../../device-controls/layouts\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\ninterface IGetDevicesResponse {\n  devices: DeviceInfo[],\n  zespVersion: string | undefined,\n}\n\nconst ServiceDevices = {\n  getDevicesListAsync: (zesp: IZespConnector) => new Promise<IGetDevicesResponse>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(event => {\n        const result = onDevicesListReceived(event);\n        resolve({\n          devices: result,\n          zespVersion: event.dataParts.length > 1 ? event.dataParts[1] : undefined,\n        } as IGetDevicesResponse);\n      })\n      .catch(reason => reject(reason));\n  }),\n\n  subscribeListUpdate: (zesp: IZespConnector, onUpdateHandler: (devices: DeviceInfo[]) => void): void => {\n    // setTimeout(() => zesp.zespSend({data: \"getDeviceList\"}), 3000);\n    zesp.subscribe(TypedZespResponseValidator(\"alldev\"), event => {\n      const result = onDevicesListReceived(event);\n      onUpdateHandler(result);\n    })\n  }\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent): DeviceInfo[] => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n  return zespDevices.map(buildDeviceInfo);\n}\n\nexport const getDeviceModelSettings = (modelId: string): { settings: DataDeviceSettings, controls: DataControlSettings[] } => {\n  const settings: DataDeviceSettings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === modelId) >= 0) || {} as DataDeviceSettings;\n  const controls = settings?.controls && require(`../../data/controls/${settings.controls}`) as DataControlSettings[] || [];\n\n  return {settings, controls};\n}\n\nconst buildDeviceInfo = (zespInfo: ZespDeviceInfo): DeviceInfo => {\n  const {settings, controls} = getDeviceModelSettings(zespInfo.ModelId);\n  controls.forEach(control => {\n    if (!control.reportKey) return;\n    const reportKey = control.reportKey.endpoint + control.reportKey.clusterId + control.reportKey.attributeId;\n    if (!zespInfo.Report[reportKey]) zespInfo.Report[reportKey] = {} as ZespReportInfo;\n  });\n\n  // try to autodetect layout by reports\n  const layout = settings.layout || layoutTools.autoDetect(zespInfo);\n\n  return {\n    zespInfo: zespInfo,\n    settings: {...settings, ...{layout: layout}},\n    customLayout: controls\n  };\n}\n\nexport default ServiceDevices;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {RootState} from \"../configure\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespReportUpdates} from \"../../services/zesp/service-root\";\n\nexport interface DevicesState {\n  devices: DeviceInfo[]\n}\n\nconst initialState: DevicesState = {\n  devices: []\n}\n\nexport const devicesSlice = createSlice({\n  name: \"devices\",\n  initialState,\n  reducers: {\n    setDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      state.devices = action.payload;\n    },\n\n    // like 'setDevices' but keeping root device \n    updateDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      const root = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!root) {\n        state.devices = action.payload;\n        return;\n      }\n\n      const updateWithoutRoot = action.payload.filter(x => x.zespInfo.ModelId !== \"ZESP_Root\");\n      state.devices = [root, ...updateWithoutRoot];\n    },\n\n    updateDevice: (state, action: PayloadAction<DeviceInfo>): void => {\n      const deviceIndex = state.devices.findIndex(x => x.zespInfo.IEEE === action.payload.zespInfo.IEEE);\n      if (deviceIndex < 0) {\n        state.devices.push(action.payload);\n      } else {\n        state.devices[deviceIndex] = action.payload;\n      }\n    },\n\n    updateReport: (state, action: PayloadAction<{ ieee: string, reportKey: string, update: Partial<ZespReportInfo> }>): void => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Device '${action.payload.ieee}' not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report[action.payload.reportKey] = {...device.zespInfo.Report[action.payload.reportKey], ...action.payload.update};\n      // console.debug(`Device '${action.payload.ieee}' with report '${action.payload.reportKey}' has been updated`);\n    },\n    updateRootReports: (state, action: PayloadAction<ZespReportUpdates>) => {\n      const device = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = {...device.zespInfo.Report, ...action.payload} as { [reportId: string]: ZespReportInfo };\n    }\n  }\n})\n\nconst getters = {\n  getDeviceByIee: (state: RootState, ieee: string): DeviceInfo | undefined => state.devices.devices.find(x => x.zespInfo.IEEE === ieee),\n  getDevicesByModelId: (state: RootState, modelId: string): DeviceInfo[] => state.devices.devices.filter(x => x.zespInfo.ModelId === modelId),\n  getAllDevices: (state: RootState): DeviceInfo[] => state.devices.devices || [] as DeviceInfo[],\n}\n\nexport const {getDevicesByModelId, getDeviceByIee, getAllDevices} = getters;\nexport const {setDevices, updateReport, updateRootReports, updateDevices, updateDevice} = devicesSlice.actions;\nexport default devicesSlice.reducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\n\ninterface IState {\n  zespFirmwareUpdateInfo: DictionaryStrings | undefined,\n  zespFirmwareInstalledVersion: string,\n  zespSkipVersion: string | undefined,\n}\n\nconst initialState: IState = {\n  zespFirmwareUpdateInfo: undefined,\n  zespFirmwareInstalledVersion: \"-\",\n  zespSkipVersion: undefined,\n}\n\nexport const zespFirmwareSlice = createSlice({\n  name: \"zespFirmwareUpdate\",\n  initialState: initialState,\n  reducers: {\n    setZespFirmwareUpdate: (state, action: PayloadAction<DictionaryStrings>): void => {\n      state.zespFirmwareUpdateInfo = action.payload;\n    },\n\n    setZespFirmwareInstalledVersion: (state, action: PayloadAction<string>): void => {\n      state.zespFirmwareInstalledVersion = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespFirmwareUpdateInfo: (state: RootState) => state.zespFirmware.zespFirmwareUpdateInfo,\n  getZespFirmwareInstalledVersion: (state: RootState) => state.zespFirmware.zespFirmwareInstalledVersion,\n}\n\nexport const {getZespFirmwareUpdateInfo, getZespFirmwareInstalledVersion} = getters;\nexport const {setZespFirmwareUpdate, setZespFirmwareInstalledVersion} = zespFirmwareSlice.actions;\nexport default zespFirmwareSlice.reducer;","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespRootData} from \"./models/ZespRootData\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {getDeviceModelSettings} from \"./service-devices\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getRootDataAsync: (zesp: IZespConnector) => new Promise<ZespReportUpdates>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n    })\n      .then(event => {\n        const result = extractReports(event);\n\n        if (result) resolve(result);\n        else reject(\"Cannot update root device information\");\n      })\n      .catch(reason => reject(reason));\n  }),\n}\n\nexport type ZespReportUpdates = {\n  [key: string]: Partial<ZespReportInfo>\n}\n\nconst extractReports = (event: ZespDataEvent): ZespReportUpdates => {\n  const {controls} = getDeviceModelSettings(\"ZESP_Root\");\n  if (controls.length == 0) return {};\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const result: ZespReportUpdates = {};\n\n  const reportOnOff = controls.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) result[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId] = {val: data.on.toString()};\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = controls.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) result[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId] = {val: data.level.toString()};\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = controls.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) result[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId] = {val: `${data.B}:${data.G}:${data.R}`};\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = controls.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) result[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId] = {val: data.sound.volume.toString()};\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = controls.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) result[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId] = {val: data.sound.current_path?.toString()};\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = controls.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) result[playControl.endpoint + playControl.clusterId + playControl.attributeId] = {val: data.sound.play.toString()};\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  return result;\n}\n\n","import {ZespSettings} from \"./models/ZespSettings\";\nimport {JsonZespResponseValidator, TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport const useZespSettings = ({zespRequestAsync, zespSend}: IZespConnector) => {\n  const getAsync = (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    zespRequestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  })\n\n  const setAsync = (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      zespRequestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  }\n\n  const getCustomAsync = function getCustom<T>(name: string): Promise<T | undefined> {\n    return zespRequestAsync({\n      data: `LoadJson|/${name}.json`,\n      responseValidator: JsonZespResponseValidator(name)\n    })\n      .then(event => {\n        if (event.dataParts.length < 1) throw new Error(\"Unexpected JSON file response from ZESP\");\n        const jsonStr = event.dataParts[1];\n\n        if (!jsonStr || jsonStr.length === 0 || jsonStr.trim().toLocaleLowerCase() === \"null\") return undefined;\n        return JSON.parse(jsonStr) as T;\n      })\n  }\n\n  const setCustom = function setCustom<T>(name: string, data: T): void {\n    const fileName = `/${name}.json`;\n    const dataStr = JSON.stringify(data);\n\n    zespSend({\n      data: `SaveJson|${fileName}|${dataStr}`\n    });\n  }\n\n  const setUiSettings = (data: UiSettings): void => {\n    setCustom(\"zesp_ui\", data);\n  }\n\n  return {\n    getAsync,\n    setAsync,\n    getCustomAsync,\n    setCustom,\n    setUiSettings,\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n\nexport default useZespSettings;","import {FirmwareInfo} from \"../../models/FirmwareInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getFirmwareInfoAsync: (zesp: IZespConnector): Promise<FirmwareInfo> => zesp\n    .zespRequestAsync({\n      data: \"loadfwlist\",\n      responseValidator: TypedZespResponseValidator(\"rsploadfwlist\"),\n      timeoutSeconds: 15,\n    }).then(event => {\n      if (event.dataParts.length < 2) throw Error(\"Unexpected zesp firmware information response\");\n\n      const updates = JSON.parse(event.dataParts[0]) as DictionaryStrings[];\n      const currentVersion = event.dataParts[1];\n      if (!updates || updates.length === 0) throw Error(\"Unexpected zesp firmware udpates response\");\n      if (!currentVersion || currentVersion.length === 0) throw Error(\"Unexpected zesp current version response\");\n\n      const result: FirmwareInfo = {\n        currentVersion,\n        updatesInformation: updates[0]\n      };\n\n      return result;\n    }),\n}\n","import {DictionaryStrings} from \"./DictionaryStrings\";\n\nexport type UiSettings = {\n  firmwareUpdate: DictionaryStrings | undefined,\n  firmwareLastCheck: number | undefined,\n  firmwareSkipUpdate: string | undefined,\n}\n\nexport const UiDefaultSettings: UiSettings = {} as UiSettings;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {UiSettings} from \"../../models/UiSettings\";\n\ninterface IState {\n  zespSettings: ZespSettings | undefined,\n  uiSettings: UiSettings | undefined,\n}\n\nconst initialState: IState = {\n  zespSettings: undefined,\n  uiSettings: undefined,\n}\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setZespSettings: (state, action: PayloadAction<ZespSettings>): void => {\n      state.zespSettings = action.payload;\n    },\n\n    setUiSettings: (state, action: PayloadAction<UiSettings>): void => {\n      state.uiSettings = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespSettings: (state: RootState) => state.settings.zespSettings,\n  getUiSettings: (state: RootState) => state.settings.uiSettings,\n}\n\nexport const {getZespSettings, getUiSettings} = getters;\nexport const {setZespSettings, setUiSettings} = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, onReport))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const ieee = event.dataParts[1];\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportKey = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = {\n    parsed: data.parsed,\n    val: data.Data,\n    time: data.time,\n  } as Partial<ZespReportInfo>\n\n  onReport(ieee, reportKey, report);\n}","import {Dispatch} from \"redux\";\nimport {setConnectionStatus} from \"../../store/slices/zespSlice\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport ServiceDevices from \"../../services/zesp/service-devices\";\nimport {setDevices, updateDevices, updateReport, updateRootReports} from \"../../store/slices/devicesSlice\";\nimport {setZespFirmwareInstalledVersion, setZespFirmwareUpdate} from \"../../store/slices/zespFirmwareSlice\";\nimport ServiceRoot from \"../../services/zesp/service-root\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport ServiceFirmware from \"../../services/zesp/service-firmware\";\nimport {UiDefaultSettings, UiSettings} from \"../../models/UiSettings\";\nimport {setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {useRef} from \"react\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport ServiceUpdates from \"../../services/zesp/service-report-updates\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport const useZespAgent = (dispatch: Dispatch, zesp: IZespConnector) => {\n  const uiSettingsRef = useRef<UiSettings>({} as UiSettings);\n  const firmwareUpdateMinTimout = 1000 * 60 * 60 * 24;\n\n  // init\n  const connectAsync = (server: IServerInfo): Promise<void> => zesp\n    .connectAsync(server, (status) => dispatch(setConnectionStatus(status)), false)\n\n  // read devices list\n  const getDevices = (): Promise<void> => ServiceDevices.getDevicesListAsync(zesp)\n    .then(result => {\n      dispatch(setDevices(result.devices));\n      if (result.zespVersion) dispatch(setZespFirmwareInstalledVersion(result.zespVersion));\n    });\n\n  // read root info\n  const getRoot = (): Promise<void> => ServiceRoot\n    .getRootDataAsync(zesp)\n    .then(reports => {\n      dispatch(updateRootReports(reports))\n      console.debug(\"Root device reports updated\");\n    });\n\n  // read ui settings\n  const readUiSettings = (): Promise<void> => useZespSettings(zesp)\n    .getCustomAsync<UiSettings>(\"zesp_ui\")\n    .then(settings => {\n      const result = settings || UiDefaultSettings;\n      dispatch(setUiSettings(result))\n      uiSettingsRef.current = result;\n    })\n\n  // private firmware updates downloading\n  const _getFirmware = (): void => {\n    ServiceFirmware\n      .getFirmwareInfoAsync(zesp)\n      .then(firmwareInfo => {\n        dispatch(setZespFirmwareInstalledVersion(firmwareInfo.currentVersion));\n        dispatch(setZespFirmwareUpdate(firmwareInfo.updatesInformation));\n\n        uiSettingsRef.current = {...uiSettingsRef.current, ...{firmwareUpdate: firmwareInfo.updatesInformation, firmwareLastCheck: Date.now()}};\n        useZespSettings(zesp).setCustom(\"zesp_ui\", uiSettingsRef.current);\n\n        dispatch(setUiSettings(uiSettingsRef.current));\n        console.debug(\"Firmware updates information loaded\");\n      })\n      .catch(reason => {\n        console.warn(\"Cannot read Firmware update information\");\n        console.warn(reason);\n      });\n  }\n\n  // read firmware updates\n  const readFirmwareUpdates = (): Promise<void> => {\n    const uiSettings = uiSettingsRef.current\n    if (!uiSettings) throw new Error(\"Read UI settings before firmware checking\");\n\n    if (uiSettings.firmwareUpdate && uiSettings.firmwareLastCheck && (Date.now() - uiSettings.firmwareLastCheck) < firmwareUpdateMinTimout) {\n      dispatch(setZespFirmwareUpdate(uiSettings.firmwareUpdate));\n      console.debug(\"Firmware information read from settings\");\n      return Promise.resolve();\n    }\n\n    // run firmware loading in background\n    _getFirmware();\n\n    return Promise.resolve();\n  }\n\n  // subscribe to report updates events\n  const subscribeReportUpdates = (): Promise<void> => {\n    const onReport = (ieee: string, reportKey: string, update: Partial<ZespReportInfo>) =>\n      dispatch(updateReport({ieee, reportKey, update}));\n\n    ServiceUpdates.subscribeToEvents(zesp, onReport);\n    return Promise.resolve();\n  }\n\n  const subscribeDevicesListUpdate = (): Promise<void> => {\n    const onUpdate = (devices: DeviceInfo[]): void => {\n      // devices.pop();\n      dispatch(updateDevices(devices));\n      console.debug(\"Devices list updated\");\n    }\n\n    ServiceDevices.subscribeListUpdate(zesp, onUpdate);\n    return Promise.resolve();\n  }\n\n  return {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n    subscribeDevicesListUpdate,\n  }\n}\n\nexport default useZespAgent;","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 100,\n\n  // connection verify interval\n  RestartConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n\n  // connection checker interval, should be greater then 'DefaultRequestTimeoutSeconds' \n  WatcherIntervalSeconds: 15,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\nimport Constants from \"./Constants\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IRequestAsyncArgs, ISendArgs, ZespConnectedAction, ZespConnectorHandler, ZespConnectorListener} from \"./service-connector.interfaces\";\nimport {AllMessagesZespResponseValidator} from \"./ZespResponseValidators\";\n\nexport const useZespConnector = () => {\n  const _onMessageEvent = new EventTarget();\n  let _ws: Websocket | undefined = undefined;\n  let _server: IServerInfo | undefined;\n  let _lastMessageTimestamp: number = Date.now();\n  let _watcher: NodeJS.Timeout | undefined = undefined;\n\n  const _onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n    _lastMessageTimestamp = Date.now();\n    const messageParts = e.data\n      .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n      .split(\"\\x00\");\n\n    if (messageParts.length == 0) {\n      console.warn(\"Received empty message from zesp\");\n      return;\n    }\n\n    let messageType = messageParts.shift();\n\n    const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n    if (jsonMatch) {\n      messageParts.unshift(messageType);\n      messageType = \"json\";\n    }\n\n    const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n    _onMessageEvent.dispatchEvent(resultEvent);\n  }\n\n  const _tryToCloseWS = (): boolean => {\n    if (_ws) {\n      try {\n        _ws.close(1000);\n        return true;\n      } catch {\n        // it's ok :P\n      }\n    }\n    return false;\n  }\n\n  const _tryConnectWs = (zespStatusChangeHandler: ZespConnectedAction) => new Promise<void>((resolve, reject) => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const serverAddress = `${protocol}://${_server!.address}:81`;\n    console.debug(`Create connection to ${serverAddress}`)\n    _ws = new WebsocketBuilder(serverAddress)\n      .onOpen(() => {\n        console.debug(\"ZESP connected\");\n        zespStatusChangeHandler(\"connected\");\n        resolve();\n      })\n      .onClose(() => {\n        console.debug(\"ZESP connection closed\");\n        zespStatusChangeHandler(\"closed\");\n        reject(\"ZESP connection closed\");\n      })\n      .onError(() => reject(\"ZESP connection error\"))\n      .onMessage(_onMessageReceived)\n      .build();\n  });\n\n  const _getBinaryData = (message: string): Uint8Array => {\n    const data = message.replaceAll(\" \", \"\");\n    const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    return new Uint8Array(dataHex);\n  }\n\n  const _pingAsync = (): Promise<ZespDataEvent> =>\n    zespRequestAsync({data: \"LoadJson|/ping.json\", responseValidator: AllMessagesZespResponseValidator})\n\n  const _runWatcher = (zespStatusChangeHandler: ZespConnectedAction): Promise<void> => {\n    if (_watcher) {\n      console.debug(\"Stop old watcher\");\n      clearInterval(_watcher);\n    }\n\n    console.debug(\"Start watcher\");\n    _watcher = setInterval(() => {\n      if (_ws?.underlyingWebsocket?.readyState !== 1) return;\n\n      const periodWithoutMessageSeconds = (Date.now() - _lastMessageTimestamp) / 1000;\n      if (periodWithoutMessageSeconds > Constants.WatcherIntervalSeconds) {\n        _lastMessageTimestamp = Date.now() + Constants.DefaultRequestTimeoutSeconds * 1000;\n        if (_watcher) clearInterval(_watcher); // stop watcher until 'ping' finished\n        \n        _pingAsync()\n          .then(() => _runWatcher(zespStatusChangeHandler)) // everything fine, continue watching\n          .catch(() => zespStatusChangeHandler(\"reconnect\")); // oops, try to restart. Do not start watcher at the moment\n      }\n    }, 5000);\n\n    return Promise.resolve();\n  }\n\n  const connectAsync = (server: IServerInfo, zespStatusChangeHandler: ZespConnectedAction, force: boolean) => {\n    _server = server;\n    return new Promise<void>((resolve, reject) => {\n      console.debug(\"Start WS connection...\");\n\n      if (!force) {\n        if (_ws?.underlyingWebsocket?.readyState === 0) {\n          reject(\"Already connecting\");\n          return;\n        }\n\n        if (_ws?.underlyingWebsocket?.readyState === 1) {\n          console.debug(\"ZESP already connected, skip connection\");\n          resolve();\n          return;\n        }\n      }\n\n      _tryToCloseWS();\n      _tryConnectWs(zespStatusChangeHandler)\n        .then(() => _runWatcher(zespStatusChangeHandler))\n        .then(resolve)\n        .catch(reject);\n    })\n  }\n\n  const zespSend = (args: ISendArgs): void => {\n    if (!_ws) {\n      console.warn(\"WebSocket client is not initialized yet\");\n      return;\n    }\n\n    const data = args.isBinary === true\n      ? _getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  }\n\n  const zespRequestAsync = (args: IRequestAsyncArgs) => new Promise<ZespDataEvent>((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      _onMessageEvent.addEventListener(ZespDataEventType, listener);\n      zespSend({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })\n\n  const subscribe = (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    _onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  }\n\n  const unsubscribe = (listener: ZespConnectorListener) => _onMessageEvent.removeEventListener(ZespDataEventType, listener)\n\n  const getServerAddress = () => _server?.address;\n\n  return {\n    connectAsync,\n    zespSend,\n    zespRequestAsync,\n    subscribe,\n    unsubscribe,\n    getServerAddress,\n  }\n}\n\nexport default useZespConnector;","import React, {Fragment, useContext, useEffect, useRef, useState} from \"react\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStatus, setConnectionStatus, setInitialized} from \"store/slices/zespSlice\";\nimport useZespAgent from \"./ZespAgent.hook\";\nimport useZespConnector from \"../../services/zesp/common/service-connector\";\nimport Constants from \"../../services/zesp/common/Constants\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\n\ninterface IProps {\n  server: IServerInfo\n}\n\nexport const ZespContext = React.createContext<IZespConnector>(useZespConnector());\n\nexport const ZespAgent: React.FC<IProps> = ({server, children})\n  : React.ReactElement => {\n  const dispatch = useDispatch();\n  const zespStatus = useSelector(getStatus);\n  const [zesp, setZesp] = useState(useContext(ZespContext));\n  const _restartTimerRef = useRef<NodeJS.Timeout | undefined>(undefined);\n\n  useEffect(() => {\n    if (zespStatus === \"reconnect\") {\n      setZesp(useZespConnector());\n      dispatch(setConnectionStatus(\"disconnected\"));\n    }\n\n    console.debug(`ZESP agent status: ${zespStatus}`);\n  }, [zespStatus])\n\n  const {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n    subscribeDevicesListUpdate,\n  } = useZespAgent(dispatch, zesp);\n\n  if (zespStatus === \"connected\") return (\n    <ZespContext.Provider value={zesp}>\n      {children}\n    </ZespContext.Provider>\n  );\n\n  if (zespStatus === \"closed\") {\n    if (_restartTimerRef.current) {\n      clearTimeout(_restartTimerRef.current);\n      _restartTimerRef.current = undefined;\n    }\n\n    _restartTimerRef.current = setTimeout(() => {\n      if (zespStatus === \"closed\") {\n        dispatch(setConnectionStatus(\"reconnect\"));\n      } else {\n        console.debug(`Cancel restarting, cause status: ${zespStatus}`);\n      }\n    }, Constants.RestartConnectionTimeout);\n  }\n\n  if (zespStatus !== \"disconnected\") return (<Fragment/>);\n  dispatch(setConnectionStatus(\"connecting\"));\n  connectAsync(server)\n    .then(getDevices)\n    .then(getRoot)\n    .then(readUiSettings)\n    .then(readFirmwareUpdates)\n    .then(subscribeReportUpdates)\n    .then(subscribeDevicesListUpdate)\n\n    // final steps\n    .then(() => dispatch(setInitialized(true)))\n    .catch(reason => console.error(reason))\n    .finally(() => {\n      setZesp(zesp);\n      console.debug(\"ZESP initialization completed\");\n    });\n\n  return (<Fragment/>);\n}\n","import {DataControlSettings, DataLayoutItemsGroup} from \"../models/DataControlSettings\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout && device.customLayout.length > 0\n      ? device.customLayout\n      : buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string, deviceType: string): ReportKeyInfo | undefined => {\n    if (!deviceType || deviceType === \"ZED\" || deviceType === \"ZR\") {\n      if (reportKey?.length !== 10) // 01 0000 0000\n      {\n        console.warn(`Unknown format of Zigbee report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: reportKey.substr(0, 2),\n        clusterId: reportKey.substr(2, 4),\n        attributeId: reportKey.substr(6),\n      }\n    }\n\n    if (deviceType === \"BED\") {\n      if (reportKey?.length < 1) // a-ny-thing\n      {\n        console.warn(`Unknown format of BLE report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: \"\",\n        clusterId: reportKey,\n        attributeId: \"\",\n      }\n    }\n\n    console.warn(`Unknown device type '${deviceType}'`);\n    return undefined;\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataControlSettings[] => {\n  const getLayoutItem = (reportKey: string): DataControlSettings | undefined => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey, device.zespInfo.DevType);\n    if (!reportKeyInfo) {\n      console.warn(`Cannot get report key details for '${device.zespInfo.IEEE}' device`);\n      return undefined;\n    }\n\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataControlSettings;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey, device.zespInfo.DevType)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key)).filter(x => x !== undefined) as DataControlSettings[];\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string, deviceType: string): DataControlSettings | undefined => {\n  // return undefined;\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey, deviceType);\n  if (!reportKeyInfo) return undefined;\n\n  const roleName = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: roleName} as DataControlSettings // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${roleName}`]\n    || dataCluster.attributes[roleName]\n    || {id: roleName} as DataControlSettings; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","import {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {useContext} from \"react\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport {useSelector} from \"react-redux\";\nimport {getAllDevices} from \"../../store/slices/devicesSlice\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {Devices} from \"../../services/devices\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\n\nexport default () => {\n  const {getServerAddress} = useContext(ZespContext)\n  const devices = useSelector(getAllDevices, devicesUpdateDetector)\n\n  const serverAddress = getServerAddress() || \"/\"\n  const deviceItems = [...devices]\n    .sort(devicesSorting)\n    .map(x => buildListItem(x, serverAddress))\n\n  return {\n    serverAddress,\n    deviceItems,\n  }\n}\n\n// region tools\n\nconst devicesUpdateDetector = (a: DeviceInfo[], b: DeviceInfo[]) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i].zespInfo.Name !== b[i].zespInfo.Name) return false;\n  }\n\n  return true;\n}\n\nconst devicesSorting = (a: DeviceInfo, b: DeviceInfo): number => {\n  if (a.zespInfo.ModelId === \"ZESP_Root\") return -1;\n  if (b.zespInfo.ModelId === \"ZESP_Root\") return 1;\n\n  if (a.zespInfo.ModelId < b.zespInfo.ModelId) return -1;\n  if (a.zespInfo.ModelId > b.zespInfo.ModelId) return 1;\n\n  return 0;\n}\n\nconst buildListItem = (device: DeviceInfo, serverAddress: string): DeviceListItem => {\n  const title = device.zespInfo.Name && device.zespInfo.Name.length > 0 ? device.zespInfo.Name : device.zespInfo.ModelId;\n  const image = getImageUrl(device, serverAddress);\n  const tags = getTagsFromReports(device.zespInfo.Report, device.zespInfo.DevType);\n\n  return {\n    title,\n    ieee: device.zespInfo.IEEE,\n    image,\n    tags\n  };\n}\n\nconst getImageUrl = (device: DeviceInfo, serverAddress: string): string => {\n  // device.settings?.image || device.zespInfo.Img\n  if (device.settings?.image)\n    return `${process.env.PUBLIC_URL}/device-images/${device.settings.image}`;\n\n  if (device.zespInfo.Img)\n    return `http://${serverAddress}:8081/${device.zespInfo.Img}`\n\n  const modelId = device.zespInfo.ModelId;\n  return `http://${serverAddress}:8081/img/${modelId}.jpg`;\n}\n\nconst getTagsFromReports = (reports: { [key: string]: ZespReportInfo }, deviceType: string): string[] => {\n  const result: string[] = [];\n\n  for (const key of Object.keys(reports)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key, deviceType);\n\n    if (!reportKeyDetails) {\n      console.warn(`Cannot read report '${key}' details for '${deviceType}' device type`);\n      continue;\n    }\n\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    result.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  return result\n    .filter((x, i) => result.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n}\n\n// endregion\n","import React, {useEffect, useState} from \"react\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nconst defaultImage = \"/device-images/default.png\";\n\nexport default (props: IProps) => {\n  const [image, setImage] = useState(props.device.image);\n\n  useEffect(() => {\n    const testImage = new Image();\n    testImage.onerror = () => {\n      setImage(defaultImage);\n    }\n    testImage.src = image;\n  }, []);\n\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${image})`}}/>);\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {Col} from \"react-bootstrap\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nexport default (props: IProps) => {\n  const {device} = props;\n  const detailsLink = `/devices/${device.ieee}`;\n\n  return (\n    <Col xs={12} sm={6} lg={4} xxl={3} className=\"p-1\">\n      <NavLink className=\"item p-3 border rounded d-block\" to={detailsLink}>\n        <div className=\"d-flex\">\n          <div><ItemImage device={props.device}/></div>\n          <div className=\"ps-2\">\n            <div className=\"title\">{device.title}</div>\n            <div className=\"ieee text-muted small\">{device.ieee}</div>\n            {device.tags.length > 0 && (\n              <div className=\"badges small\">\n                {device.tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n              </div>\n            )}\n          </div>\n        </div>\n      </NavLink>\n    </Col>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Modal} from \"react-bootstrap\";\n\ninterface IProps {\n  title: string,\n  className?: string,\n  footer?: React.ReactElement | undefined,\n  forceClose?: boolean,\n  onShow?: () => void,\n  onHide?: () => void,\n  onClosed?: () => void,\n}\n\nexport const AppDialog: React.FunctionComponent<IProps> = ({\n  children,\n  title,\n  className,\n  footer,\n  forceClose,\n  onShow,\n  onHide,\n  onClosed,\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    if (forceClose) setShow(false);\n  }, [forceClose]);\n\n  const onClosedHandler = () => {\n    if (onClosed) onClosed();\n  }\n  const onHideHandler = () => {\n    setShow(false)\n    if (onHide) onHide();\n  };\n\n  return (\n    <Modal show={show} onExited={onClosedHandler} onHide={onHideHandler} onShow={onShow} className={className}>\n      <Modal.Header>\n        <div>{title}</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        {children}\n      </Modal.Body>\n\n      {footer && (\n        <Modal.Footer>\n          {footer}\n        </Modal.Footer>\n      )}\n    </Modal>\n  )\n}","import React from \"react\";\nimport useHook from \"./hook\";\nimport {AppDialog} from \"../../../shared/app-dialog\";\nimport {Col, Form, ProgressBar, Row} from \"react-bootstrap\";\n\ninterface IProps {\n  onClosed: () => void,\n}\n\nexport const AddZigbeeDialog: React.FC<IProps> = ({\n  onClosed\n}): React.ReactElement => {\n\n  const {\n    isCompleted,\n    logs,\n    onChannelChangedHandler\n  } = useHook();\n\n  const channels: React.ReactElement[] = []\n  for (let channel = 11; channel <= 26; channel++)\n    channels.push(<option>{channel}</option>);\n\n  return (\n    <AppDialog title=\"Add Zigbee device\" onClosed={onClosed} className=\"add-zigbee-dialog\">\n      {!isCompleted && (\n        <>\n          <Row className=\"mb-3 align-items-center\">\n            <Col>I'm ready to pair new devices on channels:</Col>\n            <Col xs={3}>\n              <Form.Select className=\"d-inline-block\" onChange={event => onChannelChangedHandler(event.currentTarget.value)}>\n                <option value=\"\">All</option>\n                {channels}\n              </Form.Select>\n            </Col>\n          </Row>\n\n          <ProgressBar animated={true} striped={true} now={100}/>\n        </>\n      )}\n      {isCompleted && (\n        <>\n          <p>Pairing completed. To set device template or edit reports, click to device and choose <span className=\"badge bg-secondary\">Edit</span> in settings.</p>\n          <ProgressBar now={100} variant=\"success\" label=\"Completed\"/>\n        </>\n      )}\n      {logs.length > 0 && (<div className=\"logs\" dangerouslySetInnerHTML={{__html: logs}}/>)}\n    </AppDialog>\n  )\n}\n\nexport default AddZigbeeDialog;","import {useContext, useEffect, useRef, useState} from \"react\";\nimport \"./styles.scss\";\nimport {ZespContext} from \"../../../shared/agents/ZespAgent\";\nimport {TypedZespResponseValidator} from \"../../../services/zesp/common/ZespResponseValidators\";\nimport {ZespConnectorListener} from \"../../../services/zesp/common/service-connector.interfaces\";\nimport {ZespDataEvent} from \"../../../services/zesp/common/ZespDataEvent\";\n\nexport default () => {\n  const {zespSend, subscribe, unsubscribe} = useContext(ZespContext)\n  const [logs, setLogs] = useState(\"\")\n  const logRef = useRef(logs)\n  const [isCompleted, setIsCompleted] = useState(false)\n  const isCompletedRef = useRef(isCompleted);\n  const joinListenerRef = useRef<ZespConnectorListener>()\n  const allDevListenerRef = useRef<ZespConnectorListener>()\n\n  useEffect(() => {\n    console.debug(\"start pairing...\");\n    joinListenerRef.current = subscribe(TypedZespResponseValidator(\"join\"), onJoinReceivedHandler);\n    allDevListenerRef.current = subscribe(TypedZespResponseValidator(\"alldev\"), onAllDevReceivedHandler)\n    zespSend({data: \"addDevice\"});\n\n    return () => {\n      stopPairing()\n      stopListening()\n    }\n  }, []);\n\n  const stopPairing = (): void => {\n    if (!isCompletedRef.current) {\n      console.debug(\"stop pairing\")\n      zespSend({data: \"addDeviceDone\"})\n    }\n  }\n\n  const stopListening = (): void => {\n    if (joinListenerRef.current) {\n      unsubscribe(joinListenerRef.current)\n      joinListenerRef.current = undefined\n    }\n\n    if (allDevListenerRef.current) {\n      unsubscribe(allDevListenerRef.current)\n      allDevListenerRef.current = undefined\n    }\n  }\n\n  const onJoinReceivedHandler = (event: ZespDataEvent): void => {\n    let message = event.dataParts[0];\n    if (message.includes(\": timeout\")) message = `<div class=\"warning\">${message}</div>`;\n\n    const messages = logRef.current + message;\n    logRef.current = messages;\n    setLogs(messages);\n  }\n\n  const onAllDevReceivedHandler = (event: ZespDataEvent): void => {\n    stopPairing();\n\n    setIsCompleted(true);\n    isCompletedRef.current = true;\n  }\n\n  const onChannelChangedHandler = (channel: string): void => {\n    zespSend({data: `addDevice||${channel}`});\n  }\n\n  return {\n    logs,\n    isCompleted,\n    onChannelChangedHandler,\n  }\n}","import React from \"react\";\nimport useHook from \"./hook\";\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\nimport AddZigbeeDialog from \"../add-zigbee-dialog\";\n\nexport const AddDeviceButton: React.FC = (): React.ReactElement => {\n  const {\n    onAddZigbeeClickedHandler,\n    onAddBleClickedHandler,\n    showDialog,\n    setShowDialog,\n  } = useHook();\n\n  return (\n    <>\n      <DropdownButton title=\"Add device\" variant=\"outline-secondary\">\n        <Dropdown.Item onClick={onAddZigbeeClickedHandler}>Zigbee</Dropdown.Item>\n        <Dropdown.Item onClick={onAddBleClickedHandler}>Bluetooth</Dropdown.Item>\n      </DropdownButton>\n      {showDialog && (<AddZigbeeDialog onClosed={() => setShowDialog(false)}/>)}\n    </>\n  )\n}","import {useState} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const [showDialog, setShowDialog] = useState(false);\n\n  const onAddZigbeeClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  const onAddBleClickedHandler = () => {\n    toast.success(\"Not implemented yet\", {icon: \"😅\"})\n  }\n\n  return {\n    onAddZigbeeClickedHandler,\n    onAddBleClickedHandler,\n    showDialog,\n    setShowDialog,\n  }\n}\n","import React from \"react\";\nimport \"./styles.scss\";\nimport useHook from \"./hook\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card, Row} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {AddDeviceButton} from \"./add-buttons\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Result: React.FC = (): React.ReactElement => {\n  const {\n    deviceItems\n  } = useHook();\n\n  const {t} = useTranslation(\"pages.devices\");\n\n  if (deviceItems.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  console.debug(\"Building list of devices to show...\");\n\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <div className=\"group border-top pt-4\">\n              <div className=\"title h5 pb-2 d-flex justify-content-between align-items-center\">\n                <div>\n                  <span>{t(\"groups.all\")}</span>\n                  {deviceItems.length > 1 && (<span className=\"badge bg-secondary ms-2\">{deviceItems.length}</span>)}\n                </div>\n                <AddDeviceButton/>\n              </div>\n              <Row className=\"items\">\n                {deviceItems.map(device => (<Item device={device} key={device.ieee}/>))}\n              </Row>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nexport default Result;\n","import React, {Fragment, useContext, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setSpinnerShow} from \"../../store/slices/spinnerSlice\"\nimport {setZespSettings, getZespSettings} from \"../../store/slices/settingsSlice\"\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const settings = useSelector(getZespSettings);\n  const {getAsync} = useZespSettings(zesp);\n\n  useEffect(() => {\n    dispatch(setSpinnerShow(true));\n\n    getAsync()\n      .then(data => {\n        dispatch(setZespSettings(data));\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  }, []);\n\n  if (!settings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/firmware\">Firmware manager</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (\n  data: Partial<ZespSettings>,\n  settings: ZespSettings | undefined,\n  dispatch: Dispatch,\n  setAsync: { (settings: ZespSettings): Promise<void> }) =>\n  new Promise<void>((resolve, reject) => {\n    if (!settings) reject(\"Settings not loaded\");\n    dispatch(setSpinnerShow(true));\n\n    const updatedSettings: ZespSettings = ({...settings, ...data}) as ZespSettings;\n    setAsync(updatedSettings)\n      .then(() => {\n        dispatch(setZespSettings(updatedSettings));\n        resolve();\n        toast.success(\"Settings updated\");\n      })\n      .catch(reason => {\n        toast.error(`Cannot save: ${reason}`);\n        reject(reason);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  })\n\nexport default Result;","import {useHistory, useParams} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/configure\";\nimport {getDeviceByIee} from \"../../store/slices/devicesSlice\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {Devices} from \"../../services/devices\";\nimport toast from \"react-hot-toast\";\nimport {TypedZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {useContext, useState} from \"react\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport default () => {\n  const {ieee} = useParams<{ ieee: string }>();\n  const [showDialog, setShowDialog] = useState(true);\n  const [showSettings, setShowSettings] = useState(false);\n  const [autoExit, setAutoExit] = useState(false);\n  const history = useHistory();\n  const {zespRequestAsync} = useContext(ZespContext);\n  const deviceInfo = useSelector((state: RootState) => getDeviceByIee(state, ieee), deviceUpdateDetector);\n  const groups = deviceInfo && Devices.getControlGroups(deviceInfo);\n\n  if (!deviceInfo) throw new Error(\"Device information not found\");\n\n  const _returnBack = () => history.push(\"/devices\");\n\n  const onDebugDeviceHandler = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for debug info\", {icon: \"👽\"});\n  }\n\n  const onDeleteDeviceHandler = () => {\n    _returnBack();\n    // zespSend({data: \"getDeviceList\"});\n\n    zespRequestAsync({\n      data: `removeDevice|${deviceInfo.zespInfo.Device}|${deviceInfo.zespInfo.IEEE}`,\n      // data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(() => {\n        toast.success(\"Device deleted\", {icon: \"😵‍💫\"});\n      })\n      .catch(reason => {\n        toast.error(\"Cannot delete selected device\", {duration: 3000});\n        setShowDialog(true);\n      });\n  }\n\n  const onSettingsHandler = () => {\n    setShowDialog(false);\n    setShowSettings(true);\n  }\n\n  const onSettingsClosedHandler = () => {\n    setShowSettings(false);\n    setShowDialog(true);\n  }\n\n  const onExitHandler = () => {\n    if (!autoExit) return;\n    setTimeout(_returnBack, 100)\n  };\n\n  const onCloseClickHandler = () => {\n    setAutoExit(true);\n    setShowDialog(false)\n  };\n\n  return {\n    deviceInfo,\n    groups,\n    showDialog,\n    showSettings,\n\n    onExitHandler,\n    onDebugDeviceHandler,\n    onDeleteDeviceHandler,\n    onCloseClickHandler,\n    onSettingsHandler,\n    onSettingsClosedHandler,\n  }\n}\n\nconst deviceUpdateDetector = (a: DeviceInfo | undefined, b: DeviceInfo | undefined) => {\n  if (!a || !b) return false;\n  const keysA = Object.keys(a.zespInfo.Report);\n  const keysB = Object.keys(b.zespInfo.Report);\n\n  if (keysA.length != keysB.length) return false;\n  for (const key of keysA) {\n    if (a.zespInfo.Report[key] !== b.zespInfo.Report[key]) return false;\n  }\n\n  if (a.zespInfo.Name !== b.zespInfo.Name) return false;\n  if (a.zespInfo.Location !== b.zespInfo.Location) return false;\n\n  return true;\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Dropdown, Modal, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClickHandler: () => void,\n  onSettingsHandler: () => void,\n  onDeleteDeviceHandler: () => void,\n  onDebugDeviceHandler: () => void,\n  onEditTemplateHandler: () => void,\n}) => {\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  const onDeleteDeviceHandler = () => {\n    if (deleteConfirmed) props.onDeleteDeviceHandler();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\" className=\"bg-danger text-light\">Achtung! Are you sure?</Popover.Header>\n      <Popover.Body>\n        To delete device registration, click <span className=\"badge bg-danger\">Unpair device</span> one more time...\n      </Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <Modal.Header className={`${headerClassName} with-buttons`}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        <Dropdown className=\"d-inline-block\">\n          <Dropdown.Toggle variant=\"link\"><i className=\"bi bi-three-dots-vertical\"/></Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={props.onSettingsHandler}>Settings</Dropdown.Item>\n            <Dropdown.Item onClick={props.onEditTemplateHandler}>Edit template</Dropdown.Item>\n            <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n              <button className=\"dropdown-item\" onClick={onDeleteDeviceHandler}>Unpair device</button>\n            </OverlayTrigger>\n            <Dropdown.Divider/>\n            <Dropdown.Item onClick={props.onDebugDeviceHandler}>Debug</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <span className=\"border-end mx-2\"/>\n        <button type=\"button\" className=\"btn\" aria-label=\"Close\" onClick={props.onCloseClickHandler}><i className=\"bi bi-x-lg\"/></button>\n      </div>\n    </Modal.Header>\n  )\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React, {FunctionComponent} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {DefaultLayout} from \"../../device-controls/layouts/DefaultLayout\";\nimport {layoutsAvailable} from \"../../device-controls/layouts\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  const layoutProps: LayoutProps = {\n    device: props.device,\n    settings: group.settings\n  };\n\n  const layoutName = props.device.settings?.layout || \"default\";\n  const LayoutElements: FunctionComponent<LayoutProps> = layoutsAvailable[layoutName] || DefaultLayout;\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      <LayoutElements {...layoutProps}/>\n    </Modal.Body>\n  )\n}","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport useHook from \"./hook\";\nimport {AppDialog} from \"../../../shared/app-dialog\";\nimport {Row, Col, Form, Button} from \"react-bootstrap\";\nimport {DeviceInfo} from \"../../../models/DeviceInfo\";\n\ninterface IProps {\n  onClosed: () => void,\n  device: DeviceInfo,\n}\n\nexport const DeviceSettings: React.FC<IProps> = ({\n  device,\n  onClosed\n}): React.ReactElement => {\n  const {\n    forceClose,\n    // deviceData,\n\n    onCancelHandler,\n    onSaveHandler,\n  } = useHook(device);\n\n  const [name, setName] = useState(device.zespInfo.Name || \"\");\n  const [location, setLocation] = useState(device.zespInfo.Location || \"\");\n\n  // if (!deviceData) {\n  //   return (<CustomSpinner message=\"Read settings...\"/>)\n  // }\n\n  // console.log(deviceData[\"ModelId\"]);\n  const footer = (\n    <>\n      <Button onClick={() => onSaveHandler(name, location)}>Save changes</Button>\n      <Button variant=\"secondary\" role=\"cancel\" onClick={onCancelHandler}>Cancel</Button>\n    </>\n  )\n\n  return (\n    <AppDialog title=\"Device settings\" onClosed={onClosed} footer={footer} forceClose={forceClose}>\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Display name</Form.Label>\n        <Col><Form.Control value={name} onChange={event => setName(event.target.value)} placeholder={device.zespInfo.ModelId}/></Col>\n      </Form.Group>\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Location</Form.Label>\n        <Col><Form.Control value={location} onChange={event => setLocation(event.target.value)} placeholder=\"Default\"/></Col>\n      </Form.Group>\n    </AppDialog>\n  )\n}\n\nexport default DeviceSettings;\n","import {useContext, useState} from \"react\";\nimport {TypedZespResponseValidator} from \"../../../services/zesp/common/ZespResponseValidators\";\nimport {DeviceInfo} from \"../../../models/DeviceInfo\";\nimport {ZespContext} from \"../../../shared/agents/ZespAgent\";\nimport toast from \"react-hot-toast\";\nimport {DictionaryStrings} from \"../../../models/DictionaryStrings\";\nimport {useDispatch} from \"react-redux\";\nimport {updateDevice} from \"../../../store/slices/devicesSlice\";\n\nexport default (device: DeviceInfo) => {\n  const [forceClose, setForceClose] = useState(false)\n  const {zespRequestAsync} = useContext(ZespContext);\n  const dispatch = useDispatch();\n  const fileName = `/Devices/${device.zespInfo.IEEE}`;\n\n  const onCancelHandler = () => {\n    setForceClose(true)\n  }\n\n  const onSaveHandler = (name: string | undefined, location: string | undefined) => {\n    // convert empty strings to undefined\n    name = name || undefined;\n    location = location || undefined;\n\n    // read current settings\n    zespRequestAsync({data: `LoadJson|${fileName}`, responseValidator: TypedZespResponseValidator(fileName)})\n      .then(event => {\n        if (event.dataParts.length < 1) throw Error(\"Unexpected device settings from ZESP\");\n        return JSON.parse(event.dataParts[0]) as DictionaryStrings;\n      })\n\n      // send updated settings\n      .then(data => {\n        data[\"Name\"] = name;\n        data[\"Location\"] = location;\n\n        const json = JSON.stringify(data);\n        return zespRequestAsync({\n          data: `SaveJson|${fileName}|${json}`,\n          responseValidator: TypedZespResponseValidator(\"ZD_RSP\")\n        });\n      })\n\n      // complete settings updating\n      .then(event => {\n        if (event.dataParts.length < 2 || event.dataParts[1].toLowerCase() !== \"ok\") throw Error(\"Cannot save device settings\");\n\n        device = {\n          ...device, ...{\n            zespInfo: {\n              ...device.zespInfo, ...{\n                Name: name,\n                Location: location\n              }\n            }\n          }\n        }\n\n        dispatch(updateDevice(device));\n        setForceClose(true);\n        toast.success(\"Settings updated\");\n      })\n\n      .catch(reason => {\n        toast.error(\"Cannot read device settings from ZESP\");\n        console.error(reason);\n        setForceClose(true);\n      });\n  }\n\n  return {\n    forceClose,\n\n    onCancelHandler,\n    onSaveHandler,\n  }\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport useHook from \"./hook\";\nimport {Modal} from \"react-bootstrap\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport toast from \"react-hot-toast\";\nimport {DeviceSettings} from \"./settings\";\n\nexport default () => {\n\n  const {\n    deviceInfo,\n    groups,\n    showDialog,\n    showSettings,\n\n    onDebugDeviceHandler,\n    onDeleteDeviceHandler,\n    onExitHandler,\n    onCloseClickHandler,\n    onSettingsHandler,\n    onSettingsClosedHandler,\n  } = useHook()\n\n  if (!groups || groups.length === 0) {\n    console.warn(`No controls found for '${deviceInfo.zespInfo.IEEE}' device`);\n    return (<CustomDeviceNotFound/>);\n  }\n\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const headerHandlers = {\n    onCloseClickHandler,\n    onEditTemplateHandler: () => toast.success(\"Edit page is not implemented yet\", {icon: \"😅\"}),\n    onSettingsHandler,\n    onSettingsClosedHandler,\n    onDeleteDeviceHandler,\n    onDebugDeviceHandler,\n  }\n\n  return (\n    <>\n      <Modal show={showDialog} onHide={onCloseClickHandler} onExited={onExitHandler}>\n        <CustomHeader\n          groups={groups}\n          device={deviceInfo}\n          activeGroupName={activeGroupName}\n          setActiveGroupName={setActiveGroupName}\n          {...headerHandlers}\n        />\n\n        <CustomBody\n          groups={groups}\n          device={deviceInfo}\n          activeGroupName={activeGroupName}/>\n      </Modal>\n      {showSettings && (<DeviceSettings onClosed={onSettingsClosedHandler} device={deviceInfo}/>)}\n    </>\n  )\n}\n","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\", \"LoadJson|/zesp_ui.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default (): React.ReactElement => {\n  const {zespSend, subscribe, unsubscribe} = useContext(ZespContext);\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n  const [repsPaused, _setRepsPaused] = useState<boolean>(true);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n  const repsPausedRef = useRef(repsPaused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    if (repsPausedRef.current && (\n      message.startsWith(\"rep|\") ||\n      message.startsWith(\"ArBle|\")\n    )) return;\n\n    const data: string[] = [message.substr(0, 500), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const toggleRepsPause = () => {\n    const data = !repsPausedRef.current;\n    repsPausedRef.current = data;\n    _setRepsPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    zespSend({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    zespSend({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n          <button className={`btn btn-outline-${repsPaused ? \"secondary\" : \"info\"} ms-3 btn-sm float-end`}\n                  onClick={() => toggleRepsPause()}>{repsPaused ? \"REPs disabled\" : \"REPs enabled\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React, {useContext} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.MQTT;\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment, useContext} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n\n  if (!allSettings) return (<Fragment/>);\n  const settings = allSettings.Wifi;\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\nimport {getInitialized} from \"./store/slices/zespSlice\"\nimport {setSpinnerShow} from \"./store/slices/spinnerSlice\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const Routes = () => {\n  const isInitialized = useSelector(getInitialized);\n  const dispatch = useDispatch();\n\n  if (!isInitialized) {\n    // return (<div>Initialization...</div>);\n    setTimeout(() => dispatch(setSpinnerShow(true)), 0);\n    return (<Fragment/>);\n  }\n\n  setTimeout(() => dispatch(setSpinnerShow(false)), 300);\n\n  return (\n    <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee\" component={DeviceInfoPage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/firmware\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn className=\"fullscreen\">\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\n\ninterface IProps {\n  setServerIndex: (index: number) => void\n}\n\nexport const WelcomePage: FunctionComponent<IProps> = (props: IProps) => {\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => props.setServerIndex(index);\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion} from \"../../store/slices/zespFirmwareSlice\";\n\nexport const AppFooter: React.FC = (): React.ReactElement => {\n  const uiVersion = \"0.0.1 alfa\";\n  const zespVersion = useSelector(getZespFirmwareInstalledVersion);\n\n  return (\n    <footer className=\"app-footer my-3\">\n      <div className=\"d-flex justify-content-center\">\n        <div><a href=\"https://github.com/NickRimmer/zesp-ui\" target={\"_blank\"} rel=\"noreferrer\">ZESP UI<i className=\"bi bi-github ms-2\"/></a></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div>UI <span className=\"highlight\">{uiVersion}</span></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div><a href=\"https://t.me/zesp32\" target={\"_blank\"} rel=\"noreferrer\">ZESP</a> <span className=\"highlight\">{zespVersion}</span></div>\n      </div>\n    </footer>\n  )\n}\n\nexport default AppFooter;","import React, {useContext, useState} from \"react\";\nimport {AppDialog} from \"../app-dialog\";\nimport {Button} from \"react-bootstrap\";\nimport {useDispatch} from \"react-redux\";\nimport {setSpinner} from \"../../store/slices/spinnerSlice\";\nimport {ZespContext} from \"../agents/ZespAgent\";\n\nexport const PowerDialogLink: React.FC = (): React.ReactElement => {\n  const [show, setShow] = useState(false);\n  const {zespSend} = useContext(ZespContext);\n  const dispatch = useDispatch();\n\n  const showPowerDialogClickHandler = () => setShow(true);\n\n  const onRestartClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Restarting, please wait...\"}));\n    setShow(false);\n    zespSend({data: \"RebootESP\"});\n  };\n\n  const onShutdownClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Shutting down...\"}));\n    // dispatch(setConnectionStatus(\"reconnect\"));\n    setShow(false);\n    setTimeout(() => document.location.href = \"/\", 2000);\n    zespSend({data: \"Shutdown\"});\n  };\n\n  const navLink = (<span className=\"nav-link clickable\" onClick={showPowerDialogClickHandler}><i className=\"bi bi-power\"/></span>)\n  const buttons = (\n    <>\n      <Button onClick={onRestartClickedHandler}>Restart ZESP</Button>\n      <Button onClick={onShutdownClickedHandler} variant=\"secondary\">Shutdown</Button>\n    </>\n  );\n\n  return (\n    <>\n      {navLink}\n      {show && (\n        <AppDialog title=\"Power management\" footer={buttons} onClosed={() => setShow(false)}>\n          <div className=\"mb-3\">Restart of ZESP service can take a few minutes. This page will be reloaded automatically when restart completed.</div>\n          <div>To shutdown, just click Shutdown button. But this is way with one direction, make sure you know what are you doing.</div>\n        </AppDialog>\n      )}\n    </>\n  )\n}\n\nexport default PowerDialogLink;","import React from 'react';\nimport './styles.scss'\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\nimport PowerDialogLink from \"../power-dialog\";\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center pe-2\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n      <div className=\"border-start mx-3 opacity-25\"/>\n      <PowerDialogLink/>\n    </nav>\n  );\n};\n\nexport default Result;","import React, {useContext, useState} from \"react\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {Col, Modal, Row} from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUiSettings, setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {ZespContext} from \"../agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\ninterface IProps {\n  zespFirmwareUpdate: DictionaryStrings,\n  zespFirmwareCurrentVersion: string,\n  onClosed: () => void,\n}\n\nconst UpdatesNotificationDialog: React.FC<IProps> = ({\n  onClosed,\n  zespFirmwareUpdate,\n  zespFirmwareCurrentVersion\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const SettingsService = useZespSettings(zesp);\n  const uiSettings = useSelector(getUiSettings);\n  const zespFirmwareUpdateVersion = zespFirmwareUpdate[\"ver\"] || \"unknown\";\n\n  const onHideHandler = () => setShow(false);\n\n  const updateData: DictionaryStrings = {\n    ...{\"Current version\": zespFirmwareCurrentVersion},\n    ...{\"New version\": zespFirmwareUpdateVersion},\n    ...{...zespFirmwareUpdate, ...{\"ver\": undefined}} // skip ver from \"other\" properties, cause we'll show it before\n  }\n  const onUpdateClickHandler = () => {\n    toast.success(\"Not implemented yet...\", {icon: (<i className=\"bi bi-cone-striped text-warning\"/>)});\n  }\n\n  const onSkipClickHandler = () => {\n    const update: UiSettings = {...uiSettings || {} as UiSettings, ...{firmwareSkipUpdate: zespFirmwareUpdateVersion}};\n\n    dispatch(setUiSettings(update));\n    SettingsService.setUiSettings(update);\n\n    toast.success(\"Notification for this version disabled\", {icon: (<i className=\"bi bi-bell-slash-fill text-success\"/>)});\n  }\n\n  return (\n    <Modal show={show} onExited={onClosed} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>New version of ZESP Firmware</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        <div className=\"rows-striped\">\n          {Object.keys(updateData).map((key, i) => {\n            return updateData[key]\n              && updateData[key]!.trim().length > 0\n              && (<Row key={i}><Col xs={4} className=\"py-2 text-capitalize text-muted text-end\">{key}</Col><Col className=\"py-2 text-dark\">{updateData[key]}</Col></Row>);\n          })}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button className=\"btn btn-primary\" onClick={onUpdateClickHandler}>Download and Update</button>\n        <button className=\"btn btn-secondary\" onClick={onSkipClickHandler}>Skip this version</button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default UpdatesNotificationDialog;","import React, {Fragment, useState} from \"react\";\nimport UpdatesNotificationDialog from \"./UpdatesNotificationDialog\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion, getZespFirmwareUpdateInfo} from \"../../store/slices/zespFirmwareSlice\";\nimport {getUiSettings} from \"../../store/slices/settingsSlice\";\n\nexport const UpdatesNotification: React.FC = (): React.ReactElement => {\n  const zespFirmwareUpdate = useSelector(getZespFirmwareUpdateInfo);\n  const zespCurrentVersion = useSelector(getZespFirmwareInstalledVersion);\n  const uiSettings = useSelector(getUiSettings);\n  const [showDialog, setShowDialog] = useState(false);\n\n  if (!zespFirmwareUpdate\n    || zespFirmwareUpdate[\"ver\"] === zespCurrentVersion\n    || uiSettings?.firmwareSkipUpdate === zespFirmwareUpdate[\"ver\"]) return (<Fragment/>);\n\n  const title = `${zespCurrentVersion} to ${zespFirmwareUpdate[\"ver\"]} update`;\n  const onUpdatesClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  return (\n    <div>\n      <span onClick={onUpdatesClickedHandler} className=\"badge bg-info ms-3 notification-updates clickable\" title={title}>\n        <i className=\"bi bi-cloud-arrow-down-fill\"/>\n      </span>\n      {showDialog && (<UpdatesNotificationDialog\n        onClosed={() => setShowDialog(false)}\n        zespFirmwareUpdate={zespFirmwareUpdate}\n        zespFirmwareCurrentVersion={zespCurrentVersion}/>)}\n    </div>\n  )\n}\n\nexport default UpdatesNotification;","import React from \"react\";\nimport \"./styles.scss\";\nimport TopMenu from \"../top-menu\";\nimport {UpdatesNotification} from \"../updates-notification/UpdatesNotification\";\n\nexport const AppHeader: React.FC = (): React.ReactElement => {\n  return (\n    <header className=\"app-header\">\n      <a href=\"/\"><h3 className=\"title\">ZESP:UI</h3></a>\n      <div className=\"d-flex flex-row align-items-center\">\n        <TopMenu/>\n        <UpdatesNotification/>\n      </div>\n    </header>\n  )\n}\n\nexport default AppHeader;","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport {ZespAgent} from \"./shared/agents/ZespAgent\";\nimport {AppFooter} from \"./shared/footer\";\nimport AppHeader from \"./shared/header\";\n\nconst Content = () => {\n  const [serverIndex, setServerIndex] = useState<number | null>(null);\n  const serversString = window.localStorage.getItem(\"servers\");\n  const servers = (serversString && JSON.parse(serversString)) || [];\n  const selectedServer = (serverIndex === null || servers.length <= serverIndex!)\n    ? null\n    : servers[serverIndex!];\n\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage setServerIndex={setServerIndex}/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  return (\n    <ZespAgent server={props.server}>\n      <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <AppHeader/>\n        <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n          <Routes/>\n        </main>\n        <AppFooter/>\n      </div>\n    </ZespAgent>\n  )\n}\n\nconst Result = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Content/>\n        </Switch>\n      </Router>\n\n      <LoadingSpinner/>\n      <Toaster/>\n    </>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport zespReducer from \"./slices/zespSlice\";\nimport devicesReducer from \"./slices/devicesSlice\";\nimport spinnerReducer from \"./slices/spinnerSlice\";\nimport settingsReducer from \"./slices/settingsSlice\";\nimport zespFirmwareReducer from \"./slices/zespFirmwareSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    zesp: zespReducer,\n    devices: devicesReducer,\n    spinner: spinnerReducer,\n    settings: settingsReducer,\n    zespFirmware: zespFirmwareReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/configure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (process.env.NODE_ENV === \"production\") {\n  console.debug = (msg: string) => {\n    return;\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}