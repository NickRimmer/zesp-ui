{"version":3,"sources":["i18n/config.js","loader.js","i18n sync /^.*$","data/controls sync /^/.//.*$","store/slices/spinnerSlice.tsx","shared/loading-spinner/index.tsx","shared/fadein-transition/index.tsx","store/slices/zespSlice.tsx","services/zesp/common/ZespResponseValidators.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/unknown.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/controls/OnOffToggle.tsx","device-controls/index.tsx","device-controls/layouts/DefaultLayout.tsx","device-controls/layouts/binary-sensor/index.tsx","device-controls/layouts/index.tsx","device-controls/layouts/ble-beacon/index.tsx","device-controls/layouts/binary-sensor/auto.tsx","device-controls/layouts/ble-beacon/auto.tsx","services/zesp/service-devices.tsx","store/slices/devicesSlice.tsx","store/slices/zespFirmwareSlice.tsx","services/zesp/service-root.tsx","services/zesp/zespSettings.hook.tsx","services/zesp/service-firmware.tsx","models/UiSettings.tsx","store/slices/settingsSlice.tsx","services/zesp/service-report-updates.tsx","shared/agents/ZespAgent.hook.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","services/zesp/common/service-connector.tsx","shared/agents/ZespAgent.tsx","services/devices.tsx","pages/devices/hook.tsx","pages/devices/item-image.tsx","pages/devices/item.tsx","shared/app-dialog/index.tsx","pages/devices/add-zigbee-dialog/index.tsx","pages/devices/add-zigbee-dialog/hook.tsx","pages/devices/add-buttons/index.tsx","pages/devices/add-buttons/hook.tsx","pages/devices/index.tsx","pages/setup/index.tsx","pages/device-info/hook.tsx","pages/device-info/header.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","shared/device-settings-dialog/index.tsx","shared/device-settings-dialog/hook.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","pages/device-template/hook.tsx","shared/error-message/index.tsx","pages/device-template/device-template-report/hook.tsx","pages/device-template/device-template-report/index.tsx","pages/device-template/device-report-settings/index.tsx","pages/device-template/device-template-editor/index.tsx","pages/device-template/index.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","shared/footer/AppFooter.tsx","shared/power-dialog/index.tsx","shared/top-menu/index.tsx","shared/updates-notification/UpdatesNotificationDialog.tsx","shared/updates-notification/UpdatesNotification.tsx","shared/header/index.tsx","App.tsx","reportWebVitals.ts","store/configure.tsx","index.tsx"],"names":["languages","namespaces","i18n","use","initReactI18next","init","fallbackLng","lng","resources","result","lang","ns","path","replace","require","error","console","debug","loadResources","defaultNS","window","$","jQuery","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","spinnerShow","spinnerMessage","spinnerSlice","createSlice","name","reducers","setSpinnerShow","state","action","payload","setSpinner","show","message","getSpinner","spinner","actions","CustomSpinner","Modal","centered","size","backdrop","Body","className","Spinner","animation","variant","LoadingSpinner","useSelector","useState","setShow","showTimerRef","useRef","useEffect","current","clearTimeout","undefined","setTimeout","FadeIn","props","setClassName","children","zespSlice","connectionStatus","initialized","setConnectionStatus","setInitialized","getStatus","zesp","getInitialized","JsonZespResponseValidator","fileName","isValid","event","dataType","responseFileName","dataParts","exec","TypedZespResponseValidator","ReportZespResponseValidator","deviceId","endpointId","clusterId","attributeId","length","response","JSON","parse","ShortAddr","EndPoint","ClusterId","AttribId","AllMessagesZespResponseValidator","DeviceControls","config","reportKey","deviceInfo","zespInfo","IEEE","endpoint","Report","layoutId","settings","customLayout","find","x","OnOffRoot","zespSend","useContext","ZespContext","report","Row","ButtonGroup","Button","val","toString","onClick","data","arguments","commandOn","isBinary","commandOff","LevelRoot","currentValue","Number","max","min","value","setValue","minMaxAttributes","inRange","Math","FormControl","style","width","type","onChange","command","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","key","initialValue","readValue","item","localStorage","getItem","warn","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","RgbRoot","split","r","g","b","color","setColor","colorPicker","setColorPicker","colorChangeHandler","rgb","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","Transition","onRefresh","classNameFrom","onLoad","classNameTo","timeOutMs","HighlightOnUpdate","UnknownControl","showDetails","setShowDetails","configData","reportData","label","parsed","trim","roleParts","role","roleSettings","units","preventDefault","href","title","NoReport","IlluminanceSensor","parseInt","LevelControl","sendValueToZesp","formatCommand","Device","PlayerSrcRoot","srcReport","playSettings","playReport","toast","src","setSrc","play","setPlay","list","placeholder","icon","i","OnOffBinarySensor","payloadOn","zespRoleSettings","ValueSensor","unit","OnOffToggle","commandToggle","DeviceControlCol1","Col","md","DeviceControlCol2","DefaultLayout","controls","unknown","forEach","control","controlProps","element","getControlForDevice","device","push","showUnknown","setShowUnknown","reportKeysValue","reportKeysBattery","deviceClasses","batteryValuesRange","getValueSettings","onOffReport","getReport","iconClassName","icons","onFalse","valueClassName","valueTitle","statusValue","status","deviceClass","valueSettings","onTrue","styles","titles","getBatterySettings","stateClassName","valuePercents","valueString","valueNumber","round","oneOfKeys","layoutsAvailable","default","binarySensorLayout","battery","bleBeacon","isInRange","signalLevel","lastUpdateMs","time","lastDate","Date","calculateRelative","now","relative","setRelative","timer","setInterval","clearInterval","lastUpdateStyle","rangeStyle","toLocaleDateString","toLocaleTimeString","autoDetectors","valueReportKey","layoutTools","binarySensorValueKeys","batteryReportKey","binarySensorBatteryKeys","roleDeviceClassIs","DevType","class","rangeReport","signalReport","autoDetect","layout","autoDetector","expectedDeviceClasses","reportDeviceClass","indexOf","ServiceDevices","getDevicesListAsync","Promise","reject","zespRequestAsync","responseValidator","then","onDevicesListReceived","devices","zespVersion","catch","reason","subscribeListUpdate","onUpdateHandler","subscribe","jsonString","zespDevices","assign","buildDeviceInfo","getDeviceModelSettings","modelId","predefinedDevices","modelIds","findIndex","ModelId","devicesSlice","setDevices","updateDevices","root","updateWithoutRoot","filter","updateDevice","deviceIndex","updateZespInfo","updateReport","ieee","update","updateRootReports","updateReportsOrder","orderedReportKeys","reduce","a","getDeviceByIee","getAllDevices","zespFirmwareUpdateInfo","zespFirmwareInstalledVersion","zespSkipVersion","zespFirmwareSlice","setZespFirmwareUpdate","setZespFirmwareInstalledVersion","getZespFirmwareUpdateInfo","zespFirmware","getZespFirmwareInstalledVersion","extractReports","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","useZespSettings","setCustom","dataStr","getAsync","json","parseResponse","setAsync","join","toLocaleLowerCase","getCustomAsync","jsonStr","setUiSettings","timeoutSeconds","updates","currentVersion","updatesInformation","UiDefaultSettings","zespSettings","uiSettings","settingsSlice","setZespSettings","getZespSettings","getUiSettings","onReport","onUpdate","Data","useZespAgent","dispatch","uiSettingsRef","connectAsync","server","getDevices","getRoot","ServiceRoot","reports","readUiSettings","readFirmwareUpdates","firmwareUpdate","firmwareLastCheck","ServiceFirmware","firmwareInfo","subscribeReportUpdates","ServiceUpdates","subscribeDevicesListUpdate","Result","ConnectionStartTimeout","RestartConnectionTimeout","DefaultRequestTimeoutSeconds","WatcherIntervalSeconds","ZespDataEventType","ZespDataEvent","useZespConnector","_server","_onMessageEvent","EventTarget","_ws","_lastMessageTimestamp","_watcher","_onMessageReceived","ws","messageParts","messageType","shift","unshift","resultEvent","_runWatcher","zespStatusChangeHandler","underlyingWebsocket","readyState","Constants","args","dataHex","replaceAll","match","group","Uint8Array","_getBinaryData","send","responseReceived","validator","listener","force","close","_tryToCloseWS","protocol","document","location","serverAddress","address","WebsocketBuilder","onOpen","onClose","onError","onMessage","build","_tryConnectWs","handler","zespEvent","unsubscribe","getServerAddress","React","createContext","ZespAgent","useDispatch","zespStatus","setZesp","_restartTimerRef","Provider","finally","Devices","buildLayoutSettingsFromZesp","groupName","deviceType","substr","reportKeyInfo","registeredCluster","DataHaClusterIds","buildLayoutItemForRole","attributes","getLayoutItem","dataCluster","roleName","layoutItem","devicesUpdateDetector","Name","devicesSorting","buildListItem","image","getImageUrl","tags","getTagsFromReports","process","Img","reportKeyDetails","clusterInfo","HomeAutoClusters","sort","setImage","testImage","Image","onerror","backgroundImage","detailsLink","xs","sm","lg","xxl","to","AppDialog","footer","forceClose","onShow","onHide","onClosed","onSubmit","onHideHandler","Header","Footer","onExited","Form","AddZigbeeDialog","logs","setLogs","logRef","isCompleted","setIsCompleted","isCompletedRef","joinListenerRef","allDevListenerRef","onJoinReceivedHandler","onAllDevReceivedHandler","stopPairing","stopListening","includes","messages","onChannelChangedHandler","channel","useHook","channels","Select","currentTarget","ProgressBar","animated","striped","dangerouslySetInnerHTML","__html","AddDeviceButton","showDialog","setShowDialog","onAddZigbeeClickedHandler","onAddBleClickedHandler","success","DropdownButton","Dropdown","Item","deviceItems","t","useTranslation","Card","SaveSettings","updatedSettings","alert","Container","Nav","exact","marginTop","deviceUpdateDetector","keysA","keysB","Location","deleteConfirmed","setDeleteConfirmed","headerClassName","groups","headerContent","activeGroupName","setActiveGroupName","popover","Popover","as","Toggle","Menu","onSettingsHandler","onReportsHandler","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","onDeleteDeviceHandler","Divider","onDebugDeviceHandler","onCloseClickHandler","layoutProps","layoutName","LayoutElements","history","useHistory","DeviceSettingsDialog","setForceClose","onCancelHandler","onSaveHandler","toLowerCase","setName","setLocation","Group","Label","column","Control","useParams","showSettings","setShowSettings","autoExit","setAutoExit","_returnBack","onExitHandler","duration","onSettingsClosedHandler","headerHandlers","handleSubmit","input","prop","attr","ReactForm","restProps","predefinedMessages","predefinedBinary","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","repsPaused","_setRepsPaused","messagesRef","pausedRef","repsPausedRef","addMessages","startsWith","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","togglePause","toggleRepsPause","i2","controlId","defaultValue","inputProps","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","allSettings","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","rel","Wifi","ssid","pass","ip","mask","gw","ErrorMessage","fontSize","DeviceTemplateReportHook","template","showSettingsHandler","keyInfo","attributeInfo","editHandler","reportInfo","DeviceTemplateReport","hook","playHandler","onMoveReport","deleteHandler","DeviceReportSettings","onSave","setLabel","setRole","mat","setMat","roleDataList","isInvalid","DeviceTemplateEditor","onAddReport","cluster","setCluster","attribute","setAttribute","setAttributes","readData","setReadData","showAll","setShowAll","sendButtonDisabled","setSendButtonDisabled","readDataMessage","setReadDataMessage","showAddSettings","setShowAddSettings","alignTimers","endpointClusters","EP","entries","clusters","ClO","ClI","responseDataTypes","ResponseDataTypes","alignSelected","lists","getElementsByClassName","delay","listGroup","activeElement","scrollIntoView","behavior","block","readingDataBegin","Dtype","readOnly","disabled","ListGroup","vertical","active","attributeParts","FormGroup","FormLabel","FormCheckInput","checked","DeviceTemplatePage","setTemplate","setStatus","onSaveReportSettings","updatedReports","updatedTemplate","onDelete","moveReport","amount","reportKeys","currentIndex","newIndex","tmp","changeDeviceHandler","Routes","isInitialized","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","editServer","updateAction","addAction","closeAction","InputGroup","Text","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","setServerIndex","AppFooter","PowerDialogLink","navLink","buttons","UpdatesNotificationDialog","zespFirmwareUpdate","zespFirmwareCurrentVersion","SettingsService","zespFirmwareUpdateVersion","updateData","firmwareSkipUpdate","UpdatesNotification","zespCurrentVersion","AppHeader","Content","serverIndex","serversString","selectedServer","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","zespReducer","devicesReducer","spinnerReducer","settingsReducer","zespFirmwareReducer","ReactDOM","render","StrictMode","getElementById","msg"],"mappings":"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","file":"static/js/main.a708a112.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n              // console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;","window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 122,\n\t\"./config.js\": 122,\n\t\"./locales/en/common\": 147,\n\t\"./locales/en/common.json\": 147,\n\t\"./locales/en/nav\": 148,\n\t\"./locales/en/nav.json\": 148,\n\t\"./locales/en/pages/devices\": 149,\n\t\"./locales/en/pages/devices.json\": 149,\n\t\"./locales/en/pages/setup-mqtt\": 150,\n\t\"./locales/en/pages/setup-mqtt.json\": 150,\n\t\"./locales/en/pages/setup-wifi\": 151,\n\t\"./locales/en/pages/setup-wifi.json\": 151,\n\t\"./locales/en/pages/welcome\": 152,\n\t\"./locales/en/pages/welcome.json\": 152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 230;","var map = {\n\t\"./root\": 178,\n\t\"./root.json\": 178\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 350;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\ninterface IState {\n  spinnerShow: boolean,\n  spinnerMessage: string,\n}\n\nconst initialState: IState = {\n  spinnerShow: false,\n  spinnerMessage: \"Loading...\",\n}\n\nexport const spinnerSlice = createSlice({\n  name: \"spinner\",\n  initialState,\n  reducers: {\n    setSpinnerShow: (state, action: PayloadAction<boolean>): void => {\n      state.spinnerShow = action.payload;\n      if (state.spinnerShow) state.spinnerMessage = initialState.spinnerMessage;\n    },\n\n    setSpinner: (state, action: PayloadAction<{ show: boolean, message: string | undefined }>): void => {\n      state.spinnerShow = action.payload.show;\n      state.spinnerMessage = action.payload.message || initialState.spinnerMessage;\n    }\n  }\n});\n\nconst getters = {\n  getSpinner: (state: RootState) => state.spinner,\n}\n\nexport const {getSpinner} = getters;\nexport const {setSpinnerShow, setSpinner} = spinnerSlice.actions;\nexport default spinnerSlice.reducer;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport \"./styles.scss\"\nimport {Modal, Spinner} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\nimport {getSpinner} from \"../../store/slices/spinnerSlice\";\n\nexport const LoadingSpinner = () => {\n  const {spinnerShow, spinnerMessage} = useSelector(getSpinner);\n  const [show, setShow] = useState(spinnerShow);\n  const showTimerRef = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    if (showTimerRef.current) {\n      clearTimeout(showTimerRef.current)\n      showTimerRef.current = undefined\n    }\n    if (spinnerShow) showTimerRef.current = setTimeout(() => setShow(true), 1000);\n    else setShow(false)\n  }, [spinnerShow])\n\n  return (\n    <Modal show={show} centered size=\"sm\" backdrop={true}>\n      <Modal.Body>\n        <div className=\"d-flex align-items-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"me-3\"/>\n          <div>{spinnerMessage}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport const CustomSpinner: React.FC<{ message: string }> = ({message}) => {\n  return (\n    <Modal show={true} centered size=\"sm\" backdrop={true}>\n      <Modal.Body>\n        <div className=\"d-flex align-items-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"me-3\"/>\n          <div>{message}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default LoadingSpinner;","import React, {HTMLAttributes, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: React.FC<HTMLAttributes<HTMLDivElement>> = (props): React.ReactElement => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={`${className} ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\nexport type zespConnectionStatus = \"disconnected\" | \"connected\" | \"connecting\" | \"reconnect\" | \"closed\";\n\nexport interface ZespState {\n  connectionStatus: zespConnectionStatus,\n  initialized: boolean,\n}\n\nconst initialState: ZespState = {\n  connectionStatus: \"disconnected\",\n  initialized: false,\n}\n\nexport const zespSlice = createSlice({\n  name: \"zesp\",\n  initialState,\n  reducers: {\n    setConnectionStatus: (state, action: PayloadAction<zespConnectionStatus>) => {\n      state.connectionStatus = action.payload;\n    },\n\n    setInitialized: (state, action: PayloadAction<boolean>) => {\n      state.initialized = action.payload;\n    },\n  }\n})\n\nconst getters = {\n  getStatus: (state: RootState) => state.zesp.connectionStatus,\n  getInitialized: (state: RootState) => state.zesp.initialized,\n}\n\nexport const {getStatus, getInitialized,} = getters;\nexport const {setConnectionStatus, setInitialized,} = zespSlice.actions;\nexport default zespSlice.reducer;","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {ZespDeviceUpdate} from \"../models/ZespDeviceUpdate\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const ReportZespResponseValidator = (deviceId: string, endpointId: string, clusterId: string, attributeId: string) => ({\n  name: ReportZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (!event.dataType || event.dataType !== \"rep\") return false\n    if (event.dataParts.length < 1) return false\n    const response = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate\n\n    if (!response.ShortAddr || response.ShortAddr !== deviceId) return false;\n    if (!response.EndPoint || response.EndPoint !== endpointId) return false;\n    if (!response.ClusterId || response.ClusterId !== clusterId) return false;\n    if (!response.AttribId || response.AttribId !== attributeId) return false;\n\n    return true;\n  }\n})\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataControlSettings>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataControlSettings>(props: IDeviceControlProps<DataControlSettings>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    zespSend({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    zespSend({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  // const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useContext, useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  // const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    zespSend({data: command});\n    // setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    zespSend({data: command});\n    // setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler} width=\"270px\"/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(\n    () => setClassName(props.classNameFrom),\n    [props.children?.toString()]);\n\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {DeviceControls} from \"../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"./index\";\nimport {HighlightOnUpdate} from \"../shared/transition/HighlightOnUpdate\";\nimport {Row} from \"react-bootstrap\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataControlSettings>) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<NoReport id={props.config.id} reportData={reportData} configData={configData}/>)\n\n  const label = report.label || props.config.name || props.config.id || \"Unknown data\";\n  const value =\n    (report.parsed && report.parsed.toString().trim() === report.val.toString().trim() && report.parsed)\n    || (report.parsed && report.val && `${report.parsed} (${report.val})`)\n    || report.val\n    || \"No data\";\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 && JSON.parse(roleParts[1]);\n  const units = (roleSettings && roleSettings[\"unit_of_measurement\"]) || \"\";\n\n  const showDetailsClicked = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setShowDetails(!showDetails);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value} {units}</HighlightOnUpdate>\n        <a onClick={showDetailsClicked} href=\"#\" className=\"value-info\" title=\"Unrecognized data, click to show details\">\n          <i className=\"bi bi-info-circle-fill ms-2 text-secondary\"/>\n        </a>\n      </DeviceControlCol2>\n      <div className={`alert alert-info flex-column col-12 ${showDetails ? \"\" : \"d-none\"}`}>\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </Row>\n  )\n\n  // return \n}\n\nconst NoReport = (props: { id: string, configData: string, reportData: string }) => (\n  <Row>\n    <DeviceControlCol1>{props.id}</DeviceControlCol1>\n    <DeviceControlCol2>\n      <div className=\"alert alert-info\">\n        <div>{props.configData}</div>\n        {props.reportData && (<div className=\"mt-2\">{props.reportData}</div>)}\n      </div>\n    </DeviceControlCol2>\n  </Row>\n)\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.parsed ? Number(report.parsed) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    sendValueToZesp(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    sendValueToZesp(result);\n  }\n\n  const sendValueToZesp = (value: number) => {\n    const data = formatCommand(props.config.arguments.command, value, props);\n    zespSend({data: data});\n  }\n\n  const label = report?.label || props.config.name || \"Level\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number, props: IDeviceControlProps<LayoutSettingsLevel>): string => command\n  .replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useContext, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataControlSettings>) => {\n  const {zespSend} = useContext(ZespContext);\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\",\n    \"http://listen.181fm.com/181-thebox_128k.mp3?\",\n    \"http://stream.live.vc.bbcmedia.co.uk/bbc_radio_one\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    // DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    setPlay(\"OFF\");\n    // DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    // DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) zespSend({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    // DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) zespSend({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = (props.config.zespRoleSettings && props.config.zespRoleSettings[\"unit_of_measurement\"]) || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOffToggle} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffToggle = (props: IDeviceControlProps<LayoutSettingsOnOffToggle>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    const command = props.config.arguments.commandOn.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const offHandler = () => {\n    const command = props.config.arguments.commandOff.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const toggleHandler = () => {\n    const command = props.config.arguments.commandToggle.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  }\n\n  const label = report?.label || props.config.name || \"Power\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.parsed.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant=\"secondary\" onClick={toggleHandler}>Toggle</Button>\n          <Button variant={report?.parsed.toString() === \"0\" ? \"primary\" : \"secondary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {Fragment, FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsOnOffToggle, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./unknown\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\nimport {OnOffToggle} from \"./controls/OnOffToggle\";\n\ntype ElementTypes = \"regular\" | \"skip\" | \"unknown\";\n\ninterface IResult {\n  element: JSX.Element,\n  type: ElementTypes\n}\n\nexport const getControlForDevice = (config: DataControlSettings, deviceInfo: DeviceInfo): IResult => {\n  const controlProps: IDeviceControlProps<DataControlSettings> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return {type: \"regular\", element: (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>)};\n    case \"level_root\" :\n      return {type: \"regular\", element: (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n    case \"rgb_root\" :\n      return {type: \"regular\", element: (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>)};\n    case \"player_src_root\" :\n      return {type: \"regular\", element: (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"player_control_root\":\n      return {type: \"skip\", element: (<Fragment/>)};\n\n    case \"level_control\" :\n      return {type: \"regular\", element: (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n\n    case \"illuminance_sensor\" :\n      return {type: \"regular\", element: (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>)};\n    case \"binary_sensor\" :\n      return {type: \"regular\", element: (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"sensor\" :\n      return {type: \"regular\", element: (<ValueSensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n\n    case \"on_off_toggle\":\n      return {type: \"regular\", element: (<OnOffToggle {...controlProps} config={controlProps.config as LayoutSettingsOnOffToggle}/>)};\n\n    default:\n      return {type: \"unknown\", element: (<UnknownControl {...controlProps}/>)}\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n}","import {getControlForDevice} from \"../index\";\nimport React, {FunctionComponent, useState} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\n\nexport const DefaultLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const controls: React.ReactElement[] = [];\n  const unknown: React.ReactElement[] = [];\n\n  props.settings.forEach(settings => {\n    const control = getControlForDevice(settings, props.device);\n    if (control.type === \"skip\") return;\n\n    if (control.type === \"unknown\") unknown.push(control.element);\n    else controls.push(control.element);\n  });\n\n  // show by default if now identified controls found\n  const [showUnknown, setShowUnknown] = useState(controls.length === 0);\n\n  const onToggleUnknownHandler = () => {\n    setShowUnknown(!showUnknown);\n  }\n\n  return (\n    <div className=\"default-layout\">\n      {controls.length > 0 && (\n        <div className=\"elements\">\n          {controls.map((element, i) => {\n            return (<div key={i} className=\"device-control-group\">{element}</div>);\n          })}\n        </div>\n      )}\n\n      {unknown.length > 0 && (\n        <>\n          <button onClick={onToggleUnknownHandler} className=\"show-unknown-btn btn btn-outline-info\">Unknown reports ({unknown.length})</button>\n          <div className={`elements unknown ${showUnknown ? \"show\" : \"hide\"}`}>\n            {unknown.map((element, i) => {\n              return (<div key={i} className=\"device-control-group\">{element}</div>);\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}","import React, {FunctionComponent} from \"react\";\nimport \"./styles.scss\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {IDeviceClassSettings} from \"./IDeviceClassSettings\";\n\nexport const reportKeysValue = [\"0100060000\", \"0104060000\"];\nexport const reportKeysBattery = [\"010000FF02\"];\n\nconst deviceClasses: { [deviceClass: string]: IDeviceClassSettings } = require(\"./device-classes.json\");\nconst batteryWarningLevelPercents = 50;\nconst batteryValuesRange = [2.7, 3.1]; // battery values to calculate percents from 0 to 100%\n\nexport const BinarySensorLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const value = getValueSettings(props);\n  const battery = getBatterySettings(props);\n\n  return (\n    <div className=\"row custom-binary-layout\">\n      <div className=\"col col-5 left\">\n        <i className={`bi ${value.iconClassName}`}/>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Current status:</div>\n          <div className={value.valueClassName}>{value.valueTitle}</div>\n        </div>\n\n        <div className=\"text-center mt-3 w-100\">\n          <div>Battery Level: <span className={`status ${battery.stateClassName}`}>{battery.valueTitle}</span></div>\n          <div className=\"progress mt-3\">\n            <div\n              className={`progress-bar ${battery.stateClassName}`}\n              role=\"progressbar\"\n              style={{width: `${battery.valuePercents}%`}}/>\n          </div>\n          <div className=\"battery-icon\">\n            <i className={`bi bi-battery-half ${battery.stateClassName}`}/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n// region getValueSettings \nconst getValueSettings = (props: LayoutProps): {\n  iconClassName: string,\n  valueClassName: string,\n  valueTitle: string\n} => {\n  const onOffReport = getReport(reportKeysValue, props);\n  if (!onOffReport) return {\n    iconClassName: deviceClasses[\"default\"].icons!.onFalse,\n    valueClassName: \"status-unknown\",\n    valueTitle: \"Unknown\"\n  }\n\n  // try to get status of binary sensor\n  const statusValue = onOffReport.parsed || onOffReport.val;\n  const roleParts = onOffReport.role && onOffReport.role.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const status: boolean = roleSettings && roleSettings[\"payload_on\"]\n    ? statusValue === roleSettings[\"payload_on\"] // compare with role settings\n    : (statusValue === \"1\" || statusValue === \"01\") // compare with default expected\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const iconClassName = status ? `${valueSettings.icons!.onTrue} ${valueSettings.styles!.onTrue}` : `${valueSettings.icons!.onFalse} ${valueSettings.styles!.onFalse}`;\n  const valueClassName = status ? `status ${valueSettings.styles!.onTrue}` : `status ${valueSettings.styles!.onFalse}`;\n  const valueTitle = status ? valueSettings.titles.onTrue : valueSettings.titles.onFalse;\n\n  return {iconClassName, valueClassName, valueTitle};\n}\n// endregion\n\n// region getBatterySettings\nconst getBatterySettings = (props: LayoutProps): {\n  stateClassName: string,\n  valueTitle: string,\n  valuePercents: number\n} => {\n  const report = getReport(reportKeysBattery, props);\n\n  // return default for unknown\n  if (!report) return {stateClassName: \"??\", valueTitle: \"-\", valuePercents: 0};\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const units = roleSettings && roleSettings[\"unit_of_measurement\"] || \"\";\n  const valueString = Number(report.parsed || report.val) || undefined;\n  let valuePercents: number | undefined = undefined;\n\n  // get percents\n  if (!valueString) valuePercents = undefined\n  else if (units === \"%\") valuePercents = Number(valueString);\n  else {\n    let valueNumber = Number(valueString) || undefined;\n    if (valueNumber) {\n      valueNumber = Math.min(batteryValuesRange[1], Math.max(batteryValuesRange[0], valueNumber));\n      valuePercents = Math.round((1 - (batteryValuesRange[1] - valueNumber) / (batteryValuesRange[1] - batteryValuesRange[0])) * 100);\n    }\n  }\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const valueTitle = `${valueString || \"??\"} ${units}`;\n  const stateClassName = !valuePercents\n    ? \"status-unknown\"\n    : valuePercents <= batteryWarningLevelPercents\n      ? valueSettings.styles!.onFalse\n      : valueSettings.styles!.onTrue;\n\n  return {\n    stateClassName,\n    valuePercents: valuePercents || 0,\n    valueTitle\n  };\n}\n// endregion\n\nconst getReport = (oneOfKeys: string[], props: LayoutProps): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = props.device.zespInfo.Report[key];\n    if (report) return report;\n  }\n}","import {DefaultLayout} from \"./DefaultLayout\";\nimport {BinarySensorLayout} from \"./binary-sensor\";\nimport {FunctionComponent} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\nimport AutoDetectionBinarySensor from \"./binary-sensor/auto\";\nimport AutoDetectionBleBeacon from \"./ble-beacon/auto\";\nimport BleBeaconLayout from \"./ble-beacon\";\n\n// list of available layouts with names\nexport const layoutsAvailable = {\n  default: DefaultLayout,\n  binarySensorLayout: BinarySensorLayout,\n  bleBeacon: BleBeaconLayout,\n} as { [name: string]: FunctionComponent<LayoutProps> };\n\n// list of layout auto detection functions, which return layout name\nconst autoDetectors: { (zespInfo: ZespDeviceInfo): string | undefined }[] = [\n  AutoDetectionBinarySensor,\n  AutoDetectionBleBeacon,\n];\n\n// region help methods\nexport const layoutTools = {\n  autoDetect: (zespInfo: ZespDeviceInfo): string | undefined => {\n    for (const autoDetector of autoDetectors) {\n      const layout = autoDetector(zespInfo);\n      if (layout) return layout;\n    }\n\n    return undefined;\n  },\n\n  roleDeviceClassIs: (expectedDeviceClasses: string[], report: ZespReportInfo): boolean => {\n    const roleParts = report.role && report.role.split(\"&\");\n    if (roleParts.length < 2) return false;\n\n    const roleSettings = JSON.parse(roleParts[1]);\n    const reportDeviceClass = roleSettings[\"device_class\"];\n    if (!reportDeviceClass) return false;\n\n    return expectedDeviceClasses.indexOf(reportDeviceClass) >= 0;\n  },\n  getReport: (oneOfKeys: string[], zespInfo: ZespDeviceInfo): ZespReportInfo | undefined => {\n    for (const key of oneOfKeys) {\n      const report = zespInfo.Report[key];\n      if (report) return report;\n    }\n  }\n}\n// endregion","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {HighlightOnUpdate} from \"../../../shared/transition/HighlightOnUpdate\";\n\nconst lastUpdateTresholdSeconds = 60 * 5;\n\nexport const BleBeacon: FunctionComponent<LayoutProps> = (props) => {\n  const isInRange = props.device.zespInfo.Report[\"ble_InRange\"]?.parsed === \"1\";\n  const signalLevel = props.device.zespInfo.Report[\"ble_signal_level\"]?.parsed;\n\n  const lastUpdateMs = Math.max(props.device.zespInfo.Report[\"ble_InRange\"].time, props.device.zespInfo.Report[\"ble_signal_level\"].time);\n  const lastDate = new Date(lastUpdateMs);\n  const calculateRelative = () => Math.round((Date.now() - lastUpdateMs) / 1000);\n  const [relative, setRelative] = useState(calculateRelative());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setRelative(calculateRelative());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    }\n  }, [lastUpdateMs]);\n\n  const lastUpdateStyle = relative < lastUpdateTresholdSeconds\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  const rangeStyle = isInRange\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  return (\n    <div className=\"row custom-layout\">\n      <div className=\"col col-5 left flex-column position-relative\">\n        <i className={`bi bi-wifi ${rangeStyle}`}/>\n        <div className={`icon-description ${rangeStyle}`}>{isInRange ? \"In range\" : \"Out of range\"}</div>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Signal level:</div>\n          <div className={`status ${rangeStyle}`}><HighlightOnUpdate>{signalLevel}</HighlightOnUpdate></div>\n        </div>\n        <div className=\"text-center mt-3\">\n          <div>Last update:</div>\n          <div className={`status ${lastUpdateStyle}`}>{lastDate.toLocaleDateString()} {lastDate.toLocaleTimeString()}</div>\n          <div className=\"small text-muted opacity-50\">{\n            relative < 60 ? `${relative} seconds ago` :\n              relative / 60 < 60 ? `${Math.round(relative / 60)} minutes ago` :\n                `${Math.round(relative / 60 / 60)} hours ago`\n          }</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BleBeacon;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {reportKeysBattery as binarySensorBatteryKeys, reportKeysValue as binarySensorValueKeys} from \"./index\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBinarySensor = (zespInfo: ZespDeviceInfo): string | undefined => {\n  const valueReportKey = layoutTools.getReport(binarySensorValueKeys, zespInfo);\n  const batteryReportKey = layoutTools.getReport(binarySensorBatteryKeys, zespInfo);\n\n  if (!valueReportKey || !batteryReportKey) return undefined; // these two guys required\n  if (!layoutTools.roleDeviceClassIs([\"battery\"], batteryReportKey)) return undefined;\n  if (!layoutTools.roleDeviceClassIs([\"door\", \"motion\"], valueReportKey)) return undefined;\n\n  console.debug(`Auto detected layout 'binarySensorLayout' for '${zespInfo.IEEE}'`);\n  return \"binarySensorLayout\";\n}\n\nexport default AutoDetectionBinarySensor;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBleBeacon = (zespInfo: ZespDeviceInfo): string | undefined => {\n  if (zespInfo.DevType !== \"BED\" || zespInfo.class !== \"beacon\") return undefined;\n\n  const rangeReport = layoutTools.getReport([\"ble_InRange\"], zespInfo);\n  const signalReport = layoutTools.getReport([\"ble_signal_level\"], zespInfo);\n  if (!rangeReport || !signalReport) return undefined;\n\n  return \"bleBeacon\";\n}\n\nexport default AutoDetectionBleBeacon;","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {layoutTools} from \"../../device-controls/layouts\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\ninterface IGetDevicesResponse {\n  devices: DeviceInfo[],\n  zespVersion: string | undefined,\n}\n\nconst ServiceDevices = {\n  getDevicesListAsync: (zesp: IZespConnector) => new Promise<IGetDevicesResponse>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(event => {\n        const result = onDevicesListReceived(event);\n        resolve({\n          devices: result,\n          zespVersion: event.dataParts.length > 1 ? event.dataParts[1] : undefined,\n        } as IGetDevicesResponse);\n      })\n      .catch(reason => reject(reason));\n  }),\n\n  subscribeListUpdate: (zesp: IZespConnector, onUpdateHandler: (devices: DeviceInfo[]) => void): void => {\n    // setTimeout(() => zesp.zespSend({data: \"getDeviceList\"}), 3000);\n    zesp.subscribe(TypedZespResponseValidator(\"alldev\"), event => {\n      const result = onDevicesListReceived(event);\n      onUpdateHandler(result);\n    })\n  }\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent): DeviceInfo[] => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n  return zespDevices.map(buildDeviceInfo);\n}\n\nexport const getDeviceModelSettings = (modelId: string): { settings: DataDeviceSettings, controls: DataControlSettings[] } => {\n  const settings: DataDeviceSettings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === modelId) >= 0) || {} as DataDeviceSettings;\n  const controls = settings?.controls && require(`../../data/controls/${settings.controls}`) as DataControlSettings[] || [];\n\n  return {settings, controls};\n}\n\nconst buildDeviceInfo = (zespInfo: ZespDeviceInfo): DeviceInfo => {\n  const {settings, controls} = getDeviceModelSettings(zespInfo.ModelId);\n  controls.forEach(control => {\n    if (!control.reportKey) return;\n    const reportKey = control.reportKey.endpoint + control.reportKey.clusterId + control.reportKey.attributeId;\n    if (!zespInfo.Report[reportKey]) zespInfo.Report[reportKey] = {} as ZespReportInfo;\n  });\n\n  // try to autodetect layout by reports\n  const layout = settings.layout || layoutTools.autoDetect(zespInfo);\n\n  return {\n    zespInfo: zespInfo,\n    settings: {...settings, ...{layout: layout}},\n    customLayout: controls\n  };\n}\n\nexport default ServiceDevices;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {RootState} from \"../configure\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespReportUpdates} from \"../../services/zesp/service-root\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\n\nexport interface DevicesState {\n  devices: DeviceInfo[]\n}\n\nconst initialState: DevicesState = {\n  devices: []\n}\n\nexport const devicesSlice = createSlice({\n  name: \"devices\",\n  initialState,\n  reducers: {\n    setDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      state.devices = action.payload;\n    },\n\n    // like 'setDevices' but keeping root device \n    updateDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      const root = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!root) {\n        state.devices = action.payload;\n        return;\n      }\n\n      const updateWithoutRoot = action.payload.filter(x => x.zespInfo.ModelId !== \"ZESP_Root\");\n      state.devices = [root, ...updateWithoutRoot];\n    },\n\n    updateDevice: (state, action: PayloadAction<DeviceInfo>): void => {\n      const deviceIndex = state.devices.findIndex(x => x.zespInfo.IEEE === action.payload.zespInfo.IEEE);\n      if (deviceIndex < 0) {\n        state.devices.push(action.payload);\n      } else {\n        state.devices[deviceIndex] = action.payload;\n      }\n    },\n\n    updateZespInfo: (state, action: PayloadAction<ZespDeviceInfo>): void => {\n      const deviceIndex = state.devices.findIndex(x => x.zespInfo.IEEE === action.payload.IEEE);\n      if (deviceIndex < 0) {\n        console.warn(\"Cannot update zesp data, cause device information not found\")\n        return\n      } else {\n        state.devices[deviceIndex].zespInfo = action.payload;\n      }\n    },\n\n    updateReport: (state, action: PayloadAction<{ ieee: string, reportKey: string, update: Partial<ZespReportInfo> }>): void => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Device '${action.payload.ieee}' not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report[action.payload.reportKey] = {...device.zespInfo.Report[action.payload.reportKey], ...action.payload.update};\n      // console.debug(`Device '${action.payload.ieee}' with report '${action.payload.reportKey}' has been updated`);\n    },\n    updateRootReports: (state, action: PayloadAction<ZespReportUpdates>) => {\n      const device = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = {...device.zespInfo.Report, ...action.payload} as { [reportId: string]: ZespReportInfo };\n    },\n\n    updateReportsOrder: (state, action: PayloadAction<{ ieee: string, orderedReportKeys: string[] }>) => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = action.payload.orderedReportKeys.reduce((a, key) => ({...a, [key]: device.zespInfo.Report[key]}), {});\n    }\n  }\n})\n\nconst getters = {\n  getDeviceByIee: (state: RootState, ieee: string): DeviceInfo | undefined => state.devices.devices.find(x => x.zespInfo.IEEE === ieee),\n  getDevicesByModelId: (state: RootState, modelId: string): DeviceInfo[] => state.devices.devices.filter(x => x.zespInfo.ModelId === modelId),\n  getAllDevices: (state: RootState): DeviceInfo[] => state.devices.devices || [] as DeviceInfo[],\n}\n\nexport const {getDevicesByModelId, getDeviceByIee, getAllDevices} = getters;\nexport const {setDevices, updateReport, updateRootReports, updateDevices, updateDevice, updateZespInfo, updateReportsOrder} = devicesSlice.actions;\nexport default devicesSlice.reducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\n\ninterface IState {\n  zespFirmwareUpdateInfo: DictionaryStrings | undefined,\n  zespFirmwareInstalledVersion: string,\n  zespSkipVersion: string | undefined,\n}\n\nconst initialState: IState = {\n  zespFirmwareUpdateInfo: undefined,\n  zespFirmwareInstalledVersion: \"-\",\n  zespSkipVersion: undefined,\n}\n\nexport const zespFirmwareSlice = createSlice({\n  name: \"zespFirmwareUpdate\",\n  initialState: initialState,\n  reducers: {\n    setZespFirmwareUpdate: (state, action: PayloadAction<DictionaryStrings>): void => {\n      state.zespFirmwareUpdateInfo = action.payload;\n    },\n\n    setZespFirmwareInstalledVersion: (state, action: PayloadAction<string>): void => {\n      state.zespFirmwareInstalledVersion = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespFirmwareUpdateInfo: (state: RootState) => state.zespFirmware.zespFirmwareUpdateInfo,\n  getZespFirmwareInstalledVersion: (state: RootState) => state.zespFirmware.zespFirmwareInstalledVersion,\n}\n\nexport const {getZespFirmwareUpdateInfo, getZespFirmwareInstalledVersion} = getters;\nexport const {setZespFirmwareUpdate, setZespFirmwareInstalledVersion} = zespFirmwareSlice.actions;\nexport default zespFirmwareSlice.reducer;","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespRootData} from \"./models/ZespRootData\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {getDeviceModelSettings} from \"./service-devices\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getRootDataAsync: (zesp: IZespConnector) => new Promise<ZespReportUpdates>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n    })\n      .then(event => {\n        const result = extractReports(event);\n\n        if (result) resolve(result);\n        else reject(\"Cannot update root device information\");\n      })\n      .catch(reason => reject(reason));\n  }),\n}\n\nexport type ZespReportUpdates = {\n  [key: string]: Partial<ZespReportInfo>\n}\n\nconst extractReports = (event: ZespDataEvent): ZespReportUpdates => {\n  const {controls} = getDeviceModelSettings(\"ZESP_Root\");\n  if (controls.length == 0) return {};\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const result: ZespReportUpdates = {};\n\n  const reportOnOff = controls.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) result[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId] = {val: data.on.toString()};\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = controls.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) result[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId] = {val: data.level.toString()};\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = controls.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) result[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId] = {val: `${data.B}:${data.G}:${data.R}`};\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = controls.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) result[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId] = {val: data.sound.volume.toString()};\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = controls.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) result[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId] = {val: data.sound.current_path?.toString()};\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = controls.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) result[playControl.endpoint + playControl.clusterId + playControl.attributeId] = {val: data.sound.play.toString()};\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  return result;\n}\n\n","import {ZespSettings} from \"./models/ZespSettings\";\nimport {JsonZespResponseValidator, TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport const useZespSettings = ({zespRequestAsync, zespSend}: IZespConnector) => {\n  const getAsync = (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    zespRequestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  })\n\n  const setAsync = (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      zespRequestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  }\n\n  const getCustomAsync = function getCustom<T>(name: string): Promise<T | undefined> {\n    return zespRequestAsync({\n      data: `LoadJson|/${name}.json`,\n      responseValidator: JsonZespResponseValidator(name)\n    })\n      .then(event => {\n        if (event.dataParts.length < 1) throw new Error(\"Unexpected JSON file response from ZESP\");\n        const jsonStr = event.dataParts[1];\n\n        if (!jsonStr || jsonStr.length === 0 || jsonStr.trim().toLocaleLowerCase() === \"null\") return undefined;\n        return JSON.parse(jsonStr) as T;\n      })\n  }\n\n  const setCustom = function setCustom<T>(name: string, data: T): void {\n    const fileName = `/${name}.json`;\n    const dataStr = JSON.stringify(data);\n\n    zespSend({\n      data: `SaveJson|${fileName}|${dataStr}`\n    });\n  }\n\n  const setUiSettings = (data: UiSettings): void => {\n    setCustom(\"zesp_ui\", data);\n  }\n\n  return {\n    getAsync,\n    setAsync,\n    getCustomAsync,\n    setCustom,\n    setUiSettings,\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n\nexport default useZespSettings;","import {FirmwareInfo} from \"../../models/FirmwareInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getFirmwareInfoAsync: (zesp: IZespConnector): Promise<FirmwareInfo> => zesp\n    .zespRequestAsync({\n      data: \"loadfwlist\",\n      responseValidator: TypedZespResponseValidator(\"rsploadfwlist\"),\n      timeoutSeconds: 15,\n    }).then(event => {\n      if (event.dataParts.length < 2) throw Error(\"Unexpected zesp firmware information response\");\n\n      const updates = JSON.parse(event.dataParts[0]) as DictionaryStrings[];\n      const currentVersion = event.dataParts[1];\n      if (!updates || updates.length === 0) throw Error(\"Unexpected zesp firmware udpates response\");\n      if (!currentVersion || currentVersion.length === 0) throw Error(\"Unexpected zesp current version response\");\n\n      const result: FirmwareInfo = {\n        currentVersion,\n        updatesInformation: updates[0]\n      };\n\n      return result;\n    }),\n}\n","import {DictionaryStrings} from \"./DictionaryStrings\";\n\nexport type UiSettings = {\n  firmwareUpdate: DictionaryStrings | undefined,\n  firmwareLastCheck: number | undefined,\n  firmwareSkipUpdate: string | undefined,\n}\n\nexport const UiDefaultSettings: UiSettings = {} as UiSettings;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {UiSettings} from \"../../models/UiSettings\";\n\ninterface IState {\n  zespSettings: ZespSettings | undefined,\n  uiSettings: UiSettings | undefined,\n}\n\nconst initialState: IState = {\n  zespSettings: undefined,\n  uiSettings: undefined,\n}\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setZespSettings: (state, action: PayloadAction<ZespSettings>): void => {\n      state.zespSettings = action.payload;\n    },\n\n    setUiSettings: (state, action: PayloadAction<UiSettings>): void => {\n      state.uiSettings = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespSettings: (state: RootState) => state.settings.zespSettings,\n  getUiSettings: (state: RootState) => state.settings.uiSettings,\n}\n\nexport const {getZespSettings, getUiSettings} = getters;\nexport const {setZespSettings, setUiSettings} = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, onReport))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const ieee = event.dataParts[1];\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportKey = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = {\n    parsed: data.parsed,\n    val: data.Data,\n    time: data.time,\n  } as Partial<ZespReportInfo>\n\n  onReport(ieee, reportKey, report);\n}","import {Dispatch} from \"redux\";\nimport {setConnectionStatus} from \"../../store/slices/zespSlice\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport ServiceDevices from \"../../services/zesp/service-devices\";\nimport {setDevices, updateDevices, updateReport, updateRootReports} from \"../../store/slices/devicesSlice\";\nimport {setZespFirmwareInstalledVersion, setZespFirmwareUpdate} from \"../../store/slices/zespFirmwareSlice\";\nimport ServiceRoot from \"../../services/zesp/service-root\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport ServiceFirmware from \"../../services/zesp/service-firmware\";\nimport {UiDefaultSettings, UiSettings} from \"../../models/UiSettings\";\nimport {setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {useRef} from \"react\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport ServiceUpdates from \"../../services/zesp/service-report-updates\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport const useZespAgent = (dispatch: Dispatch, zesp: IZespConnector) => {\n  const uiSettingsRef = useRef<UiSettings>({} as UiSettings);\n  const firmwareUpdateMinTimout = 1000 * 60 * 60 * 24;\n\n  // init\n  const connectAsync = (server: IServerInfo): Promise<void> => zesp\n    .connectAsync(server, (status) => dispatch(setConnectionStatus(status)), false)\n\n  // read devices list\n  const getDevices = (): Promise<void> => ServiceDevices.getDevicesListAsync(zesp)\n    .then(result => {\n      dispatch(setDevices(result.devices));\n      if (result.zespVersion) dispatch(setZespFirmwareInstalledVersion(result.zespVersion));\n    });\n\n  // read root info\n  const getRoot = (): Promise<void> => ServiceRoot\n    .getRootDataAsync(zesp)\n    .then(reports => {\n      dispatch(updateRootReports(reports))\n      console.debug(\"Root device reports updated\");\n    });\n\n  // read ui settings\n  const readUiSettings = (): Promise<void> => useZespSettings(zesp)\n    .getCustomAsync<UiSettings>(\"zesp_ui\")\n    .then(settings => {\n      const result = settings || UiDefaultSettings;\n      dispatch(setUiSettings(result))\n      uiSettingsRef.current = result;\n    })\n\n  // private firmware updates downloading\n  const _getFirmware = (): void => {\n    ServiceFirmware\n      .getFirmwareInfoAsync(zesp)\n      .then(firmwareInfo => {\n        dispatch(setZespFirmwareInstalledVersion(firmwareInfo.currentVersion));\n        dispatch(setZespFirmwareUpdate(firmwareInfo.updatesInformation));\n\n        uiSettingsRef.current = {...uiSettingsRef.current, ...{firmwareUpdate: firmwareInfo.updatesInformation, firmwareLastCheck: Date.now()}};\n        useZespSettings(zesp).setCustom(\"zesp_ui\", uiSettingsRef.current);\n\n        dispatch(setUiSettings(uiSettingsRef.current));\n        console.debug(\"Firmware updates information loaded\");\n      })\n      .catch(reason => {\n        console.warn(\"Cannot read Firmware update information\");\n        console.warn(reason);\n      });\n  }\n\n  // read firmware updates\n  const readFirmwareUpdates = (): Promise<void> => {\n    const uiSettings = uiSettingsRef.current\n    if (!uiSettings) throw new Error(\"Read UI settings before firmware checking\");\n\n    if (uiSettings.firmwareUpdate && uiSettings.firmwareLastCheck && (Date.now() - uiSettings.firmwareLastCheck) < firmwareUpdateMinTimout) {\n      dispatch(setZespFirmwareUpdate(uiSettings.firmwareUpdate));\n      console.debug(\"Firmware information read from settings\");\n      return Promise.resolve();\n    }\n\n    // run firmware loading in background\n    _getFirmware();\n\n    return Promise.resolve();\n  }\n\n  // subscribe to report updates events\n  const subscribeReportUpdates = (): Promise<void> => {\n    const onReport = (ieee: string, reportKey: string, update: Partial<ZespReportInfo>) =>\n      dispatch(updateReport({ieee, reportKey, update}));\n\n    ServiceUpdates.subscribeToEvents(zesp, onReport);\n    return Promise.resolve();\n  }\n\n  const subscribeDevicesListUpdate = (): Promise<void> => {\n    const onUpdate = (devices: DeviceInfo[]): void => {\n      // devices.pop();\n      dispatch(updateDevices(devices));\n      console.debug(\"Devices list updated\");\n    }\n\n    ServiceDevices.subscribeListUpdate(zesp, onUpdate);\n    return Promise.resolve();\n  }\n\n  return {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n    subscribeDevicesListUpdate,\n  }\n}\n\nexport default useZespAgent;","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 100,\n\n  // connection verify interval\n  RestartConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n\n  // connection checker interval, should be greater then 'DefaultRequestTimeoutSeconds' \n  WatcherIntervalSeconds: 15,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\nimport Constants from \"./Constants\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IRequestAsyncArgs, ISendArgs, ZespConnectedAction, ZespConnectorHandler, ZespConnectorListener} from \"./service-connector.interfaces\";\nimport {AllMessagesZespResponseValidator} from \"./ZespResponseValidators\";\n\nexport const useZespConnector = () => {\n  const _onMessageEvent = new EventTarget();\n  let _ws: Websocket | undefined = undefined;\n  let _server: IServerInfo | undefined;\n  let _lastMessageTimestamp: number = Date.now();\n  let _watcher: NodeJS.Timeout | undefined = undefined;\n\n  const _onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n    _lastMessageTimestamp = Date.now();\n    const messageParts = e.data\n      .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n      .split(\"\\x00\");\n\n    if (messageParts.length == 0) {\n      console.warn(\"Received empty message from zesp\");\n      return;\n    }\n\n    let messageType = messageParts.shift();\n\n    const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n    if (jsonMatch) {\n      messageParts.unshift(messageType);\n      messageType = \"json\";\n    }\n\n    const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n    _onMessageEvent.dispatchEvent(resultEvent);\n  }\n\n  const _tryToCloseWS = (): boolean => {\n    if (_ws) {\n      try {\n        _ws.close(1000);\n        return true;\n      } catch {\n        // it's ok :P\n      }\n    }\n    return false;\n  }\n\n  const _tryConnectWs = (zespStatusChangeHandler: ZespConnectedAction) => new Promise<void>((resolve, reject) => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const serverAddress = `${protocol}://${_server!.address}:81`;\n    console.debug(`Create connection to ${serverAddress}`)\n    _ws = new WebsocketBuilder(serverAddress)\n      .onOpen(() => {\n        console.debug(\"ZESP connected\");\n        zespStatusChangeHandler(\"connected\");\n        resolve();\n      })\n      .onClose(() => {\n        console.debug(\"ZESP connection closed\");\n        zespStatusChangeHandler(\"closed\");\n        reject(\"ZESP connection closed\");\n      })\n      .onError(() => reject(\"ZESP connection error\"))\n      .onMessage(_onMessageReceived)\n      .build();\n  });\n\n  const _getBinaryData = (message: string): Uint8Array => {\n    const data = message.replaceAll(\" \", \"\");\n    const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    return new Uint8Array(dataHex);\n  }\n\n  const _pingAsync = (): Promise<ZespDataEvent> =>\n    zespRequestAsync({data: \"LoadJson|/ping.json\", responseValidator: AllMessagesZespResponseValidator})\n\n  const _runWatcher = (zespStatusChangeHandler: ZespConnectedAction): Promise<void> => {\n    if (_watcher) {\n      console.debug(\"Stop old watcher\");\n      clearInterval(_watcher);\n    }\n\n    console.debug(\"Start watcher\");\n    _watcher = setInterval(() => {\n      if (_ws?.underlyingWebsocket?.readyState !== 1) return;\n\n      const periodWithoutMessageSeconds = (Date.now() - _lastMessageTimestamp) / 1000;\n      if (periodWithoutMessageSeconds > Constants.WatcherIntervalSeconds) {\n        _lastMessageTimestamp = Date.now() + Constants.DefaultRequestTimeoutSeconds * 1000;\n        if (_watcher) clearInterval(_watcher); // stop watcher until 'ping' finished\n        \n        _pingAsync()\n          .then(() => _runWatcher(zespStatusChangeHandler)) // everything fine, continue watching\n          .catch(() => zespStatusChangeHandler(\"reconnect\")); // oops, try to restart. Do not start watcher at the moment\n      }\n    }, 5000);\n\n    return Promise.resolve();\n  }\n\n  const connectAsync = (server: IServerInfo, zespStatusChangeHandler: ZespConnectedAction, force: boolean) => {\n    _server = server;\n    return new Promise<void>((resolve, reject) => {\n      console.debug(\"Start WS connection...\");\n\n      if (!force) {\n        if (_ws?.underlyingWebsocket?.readyState === 0) {\n          reject(\"Already connecting\");\n          return;\n        }\n\n        if (_ws?.underlyingWebsocket?.readyState === 1) {\n          console.debug(\"ZESP already connected, skip connection\");\n          resolve();\n          return;\n        }\n      }\n\n      _tryToCloseWS();\n      _tryConnectWs(zespStatusChangeHandler)\n        .then(() => _runWatcher(zespStatusChangeHandler))\n        .then(resolve)\n        .catch(reject);\n    })\n  }\n\n  const zespSend = (args: ISendArgs): void => {\n    if (!_ws) {\n      console.warn(\"WebSocket client is not initialized yet\");\n      return;\n    }\n\n    const data = args.isBinary === true\n      ? _getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  }\n\n  const zespRequestAsync = (args: IRequestAsyncArgs) => new Promise<ZespDataEvent>((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      _onMessageEvent.addEventListener(ZespDataEventType, listener);\n      zespSend({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })\n\n  const subscribe = (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    _onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  }\n\n  const unsubscribe = (listener: ZespConnectorListener) => _onMessageEvent.removeEventListener(ZespDataEventType, listener)\n\n  const getServerAddress = () => _server?.address;\n\n  return {\n    connectAsync,\n    zespSend,\n    zespRequestAsync,\n    subscribe,\n    unsubscribe,\n    getServerAddress,\n  }\n}\n\nexport default useZespConnector;","import React, {Fragment, useContext, useEffect, useRef, useState} from \"react\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStatus, setConnectionStatus, setInitialized} from \"store/slices/zespSlice\";\nimport useZespAgent from \"./ZespAgent.hook\";\nimport useZespConnector from \"../../services/zesp/common/service-connector\";\nimport Constants from \"../../services/zesp/common/Constants\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\n\ninterface IProps {\n  server: IServerInfo\n}\n\nexport const ZespContext = React.createContext<IZespConnector>(useZespConnector());\n\nexport const ZespAgent: React.FC<IProps> = ({server, children})\n  : React.ReactElement => {\n  const dispatch = useDispatch();\n  const zespStatus = useSelector(getStatus);\n  const [zesp, setZesp] = useState(useContext(ZespContext));\n  const _restartTimerRef = useRef<NodeJS.Timeout | undefined>(undefined);\n\n  useEffect(() => {\n    if (zespStatus === \"reconnect\") {\n      setZesp(useZespConnector());\n      dispatch(setConnectionStatus(\"disconnected\"));\n    }\n\n    console.debug(`ZESP agent status: ${zespStatus}`);\n  }, [zespStatus])\n\n  const {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n    subscribeDevicesListUpdate,\n  } = useZespAgent(dispatch, zesp);\n\n  if (zespStatus === \"connected\") return (\n    <ZespContext.Provider value={zesp}>\n      {children}\n    </ZespContext.Provider>\n  );\n\n  if (zespStatus === \"closed\") {\n    if (_restartTimerRef.current) {\n      clearTimeout(_restartTimerRef.current);\n      _restartTimerRef.current = undefined;\n    }\n\n    _restartTimerRef.current = setTimeout(() => {\n      if (zespStatus === \"closed\") {\n        dispatch(setConnectionStatus(\"reconnect\"));\n      } else {\n        console.debug(`Cancel restarting, cause status: ${zespStatus}`);\n      }\n    }, Constants.RestartConnectionTimeout);\n  }\n\n  if (zespStatus !== \"disconnected\") return (<Fragment/>);\n  dispatch(setConnectionStatus(\"connecting\"));\n  connectAsync(server)\n    .then(getDevices)\n    .then(getRoot)\n    .then(readUiSettings)\n    .then(readFirmwareUpdates)\n    .then(subscribeReportUpdates)\n    .then(subscribeDevicesListUpdate)\n\n    // final steps\n    .then(() => dispatch(setInitialized(true)))\n    .catch(reason => console.error(reason))\n    .finally(() => {\n      setZesp(zesp);\n      console.debug(\"ZESP initialization completed\");\n    });\n\n  return (<Fragment/>);\n}\n","import {DataControlSettings, DataLayoutItemsGroup} from \"../models/DataControlSettings\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout && device.customLayout.length > 0\n      ? device.customLayout\n      : buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string, deviceType: string): ReportKeyInfo | undefined => {\n    if (!deviceType || deviceType === \"ZED\" || deviceType === \"ZR\") {\n      if (reportKey?.length !== 10) // 01 0000 0000\n      {\n        console.warn(`Unknown format of Zigbee report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: reportKey.substr(0, 2),\n        clusterId: reportKey.substr(2, 4),\n        attributeId: reportKey.substr(6),\n      }\n    }\n\n    if (deviceType === \"BED\") {\n      if (reportKey?.length < 1) // a-ny-thing\n      {\n        console.warn(`Unknown format of BLE report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: \"\",\n        clusterId: reportKey,\n        attributeId: \"\",\n      }\n    }\n\n    console.warn(`Unknown device type '${deviceType}'`);\n    return undefined;\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataControlSettings[] => {\n  const getLayoutItem = (reportKey: string): DataControlSettings | undefined => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey, device.zespInfo.DevType);\n    if (!reportKeyInfo) {\n      console.warn(`Cannot get report key details for '${device.zespInfo.IEEE}' device`);\n      return undefined;\n    }\n\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataControlSettings;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey, device.zespInfo.DevType)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key)).filter(x => x !== undefined) as DataControlSettings[];\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string, deviceType: string): DataControlSettings | undefined => {\n  // return undefined;\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey, deviceType);\n  if (!reportKeyInfo) return undefined;\n\n  const roleName = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: roleName} as DataControlSettings // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${roleName}`]\n    || dataCluster.attributes[roleName]\n    || {id: roleName} as DataControlSettings; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","import {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {useContext} from \"react\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport {useSelector} from \"react-redux\";\nimport {getAllDevices} from \"../../store/slices/devicesSlice\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {Devices} from \"../../services/devices\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\n\nexport default () => {\n  const {getServerAddress} = useContext(ZespContext)\n  const devices = useSelector(getAllDevices, devicesUpdateDetector)\n\n  const serverAddress = getServerAddress() || \"/\"\n  const deviceItems = [...devices]\n    .sort(devicesSorting)\n    .map(x => buildListItem(x, serverAddress))\n\n  return {\n    serverAddress,\n    deviceItems,\n  }\n}\n\n// region tools\n\nconst devicesUpdateDetector = (a: DeviceInfo[], b: DeviceInfo[]) => {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i].zespInfo.Name !== b[i].zespInfo.Name) return false;\n  }\n\n  return true;\n}\n\nconst devicesSorting = (a: DeviceInfo, b: DeviceInfo): number => {\n  if (a.zespInfo.ModelId === \"ZESP_Root\") return -1;\n  if (b.zespInfo.ModelId === \"ZESP_Root\") return 1;\n\n  if (a.zespInfo.ModelId < b.zespInfo.ModelId) return -1;\n  if (a.zespInfo.ModelId > b.zespInfo.ModelId) return 1;\n\n  return 0;\n}\n\nconst buildListItem = (device: DeviceInfo, serverAddress: string): DeviceListItem => {\n  const title = device.zespInfo.Name && device.zespInfo.Name.length > 0 ? device.zespInfo.Name : device.zespInfo.ModelId;\n  const image = getImageUrl(device, serverAddress);\n  const tags = getTagsFromReports(device.zespInfo.Report, device.zespInfo.DevType);\n\n  return {\n    title,\n    ieee: device.zespInfo.IEEE,\n    image,\n    tags\n  };\n}\n\nconst getImageUrl = (device: DeviceInfo, serverAddress: string): string => {\n  // device.settings?.image || device.zespInfo.Img\n  if (device.settings?.image)\n    return `${process.env.PUBLIC_URL}/device-images/${device.settings.image}`;\n\n  if (device.zespInfo.Img)\n    return `http://${serverAddress}:8081/${device.zespInfo.Img}`\n\n  const modelId = device.zespInfo.ModelId;\n  return `http://${serverAddress}:8081/img/${modelId}.jpg`;\n}\n\nconst getTagsFromReports = (reports: { [key: string]: ZespReportInfo }, deviceType: string): string[] => {\n  const result: string[] = [];\n\n  for (const key of Object.keys(reports)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key, deviceType);\n\n    if (!reportKeyDetails) {\n      console.warn(`Cannot read report '${key}' details for '${deviceType}' device type`);\n      continue;\n    }\n\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    result.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  return result\n    .filter((x, i) => result.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n}\n\n// endregion\n","import React, {useEffect, useState} from \"react\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nconst defaultImage = \"/device-images/default.png\";\n\nexport default (props: IProps) => {\n  const [image, setImage] = useState(props.device.image);\n\n  useEffect(() => {\n    const testImage = new Image();\n    testImage.onerror = () => {\n      setImage(defaultImage);\n    }\n    testImage.src = image;\n  }, []);\n\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${image})`}}/>);\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {Col} from \"react-bootstrap\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nexport default (props: IProps) => {\n  const {device} = props;\n  const detailsLink = `/devices/${device.ieee}`;\n\n  return (\n    <Col xs={12} sm={6} lg={4} xxl={3} className=\"p-1\">\n      <NavLink className=\"item p-3 border rounded d-block\" to={detailsLink}>\n        <div className=\"d-flex\">\n          <div><ItemImage device={props.device}/></div>\n          <div className=\"ps-2\">\n            <div className=\"title\">{device.title}</div>\n            <div className=\"ieee text-muted small\">{device.ieee}</div>\n            {device.tags.length > 0 && (\n              <div className=\"badges small text-wrap\">\n                {device.tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n              </div>\n            )}\n          </div>\n        </div>\n      </NavLink>\n    </Col>\n  );\n}\n","import React, {FormEvent, useEffect, useState} from \"react\";\nimport {Form, Modal} from \"react-bootstrap\";\n\ninterface IProps {\n  title: string,\n  className?: string,\n  size?: 'sm' | 'lg' | 'xl',\n  footer?: React.ReactElement | undefined,\n  forceClose?: boolean,\n  onShow?: () => void,\n  onHide?: () => void,\n  onClosed?: () => void,\n  onSubmit?: () => void,\n}\n\nexport const AppDialog: React.FunctionComponent<IProps> = ({\n  children,\n  title,\n  size,\n  className,\n\n  footer,\n  forceClose,\n  onShow,\n  onHide,\n  onClosed,\n  onSubmit,\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    if (forceClose) setShow(false);\n  }, [forceClose]);\n\n  const onClosedHandler = () => {\n    if (onClosed) onClosed();\n  }\n\n  const onHideHandler = () => {\n    setShow(false)\n    if (onHide) onHide();\n  }\n\n  const onSubmitHandler = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (onSubmit) onSubmit();\n  }\n\n  const result = (\n    <>\n      <Modal.Header>\n        <div>{title}</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        {children}\n      </Modal.Body>\n\n      {footer && (\n        <Modal.Footer>\n          {footer}\n        </Modal.Footer>\n      )}\n    </>\n  )\n\n  return (\n    <Modal show={show} onExited={onClosedHandler} onHide={onHideHandler} onShow={onShow} className={className} size={size}>\n      {onSubmit && (<Form onSubmit={onSubmitHandler}>{result}</Form>)}\n      {!onSubmit && result}\n    </Modal>\n  )\n}","import React from \"react\";\nimport useHook from \"./hook\";\nimport {AppDialog} from \"../../../shared/app-dialog\";\nimport {Col, Form, ProgressBar, Row} from \"react-bootstrap\";\n\ninterface IProps {\n  onClosed: () => void,\n}\n\nexport const AddZigbeeDialog: React.FC<IProps> = ({\n  onClosed\n}): React.ReactElement => {\n\n  const {\n    isCompleted,\n    logs,\n    onChannelChangedHandler\n  } = useHook();\n\n  const channels: React.ReactElement[] = []\n  for (let channel = 11; channel <= 26; channel++)\n    channels.push(<option>{channel}</option>);\n\n  return (\n    <AppDialog title=\"Add Zigbee device\" onClosed={onClosed} className=\"add-zigbee-dialog\">\n      {!isCompleted && (\n        <>\n          <Row className=\"mb-3 align-items-center\">\n            <Col>I'm ready to pair new devices on channels:</Col>\n            <Col xs={3}>\n              <Form.Select className=\"d-inline-block\" onChange={event => onChannelChangedHandler(event.currentTarget.value)}>\n                <option value=\"\">All</option>\n                {channels}\n              </Form.Select>\n            </Col>\n          </Row>\n\n          <ProgressBar animated={true} striped={true} now={100}/>\n        </>\n      )}\n      {isCompleted && (\n        <>\n          <p>Pairing completed. To set device template or edit reports, click to device and choose <span className=\"badge bg-secondary\">Edit</span> in settings.</p>\n          <ProgressBar now={100} variant=\"success\" label=\"Completed\"/>\n        </>\n      )}\n      {logs.length > 0 && (<div className=\"logs\" dangerouslySetInnerHTML={{__html: logs}}/>)}\n    </AppDialog>\n  )\n}\n\nexport default AddZigbeeDialog;","import {useContext, useEffect, useRef, useState} from \"react\";\nimport \"./styles.scss\";\nimport {ZespContext} from \"../../../shared/agents/ZespAgent\";\nimport {TypedZespResponseValidator} from \"../../../services/zesp/common/ZespResponseValidators\";\nimport {ZespConnectorListener} from \"../../../services/zesp/common/service-connector.interfaces\";\nimport {ZespDataEvent} from \"../../../services/zesp/common/ZespDataEvent\";\n\nexport default () => {\n  const {zespSend, subscribe, unsubscribe} = useContext(ZespContext)\n  const [logs, setLogs] = useState(\"\")\n  const logRef = useRef(logs)\n  const [isCompleted, setIsCompleted] = useState(false)\n  const isCompletedRef = useRef(isCompleted);\n  const joinListenerRef = useRef<ZespConnectorListener>()\n  const allDevListenerRef = useRef<ZespConnectorListener>()\n\n  useEffect(() => {\n    console.debug(\"start pairing...\");\n    joinListenerRef.current = subscribe(TypedZespResponseValidator(\"join\"), onJoinReceivedHandler);\n    allDevListenerRef.current = subscribe(TypedZespResponseValidator(\"alldev\"), onAllDevReceivedHandler)\n    zespSend({data: \"addDevice\"});\n\n    return () => {\n      stopPairing()\n      stopListening()\n    }\n  }, []);\n\n  const stopPairing = (): void => {\n    if (!isCompletedRef.current) {\n      console.debug(\"stop pairing\")\n      zespSend({data: \"addDeviceDone\"})\n    }\n  }\n\n  const stopListening = (): void => {\n    if (joinListenerRef.current) {\n      unsubscribe(joinListenerRef.current)\n      joinListenerRef.current = undefined\n    }\n\n    if (allDevListenerRef.current) {\n      unsubscribe(allDevListenerRef.current)\n      allDevListenerRef.current = undefined\n    }\n  }\n\n  const onJoinReceivedHandler = (event: ZespDataEvent): void => {\n    let message = event.dataParts[0];\n    if (message.includes(\": timeout\")) message = `<div class=\"warning\">${message}</div>`;\n\n    const messages = logRef.current + message;\n    logRef.current = messages;\n    setLogs(messages);\n  }\n\n  const onAllDevReceivedHandler = (event: ZespDataEvent): void => {\n    stopPairing();\n\n    setIsCompleted(true);\n    isCompletedRef.current = true;\n  }\n\n  const onChannelChangedHandler = (channel: string): void => {\n    zespSend({data: `addDevice||${channel}`});\n  }\n\n  return {\n    logs,\n    isCompleted,\n    onChannelChangedHandler,\n  }\n}","import React from \"react\";\nimport useHook from \"./hook\";\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\nimport AddZigbeeDialog from \"../add-zigbee-dialog\";\n\nexport const AddDeviceButton: React.FC = (): React.ReactElement => {\n  const {\n    onAddZigbeeClickedHandler,\n    onAddBleClickedHandler,\n    showDialog,\n    setShowDialog,\n  } = useHook();\n\n  return (\n    <>\n      <DropdownButton title=\"Add device\" variant=\"outline-secondary\">\n        <Dropdown.Item onClick={onAddZigbeeClickedHandler}>Zigbee</Dropdown.Item>\n        <Dropdown.Item onClick={onAddBleClickedHandler}>Bluetooth</Dropdown.Item>\n      </DropdownButton>\n      {showDialog && (<AddZigbeeDialog onClosed={() => setShowDialog(false)}/>)}\n    </>\n  )\n}","import {useState} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const [showDialog, setShowDialog] = useState(false);\n\n  const onAddZigbeeClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  const onAddBleClickedHandler = () => {\n    toast.success(\"Not implemented yet\", {icon: \"😅\"})\n  }\n\n  return {\n    onAddZigbeeClickedHandler,\n    onAddBleClickedHandler,\n    showDialog,\n    setShowDialog,\n  }\n}\n","import React from \"react\";\nimport \"./styles.scss\";\nimport useHook from \"./hook\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card, Row} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {AddDeviceButton} from \"./add-buttons\";\nimport {useTranslation} from \"react-i18next\";\n\nconst Result: React.FC = (): React.ReactElement => {\n  const {\n    deviceItems\n  } = useHook();\n\n  const {t} = useTranslation(\"pages.devices\");\n\n  if (deviceItems.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  console.debug(\"Building list of devices to show...\");\n\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <div className=\"group border-top pt-4\">\n              <div className=\"title h5 pb-2 d-flex justify-content-between align-items-center\">\n                <div>\n                  <span>{t(\"groups.all\")}</span>\n                  {deviceItems.length > 1 && (<span className=\"badge bg-secondary ms-2\">{deviceItems.length}</span>)}\n                </div>\n                <AddDeviceButton/>\n              </div>\n              <Row className=\"items\">\n                {deviceItems.map(device => (<Item device={device} key={device.ieee}/>))}\n              </Row>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nexport default Result;\n","import React, {Fragment, useContext, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setSpinnerShow} from \"../../store/slices/spinnerSlice\"\nimport {setZespSettings, getZespSettings} from \"../../store/slices/settingsSlice\"\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const settings = useSelector(getZespSettings);\n  const {getAsync} = useZespSettings(zesp);\n\n  useEffect(() => {\n    dispatch(setSpinnerShow(true));\n\n    getAsync()\n      .then(data => {\n        dispatch(setZespSettings(data));\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  }, []);\n\n  if (!settings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/firmware\">Firmware manager</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (\n  data: Partial<ZespSettings>,\n  settings: ZespSettings | undefined,\n  dispatch: Dispatch,\n  setAsync: { (settings: ZespSettings): Promise<void> }) =>\n  new Promise<void>((resolve, reject) => {\n    if (!settings) reject(\"Settings not loaded\");\n    dispatch(setSpinnerShow(true));\n\n    const updatedSettings: ZespSettings = ({...settings, ...data}) as ZespSettings;\n    setAsync(updatedSettings)\n      .then(() => {\n        dispatch(setZespSettings(updatedSettings));\n        resolve();\n        toast.success(\"Settings updated\");\n      })\n      .catch(reason => {\n        toast.error(`Cannot save: ${reason}`);\n        reject(reason);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  })\n\nexport default Result;","import {useHistory, useParams} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/configure\";\nimport {getDeviceByIee} from \"../../store/slices/devicesSlice\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {Devices} from \"../../services/devices\";\nimport toast from \"react-hot-toast\";\nimport {TypedZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {useContext, useState} from \"react\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport default () => {\n  const {ieee} = useParams<{ ieee: string }>();\n  const [showDialog, setShowDialog] = useState(true);\n  const [showSettings, setShowSettings] = useState(false);\n  const [autoExit, setAutoExit] = useState(false);\n  const history = useHistory();\n  const {zespRequestAsync} = useContext(ZespContext);\n  const deviceInfo = useSelector((state: RootState) => getDeviceByIee(state, ieee), deviceUpdateDetector);\n  const groups = deviceInfo && Devices.getControlGroups(deviceInfo);\n\n  if (!deviceInfo) throw new Error(\"Device information not found\");\n\n  const _returnBack = () => history.push(\"/devices\");\n\n  const onDebugDeviceHandler = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for debug info\", {icon: \"👽\"});\n  }\n\n  const onDeleteDeviceHandler = () => {\n    _returnBack();\n    // zespSend({data: \"getDeviceList\"});\n\n    zespRequestAsync({\n      data: `removeDevice|${deviceInfo.zespInfo.Device}|${deviceInfo.zespInfo.IEEE}`,\n      // data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(() => {\n        toast.success(\"Device deleted\", {icon: \"😵‍💫\"});\n      })\n      .catch(reason => {\n        toast.error(\"Cannot delete selected device\", {duration: 3000});\n        setShowDialog(true);\n      });\n  }\n\n  const onSettingsHandler = () => {\n    setShowDialog(false);\n    setShowSettings(true);\n  }\n\n  const onSettingsClosedHandler = () => {\n    setShowSettings(false);\n    setShowDialog(true);\n  }\n\n  const onReportsHandler = () => {\n    history.push(`/device/template/${deviceInfo.zespInfo.IEEE}`)\n  }\n\n  const onExitHandler = () => {\n    if (!autoExit) return;\n    setTimeout(_returnBack, 100)\n  };\n\n  const onCloseClickHandler = () => {\n    setAutoExit(true);\n    setShowDialog(false)\n  };\n\n  return {\n    deviceInfo,\n    groups,\n    showDialog,\n    showSettings,\n\n    onExitHandler,\n    onDebugDeviceHandler,\n    onDeleteDeviceHandler,\n    onCloseClickHandler,\n    onSettingsHandler,\n    onSettingsClosedHandler,\n    onReportsHandler,\n  }\n}\n\nconst deviceUpdateDetector = (a: DeviceInfo | undefined, b: DeviceInfo | undefined) => {\n  if (!a || !b) return false;\n  const keysA = Object.keys(a.zespInfo.Report);\n  const keysB = Object.keys(b.zespInfo.Report);\n\n  if (keysA.length != keysB.length) return false;\n  for (const key of keysA) {\n    if (a.zespInfo.Report[key] !== b.zespInfo.Report[key]) return false;\n  }\n\n  if (a.zespInfo.Name !== b.zespInfo.Name) return false;\n  if (a.zespInfo.Location !== b.zespInfo.Location) return false;\n\n  return true;\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Dropdown, Modal, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClickHandler: () => void,\n  onSettingsHandler: () => void,\n  onDeleteDeviceHandler: () => void,\n  onDebugDeviceHandler: () => void,\n  onReportsHandler: () => void,\n}) => {\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  const onDeleteDeviceHandler = () => {\n    if (deleteConfirmed) props.onDeleteDeviceHandler();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\" className=\"bg-danger text-light\">Achtung! Are you sure?</Popover.Header>\n      <Popover.Body>\n        To delete device registration, click <span className=\"text-danger\">Unpair device</span> one more time...\n      </Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <Modal.Header className={`${headerClassName} with-buttons`}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        <Dropdown className=\"d-inline-block\">\n          <Dropdown.Toggle variant=\"link\"><i className=\"bi bi-three-dots-vertical\"/></Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={props.onSettingsHandler}>Settings</Dropdown.Item>\n            <Dropdown.Item onClick={props.onReportsHandler}>Edit template</Dropdown.Item>\n            <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n              <button className=\"dropdown-item\" onClick={onDeleteDeviceHandler}>Unpair device</button>\n            </OverlayTrigger>\n            <Dropdown.Divider/>\n            <Dropdown.Item onClick={props.onDebugDeviceHandler}>Debug</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <span className=\"border-end mx-2\"/>\n        <button type=\"button\" className=\"btn\" aria-label=\"Close\" onClick={props.onCloseClickHandler}><i className=\"bi bi-x-lg\"/></button>\n      </div>\n    </Modal.Header>\n  )\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React, {FunctionComponent} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {DefaultLayout} from \"../../device-controls/layouts/DefaultLayout\";\nimport {layoutsAvailable} from \"../../device-controls/layouts\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  const layoutProps: LayoutProps = {\n    device: props.device,\n    settings: group.settings\n  };\n\n  const layoutName = props.device.settings?.layout || \"default\";\n  const LayoutElements: FunctionComponent<LayoutProps> = layoutsAvailable[layoutName] || DefaultLayout;\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      <LayoutElements {...layoutProps}/>\n    </Modal.Body>\n  )\n}","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport useHook from \"./hook\";\nimport {Row, Col, Form, Button} from \"react-bootstrap\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {AppDialog} from \"../app-dialog\";\n\ninterface IProps {\n  device: DeviceInfo,\n\n  onClosed: () => void,\n}\n\nexport const DeviceSettingsDialog: React.FC<IProps> = ({\n  device,\n  onClosed\n}): React.ReactElement => {\n  const {\n    forceClose,\n    // deviceData,\n\n    onCancelHandler,\n    onSaveHandler,\n  } = useHook(device);\n\n  const [name, setName] = useState(device.zespInfo.Name || \"\");\n  const [location, setLocation] = useState(device.zespInfo.Location || \"\");\n\n  const saveHandler = () => onSaveHandler(name, location)\n\n  const footer = (\n    <>\n      <Button type=\"submit\">Save changes</Button>\n      <Button variant=\"secondary\" role=\"cancel\" onClick={onCancelHandler}>Cancel</Button>\n    </>\n  )\n\n  return (\n    <AppDialog title=\"Device settings\" onClosed={onClosed} footer={footer} forceClose={forceClose} onSubmit={saveHandler}>\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Display name</Form.Label>\n        <Col><Form.Control value={name} onChange={event => setName(event.target.value)} placeholder={device.zespInfo.ModelId}/></Col>\n      </Form.Group>\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Location</Form.Label>\n        <Col><Form.Control value={location} onChange={event => setLocation(event.target.value)} placeholder=\"Default\"/></Col>\n      </Form.Group>\n    </AppDialog>\n  )\n}\n\nexport default DeviceSettingsDialog;","import {useContext, useState} from \"react\";\nimport {TypedZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {ZespContext} from \"../agents/ZespAgent\";\nimport toast from \"react-hot-toast\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {useDispatch} from \"react-redux\";\nimport {updateDevice} from \"../../store/slices/devicesSlice\";\n\nexport default (device: DeviceInfo) => {\n  const [forceClose, setForceClose] = useState(false)\n  const {zespRequestAsync} = useContext(ZespContext);\n  const dispatch = useDispatch();\n  const fileName = `/Devices/${device.zespInfo.IEEE}`;\n\n  const onCancelHandler = () => {\n    setForceClose(true)\n  }\n\n  const onSaveHandler = (name: string | undefined, location: string | undefined) => {\n    // convert empty strings to undefined\n    name = name || undefined;\n    location = location || undefined;\n\n    // read current settings\n    zespRequestAsync({data: `LoadJson|${fileName}`, responseValidator: TypedZespResponseValidator(fileName)})\n      .then(event => {\n        if (event.dataParts.length < 1) throw Error(\"Unexpected device settings from ZESP\");\n        return JSON.parse(event.dataParts[0]) as DictionaryStrings;\n      })\n\n      // send updated settings\n      .then(data => {\n        data[\"Name\"] = name;\n        data[\"Location\"] = location;\n\n        const json = JSON.stringify(data);\n        return zespRequestAsync({\n          data: `SaveJson|${fileName}|${json}`,\n          responseValidator: TypedZespResponseValidator(\"ZD_RSP\")\n        });\n      })\n\n      // complete settings updating\n      .then(event => {\n        if (event.dataParts.length < 2 || event.dataParts[1].toLowerCase() !== \"ok\") throw Error(\"Cannot save device settings\");\n\n        device = {\n          ...device, ...{\n            zespInfo: {\n              ...device.zespInfo, ...{\n                Name: name,\n                Location: location\n              }\n            }\n          }\n        }\n\n        dispatch(updateDevice(device));\n        setForceClose(true);\n        toast.success(\"Settings updated\");\n      })\n\n      .catch(reason => {\n        toast.error(\"Cannot read device settings from ZESP\");\n        console.error(reason);\n        setForceClose(true);\n      });\n  }\n\n  return {\n    forceClose,\n\n    onCancelHandler,\n    onSaveHandler,\n  }\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport useHook from \"./hook\";\nimport {Modal} from \"react-bootstrap\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport DeviceSettingsDialog from \"../../shared/device-settings-dialog\";\n\nexport default () => {\n\n  const {\n    deviceInfo,\n    groups,\n    showDialog,\n    showSettings,\n\n    onDebugDeviceHandler,\n    onDeleteDeviceHandler,\n    onExitHandler,\n    onCloseClickHandler,\n    onSettingsHandler,\n    onSettingsClosedHandler,\n    onReportsHandler,\n  } = useHook()\n\n  if (!groups || groups.length === 0) {\n    console.warn(`No controls found for '${deviceInfo.zespInfo.IEEE}' device`);\n    return (<CustomDeviceNotFound/>);\n  }\n\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const headerHandlers = {\n    onCloseClickHandler,\n    onSettingsHandler,\n    onSettingsClosedHandler,\n    onDeleteDeviceHandler,\n    onDebugDeviceHandler,\n    onReportsHandler\n  }\n\n  return (\n    <>\n      <Modal show={showDialog} onHide={onCloseClickHandler} onExited={onExitHandler}>\n        <CustomHeader\n          groups={groups}\n          device={deviceInfo}\n          activeGroupName={activeGroupName}\n          setActiveGroupName={setActiveGroupName}\n          {...headerHandlers}\n        />\n\n        <CustomBody\n          groups={groups}\n          device={deviceInfo}\n          activeGroupName={activeGroupName}/>\n      </Modal>\n      {showSettings && (<DeviceSettingsDialog onClosed={onSettingsClosedHandler} device={deviceInfo}/>)}\n    </>\n  )\n}\n","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\", \"LoadJson|/zesp_ui.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default (): React.ReactElement => {\n  const {zespSend, subscribe, unsubscribe} = useContext(ZespContext);\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n  const [repsPaused, _setRepsPaused] = useState<boolean>(true);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n  const repsPausedRef = useRef(repsPaused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    if (repsPausedRef.current && (\n      message.startsWith(\"rep|\") ||\n      message.startsWith(\"ArBle|\")\n    )) return;\n\n    const data: string[] = [message.substr(0, 500), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const toggleRepsPause = () => {\n    const data = !repsPausedRef.current;\n    repsPausedRef.current = data;\n    _setRepsPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    zespSend({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    zespSend({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n          <button className={`btn btn-outline-${repsPaused ? \"secondary\" : \"info\"} ms-3 btn-sm float-end`}\n                  onClick={() => toggleRepsPause()}>{repsPaused ? \"REPs disabled\" : \"REPs enabled\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React, {useContext} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.MQTT;\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment, useContext} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n\n  if (!allSettings) return (<Fragment/>);\n  const settings = allSettings.Wifi;\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import {useParams} from \"react-router-dom\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport {TypedZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAllDevices, updateReport, updateReportsOrder, updateZespInfo} from \"../../store/slices/devicesSlice\";\nimport {ReportKeyInfo} from \"../../models/ReportKeyInfo\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\nimport toast from \"react-hot-toast\";\nimport {setSpinner, setSpinnerShow} from \"../../store/slices/spinnerSlice\";\n\ntype hookStatuses = \"loading\" | \"error\" | \"loaded\";\n\nexport default () => {\n  const dispatch = useDispatch()\n  const {ieee} = useParams<{ ieee: string }>();\n  const {zespRequestAsync} = useContext(ZespContext);\n  const fileName = `/Devices/${ieee}`;\n  const [template, setTemplate] = useState<ZespDeviceInfo>();\n  const [status, setStatus] = useState<hookStatuses>(\"loading\");\n  const [play, setPlay] = useState<ReportKeyInfo>();\n  const [showSettings, setShowSettings] = useState<{ keyInfo: ReportKeyInfo, reportInfo: ZespReportInfo }>();\n\n  const devices = useSelector(getAllDevices)\n    .filter(x => x.zespInfo.Device !== \"0000\")\n    .map(x => ({\n      name: x.zespInfo.Name || x.zespInfo.ModelId,\n      ieee: x.zespInfo.IEEE,\n    }))\n    .sort(devicesSorting);\n\n  useEffect(() => {\n    zespRequestAsync({data: `LoadJson|${fileName}`, responseValidator: TypedZespResponseValidator(fileName)})\n      .then(event => {\n        if (event.dataParts.length < 1) throw Error(\"Unexpected device settings from ZESP\")\n\n        // we need 'any' type here, but later will expose it by types\n        // eslint-disable-next-line\n        const response = JSON.parse(event.dataParts[0]) as ZespDeviceInfo\n        setTemplate(response);\n        setStatus(\"loaded\");\n      })\n      .catch(() => {\n        setStatus(\"error\");\n      })\n  }, [ieee]);\n\n  const onSaveReportSettings = (keyInfo: ReportKeyInfo, reportInfo: ZespReportInfo): void => {\n    const reportKey = keyInfo.attributeId\n      ? `${keyInfo.endpoint}${keyInfo.clusterId}${keyInfo.attributeId}`\n      : keyInfo.clusterId; // for BLE devices without endpoints and attributes\n\n    const updatedReports = {...template!.Report, ...{[reportKey]: reportInfo}}\n    const updatedTemplate = {...template, ...{Report: updatedReports}}\n    const json = JSON.stringify(updatedTemplate);\n\n    zespRequestAsync({\n      data: `SaveJson|${fileName}|${json}`,\n      responseValidator: TypedZespResponseValidator(\"ZD_RSP\")\n    })\n      .then(event => {\n        if (event.dataParts.length < 2 || event.dataParts[1].toLowerCase() !== \"ok\") throw Error(\"Cannot save device settings\");\n        dispatch(updateReport({ieee, reportKey, update: reportInfo}))\n        setTemplate(updatedTemplate as ZespDeviceInfo)\n        toast.success(\"Report settings updated\");\n      })\n  }\n\n  const playHandler = (keyInfo?: ReportKeyInfo): void => setPlay(keyInfo);\n\n  const onAddReport = (keyInfo: ReportKeyInfo, reportInfo: ZespReportInfo): void => {\n    onSaveReportSettings(keyInfo, reportInfo)\n  }\n\n  const onDelete = (keyInfo: ReportKeyInfo): void => {\n    const reportKey = `${keyInfo.endpoint}${keyInfo.clusterId}${keyInfo.attributeId}`\n    const updatedTemplate = JSON.parse(JSON.stringify(template)) as ZespDeviceInfo;\n    if (updatedTemplate!.Report) delete updatedTemplate!.Report[reportKey]\n    const json = JSON.stringify(updatedTemplate)\n\n    dispatch(setSpinner({show: true, message: \"Removing...\"}))\n    zespRequestAsync({\n      data: `SaveJson|${fileName}|${json}`,\n      responseValidator: TypedZespResponseValidator(\"ZD_RSP\")\n    })\n      .then(event => {\n        if (event.dataParts.length < 2 || event.dataParts[1].toLowerCase() !== \"ok\") throw Error(\"Cannot save device settings\");\n        dispatch(updateZespInfo(updatedTemplate))\n        setTemplate(updatedTemplate as ZespDeviceInfo)\n        toast.success(\"Report deleted\", {icon: \"🗑\"});\n      })\n      .catch(reason => toast.error(reason))\n      .finally(() => {\n        dispatch(setSpinnerShow(false))\n      })\n  }\n\n  const moveReport = (keyInfo: ReportKeyInfo, amount: number): void => {\n    if (!template) throw Error(\"Unexpected empty template\");\n\n    const reportKey = `${keyInfo.endpoint}${keyInfo.clusterId}${keyInfo.attributeId}`\n    const reportKeys = Object.keys(template.Report);\n\n    const currentIndex = reportKeys.indexOf(reportKey)\n    if (currentIndex == -1) {\n      console.warn(\"Cannot find report current index...\")\n      return\n    }\n\n    const newIndex = currentIndex + amount;\n    if (newIndex < 0 || newIndex >= reportKeys.length) {\n      console.debug(\"Didn't moved, cause limited\")\n      return;\n    }\n\n    const tmp = reportKeys[newIndex]\n    reportKeys[newIndex] = reportKeys[currentIndex]\n    reportKeys[currentIndex] = tmp\n\n    console.log(`old: ${currentIndex}; new: ${newIndex}`)\n    console.log(reportKeys)\n\n    const reports = reportKeys.reduce((a, key) => ({...a, [key]: template.Report[key]}), {});\n    const json = JSON.stringify({...template, ...{Report: reports}});\n\n    dispatch(setSpinner({show: true, message: \"Reordering...\"}))\n    zespRequestAsync({\n      data: `SaveJson|${fileName}|${json}`,\n      responseValidator: TypedZespResponseValidator(\"ZD_RSP\")\n    })\n      .then(event => {\n        if (event.dataParts.length < 2 || event.dataParts[1].toLowerCase() !== \"ok\") throw Error(\"Cannot save device settings\");\n        template.Report = reports;\n        setTemplate(template);\n        dispatch(updateReportsOrder({ieee: template.IEEE, orderedReportKeys: reportKeys}))\n      })\n      .catch(reason => toast.error(reason))\n      .finally(() => {\n        dispatch(setSpinnerShow(false))\n      })\n  }\n\n  return {\n    template,\n    devices,\n    status,\n    ieee,\n    showSettings,\n    play,\n\n    setShowSettings,\n    onSaveReportSettings,\n    playHandler,\n    onAddReport,\n    onDelete,\n    moveReport,\n  }\n}\n\nconst devicesSorting = (a: { name: string }, b: { name: string }): number => {\n  if (a.name === \"ZESP_Root\") return -1;\n  if (b.name === \"ZESP_Root\") return 1;\n\n  if (a.name < b.name) return -1;\n  if (a.name > b.name) return 1;\n\n  return 0;\n}\n","import React from \"react\";\nimport {Col, Row} from \"react-bootstrap\";\n\ninterface IProps {\n  title: string,\n}\n\nexport const ErrorMessage: React.FC<IProps> = ({title, children}): React.ReactElement => {\n  return (\n    <div className=\"modal-dialog\">\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h5 className=\"modal-title\">{title}</h5>\n        </div>\n        <div className=\"modal-body\">\n          <Row>\n            <Col xs={3} className=\"d-flex align-items-center justify-content-center\">\n              <i className=\"bi bi-exclamation-diamond text-danger\" style={{fontSize: \"60px\"}}/>\n            </Col>\n            <Col className=\"d-flex align-items-center\">{children}</Col>\n          </Row>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ErrorMessage;","import {Devices} from \"../../../services/devices\";\nimport HomeAutoClusters from \"../../../data/reports.json\";\nimport {IClusterAttribute, IClusterInfo} from \"../../../interfaces/IClusterInfo\";\nimport {IDeviceTemplateReportProps} from \"./index\";\n\nconst DeviceTemplateReportHook = ({\n  template,\n  reportKey,\n  showSettingsHandler,\n}: IDeviceTemplateReportProps) => {\n  const report = template.Report[reportKey]\n  const keyInfo = Devices.getReportKeyDetails(reportKey, template.DevType)\n\n  if (!report || !keyInfo) return undefined;\n\n  const clusterInfo = (HomeAutoClusters.find(x => x.clusterId === keyInfo.clusterId) || {name: \"Unknown\"}) as IClusterInfo;\n  const role = (report.role || \"\").split(\"&\")[0];\n  const attributeInfo: IClusterAttribute | undefined = (!clusterInfo?.attributes || Object.keys(clusterInfo.attributes).length === 0)\n    ? undefined\n    : !role\n      ? clusterInfo.attributes[keyInfo.attributeId] || undefined\n      : clusterInfo.attributes[`${keyInfo.attributeId}:${role}`] || clusterInfo.attributes[keyInfo.attributeId] || undefined\n\n  const editHandler = () => showSettingsHandler({keyInfo, reportInfo: report})\n\n  return {\n    report,\n    keyInfo,\n    clusterInfo,\n    attributeInfo,\n\n    editHandler,\n  }\n}\n\nexport default DeviceTemplateReportHook;\n","import React, {Fragment, useState} from \"react\";\nimport useHook from \"./hook\";\nimport {Dropdown, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {ReportKeyInfo} from \"../../../models/ReportKeyInfo\";\nimport {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\n\nexport interface IDeviceTemplateReportProps {\n  template: ZespDeviceInfo,\n  reportKey: string,\n\n  showSettingsHandler: (data: { keyInfo: ReportKeyInfo, reportInfo: ZespReportInfo }) => void,\n  playHandler: (keyInfo: ReportKeyInfo) => void,\n  deleteHandler: (keyInfo: ReportKeyInfo) => void,\n  onMoveReport: (keyInfo: ReportKeyInfo, amount: number) => void,\n}\n\nexport const DeviceTemplateReport: React.FC<IDeviceTemplateReportProps> = (props): React.ReactElement => {\n  const hook = useHook(props);\n  if (!hook) {\n    console.warn(`Unknown report with key ${props.reportKey}`)\n    return (<Fragment/>)\n  }\n\n  const {\n    report,\n    keyInfo,\n    clusterInfo,\n    attributeInfo,\n\n    editHandler\n  } = hook;\n\n  const {\n    playHandler,\n    onMoveReport\n  } = props;\n\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const deleteConfirmedHandler = () => {\n    if (deleteConfirmed) props.deleteHandler(keyInfo);\n  }\n\n  const runHandler = () => playHandler(keyInfo);\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\" className=\"bg-danger text-light\">Achtung! Are you sure?</Popover.Header>\n      <Popover.Body>\n        Please, click one more time in menu <span className=\"text-danger\">Delete report</span> to confirm.\n      </Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"report\">\n      <div className=\"report-menu\">\n        <Dropdown className=\"d-inline-block\">\n          <Dropdown.Toggle variant=\"link\"><i className=\"bi bi-three-dots-vertical\" style={{fontSize: \"25px\"}}/></Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={editHandler}>Edit settings</Dropdown.Item>\n            <OverlayTrigger trigger=\"click\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n              <button className=\"dropdown-item\" onClick={deleteConfirmedHandler}>Delete report</button>\n            </OverlayTrigger>\n            <Dropdown.Divider/>\n            <Dropdown.Item onClick={() => onMoveReport(keyInfo, -1)}>Move up</Dropdown.Item>\n            <Dropdown.Item onClick={() => onMoveReport(keyInfo, 1)}>Move down</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n      <div className=\"report-key\">\n        <div className=\"title\" title={clusterInfo.name}>{clusterInfo.name}</div>\n        <div className=\"code\">{keyInfo.clusterId}</div>\n      </div>\n\n      <div className=\"report-key\">\n        <div className=\"title\" title={attributeInfo?.name || attributeInfo?.id}>{attributeInfo?.name || attributeInfo?.id || \"Unknown\"}</div>\n        <div className=\"code\">{keyInfo.attributeId || \"-\"}</div>\n      </div>\n\n      <div className=\"report-label\">{report.label}</div>\n      <div className=\"report-action\">\n        <i className=\"bi bi-play-fill\" style={{fontSize: \"45px\"}} onClick={runHandler}/>\n      </div>\n    </div>\n  )\n}\n\nexport default DeviceTemplateReport;","import React, {useState} from \"react\";\nimport {AppDialog} from \"../../../shared/app-dialog\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {ReportKeyInfo} from \"../../../models/ReportKeyInfo\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\n\ninterface IProps {\n  data: { keyInfo: ReportKeyInfo, reportInfo?: ZespReportInfo },\n\n  onClosed: () => void,\n  onSave: (keyInfo: ReportKeyInfo, reportInfo: ZespReportInfo) => void,\n}\n\nexport const DeviceReportSettings: React.FC<IProps> = ({\n  data,\n  onClosed,\n  onSave,\n}): React.ReactElement => {\n  const [label, setLabel] = useState(data.reportInfo?.label || \"\")\n  const [role, setRole] = useState(data.reportInfo?.role || \"\")\n  const [mat, setMat] = useState(data.reportInfo?.mat || \"\")\n  const [forceClose, setForceClose] = useState(false);\n\n  const roleDataList = [\"binary_sensor\", \"fan\", \"alarm_control_panel\", \"lock\", \"climate\", \"light_XY\", \"light_rgb\", \"light_hue\", \"light_temp\", \"light_level\", \"light_onoff\", \"light\", \"livolo_swith1ch\", \"outlet\", \"switch\", \"cover\", \"sensor\"]\n    .sort();\n\n  const onSaveHandler = (): void => {\n    const result = {...data.reportInfo || {} as ZespReportInfo, ...{label, role, mat}}\n    onSave(data.keyInfo, result);\n    setForceClose(true);\n  }\n\n  const footer = (\n    <>\n      <Button type=\"submit\">Save</Button>\n      <Button variant=\"secondary\" onClick={() => setForceClose(true)}>Cancel</Button>\n    </>\n  )\n\n  return (\n    <AppDialog title={`Report settings for '${data.keyInfo.endpoint} ${data.keyInfo.clusterId} ${data.keyInfo.attributeId}'`} onClosed={onClosed} footer={footer}\n               forceClose={forceClose} onSubmit={onSaveHandler}>\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Label</Form.Label>\n        <Col><Form.Control value={label || \"\"} onChange={event => setLabel(event.target.value)} placeholder=\"Label is required\" isInvalid={!label}/></Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Role</Form.Label>\n        <Col><Form.Control value={role || \"\"} onChange={event => setRole(event.target.value)} placeholder=\"Default\" {...{list: \"roles-list\"}}/></Col>\n      </Form.Group>\n\n      <Form.Group as={Row} className=\"mb-3\">\n        <Form.Label column sm=\"4\">Mat (???)</Form.Label>\n        <Col><Form.Control value={mat || \"\"} onChange={event => setMat(event.target.value)} placeholder=\"Default\"/></Col>\n      </Form.Group>\n\n      <datalist id=\"roles-list\">\n        {roleDataList.map((x, i) => (<option key={i} value={x}/>))}\n      </datalist>\n    </AppDialog>\n  )\n}\n\nexport default DeviceReportSettings;","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport \"./styles.scss\";\nimport HomeAutoClusters from \"../../../data/reports.json\";\nimport ResponseDataTypes from \"./data-types.json\";\nimport {ReportKeyInfo} from \"../../../models/ReportKeyInfo\";\nimport {Button, ButtonGroup, Col, FormGroup, FormLabel, ListGroup, Row} from \"react-bootstrap\";\nimport {IClusterAttributeCollection, IClusterInfo} from \"../../../interfaces/IClusterInfo\";\nimport toast from \"react-hot-toast\";\nimport {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {ZespContext} from \"../../../shared/agents/ZespAgent\";\nimport {ReportZespResponseValidator} from \"../../../services/zesp/common/ZespResponseValidators\";\nimport {ZespDeviceUpdate} from \"../../../services/zesp/models/ZespDeviceUpdate\";\nimport {DictionaryStrings} from \"../../../models/DictionaryStrings\";\nimport DeviceReportSettings from \"../device-report-settings\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport FormCheckInput from \"react-bootstrap/FormCheckInput\";\n\ninterface IResponse {\n  type: string,\n  data?: string,\n  parsed?: string\n}\n\ninterface IReadMessage {\n  type: \"info\" | \"error\",\n  message: string\n}\n\ninterface IProps {\n  play?: ReportKeyInfo,\n  template: ZespDeviceInfo,\n  onAddReport: (keyInfo: ReportKeyInfo, reportInfo: ZespReportInfo) => void,\n}\n\nexport const DeviceTemplateEditor: React.FC<IProps> = ({play, template, onAddReport}): React.ReactElement => {\n  const [cluster, setCluster] = useState<string>(play?.clusterId || \"\")\n  const [attribute, setAttribute] = useState<string>(play?.attributeId || \"\")\n  const [attributes, setAttributes] = useState<IClusterAttributeCollection>()\n  const [readData, setReadData] = useState<IResponse>()\n  const [showAll, setShowAll] = useState(false)\n  const [sendButtonDisabled, setSendButtonDisabled] = useState(false)\n  const [readDataMessage, setReadDataMessage] = useState<IReadMessage>()\n  const [showAddSettings, setShowAddSettings] = useState(false)\n  const {zespRequestAsync} = useContext(ZespContext)\n  const alignTimers = useRef<NodeJS.Timeout[]>([])\n  const endpointClusters = template.EP && Object.entries(template.EP)[0] && Object.entries(template.EP)[0][1]\n\n  const clusters = HomeAutoClusters\n    .map(x => x as IClusterInfo)\n    .filter(x => x.attributes && Object.keys(x.attributes).length > 0)\n    .filter(x => showAll || endpointClusters?.ClO.indexOf(x.clusterId) >= 0 || endpointClusters?.ClI.indexOf(x.clusterId) >= 0)\n\n  const responseDataTypes = ResponseDataTypes as DictionaryStrings\n\n  useEffect(() => {\n    if (template) {\n      setCluster(\"\")\n      setAttribute(\"\")\n      setAttributes(undefined)\n      setReadDataMessage(undefined)\n      setReadData(undefined)\n    }\n  }, [template])\n\n  useEffect(() => {\n    if (!play) return;\n\n    setCluster(play.clusterId)\n    setAttribute(play.attributeId)\n  }, [play])\n\n  useEffect(() => {\n    if (cluster) {\n      setAttributes(clusters.find(x => x.clusterId === cluster)?.attributes)\n    }\n  }, [cluster])\n\n  useEffect(() => {\n    alignTimers.current.forEach(x => clearTimeout(x));\n    alignTimers.current.push(setTimeout(() => alignSelected(), 500))\n  }, [cluster, attribute])\n\n  const alignSelected = (): void => {\n    const lists = document.getElementsByClassName(\"list-group\")\n    let delay = 0;\n    alignTimers.current.forEach(x => clearTimeout(x));\n    for (let i = 0; i < lists.length; i++) {\n      const listGroup = lists[i]\n      if (!listGroup) continue\n\n      const activeElement = listGroup.getElementsByClassName(\"btn active\")\n      if (activeElement.length == 0) continue\n      const timer = setTimeout(() => activeElement[0]?.scrollIntoView({behavior: \"smooth\", block: \"nearest\"}), delay);\n      alignTimers.current.push(timer);\n      delay += 500;\n    }\n  }\n\n  const onReadHandler = (): void => {\n    setReadDataMessage(undefined);\n    setReadData(undefined);\n\n    if (!cluster && cluster.trim().length === 0) {\n      toast.error(\"Cluster value required\", {icon: \"👾\"})\n      return\n    }\n    if (!attribute && attribute.trim().length === 0) {\n      toast.error(\"Attribute value required\", {icon: \"☢️\"})\n      return\n    }\n\n    readingDataBegin(template.Device, \"01\", cluster, attribute);\n  }\n\n  const onAddHandler = (): void => {\n    if (!cluster && cluster.trim().length === 0) {\n      toast.error(\"Cluster value required\", {icon: \"👾\"})\n      return\n    }\n\n    setShowAddSettings(true);\n  }\n\n  const readingDataBegin = (deviceId: string, endpointId: string, clusterId: string, attributeId: string): void => {\n    setReadDataMessage({type: \"info\", message: \"Reading...\"})\n    setSendButtonDisabled(true)\n    zespRequestAsync({\n      data: `reqAtribute|${deviceId}|${endpointId}|${clusterId}|${attributeId}|0000`,\n      responseValidator: ReportZespResponseValidator(deviceId, endpointId, clusterId, attributeId)\n    })\n      .then(event => {\n        const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate\n        const response: IResponse = {\n          type: responseDataTypes[data.Dtype] || data.Dtype,\n          data: data.Data,\n          parsed: data.parsed\n        }\n\n        setReadDataMessage(undefined)\n        setReadData(response)\n      })\n      .catch(reason => {\n        setReadDataMessage({type: \"error\", message: reason})\n      })\n      .finally(() => {\n        setSendButtonDisabled(false)\n      })\n  }\n\n  const getClusterType = (clusterId: string): string | undefined => {\n    if (endpointClusters?.ClO && endpointClusters.ClO.indexOf(clusterId) !== -1 && endpointClusters?.ClI && endpointClusters.ClI.indexOf(clusterId) !== -1) return \"in/out\";\n    if (endpointClusters?.ClO && endpointClusters.ClO.indexOf(clusterId) !== -1) return \"out\";\n    if (endpointClusters?.ClI && endpointClusters.ClI.indexOf(clusterId) !== -1) return \"in\";\n    return undefined;\n  }\n\n  return (\n    <div className=\"template-editor\">\n      <div className=\"input-group mb-2\">\n        <input type=\"text\" className=\"form-control text-center flex-grow-0\" style={{width: \"95px\"}} defaultValue=\"01\" readOnly/>\n        <input type=\"text\" className=\"form-control text-center\" placeholder=\"Cluster\" value={cluster} onChange={(event) => setCluster(event.target.value)}/>\n        <input type=\"text\" className=\"form-control text-center\" placeholder=\"Attribute\" value={attribute} onChange={(event) => setAttribute(event.target.value)}/>\n\n        <button className=\"btn btn-outline-primary flex-grow-0\" style={{width: \"100px\"}} type=\"button\" onClick={onAddHandler} disabled={sendButtonDisabled}>\n          <i className=\"bi bi-plus\"/> Add\n        </button>\n\n        <button className=\"btn btn-outline-primary flex-grow-0\" style={{width: \"100px\"}} type=\"button\" onClick={onReadHandler} disabled={sendButtonDisabled}>\n          <i className=\"bi bi-cloud-arrow-down-fill me-2\"/> Read\n        </button>\n      </div>\n\n      {readDataMessage && (\n        <div className={`alert ${readDataMessage.type === \"error\" ? \"alert-warning\" : \"alert-info\"}`}>{readDataMessage.message}</div>\n      )}\n\n      {readData && (\n        <div className=\"results alert alert-success\">\n          <div><span>Data type:</span> {readData.type}</div>\n          <div><span>Response:</span> {readData.data || \"undefined\"}</div>\n          <div><span>Parsed:</span> {readData.parsed || \"undefined\"}</div>\n        </div>\n      )}\n\n      {clusters && clusters.length > 0 && (\n        <Row>\n          <Col xs={6} className=\"lists\">\n            <ListGroup as={ButtonGroup} vertical={true}>\n              {clusters.map((x, i) => {\n                const type = getClusterType(x.clusterId)\n                return (\n                  <ListGroup.Item key={i} as={Button} onClick={() => setCluster(x.clusterId)} active={x.clusterId === cluster}\n                                  className=\"d-flex justify-content-between align-items-center\">\n                    <div className=\"me-auto item-title\" title={x.name}>{x.name}</div>\n                    <div className=\"badges\">\n                      {type && (<span className=\"badge bg-info rounded-pill\">{type}</span>)}\n                      <span className=\"badge bg-secondary rounded-pill\">{x.clusterId}</span>\n                    </div>\n                  </ListGroup.Item>\n                )\n              })}\n            </ListGroup>\n          </Col>\n          <Col xs={6} className=\"lists\">\n            {attributes && (\n              <ListGroup as={ButtonGroup} vertical={true}>\n                {Object.entries(attributes).map(([attributeId, x], i) => {\n                  const attributeParts = attributeId.split(\":\");\n                  return (\n                    <ListGroup.Item key={i} as={Button} onClick={() => setAttribute(attributeParts[0])} active={attributeParts[0] === attribute}\n                                    className=\"d-flex justify-content-between align-items-center\">\n                      <div className=\"me-auto item-title\" title={x.name}>{x.name || \"Unnamed\"}</div>\n\n                      <div className=\"badges\">\n                        {attributeParts.length > 1 && (<span className=\"badge bg-info rounded-pill\">{attributeParts[1]}</span>)}\n                        <span className=\"badge bg-secondary rounded-pill\">{attributeParts[0]}</span>\n                      </div>\n                    </ListGroup.Item>\n                  )\n                })}\n              </ListGroup>\n            )}\n          </Col>\n        </Row>\n      )}\n\n      {(!clusters || clusters.length === 0) && (<div className=\"alert alert-warning text-center\">No device related clusters found</div>)}\n\n      {showAddSettings && (\n        <DeviceReportSettings data={{reportInfo: undefined, keyInfo: {endpoint: \"01\", clusterId: cluster, attributeId: attribute}}}\n                              onClosed={() => setShowAddSettings(false)}\n                              onSave={onAddReport}/>)}\n\n      <FormGroup className=\"text-end border-top mt-1 pt-2 d-flex align-items-center justify-content-end\">\n        <FormLabel className=\"m-0\">\n          Show all clusters and attributes\n          <FormCheckInput className=\"ms-2\" checked={showAll} onChange={() => setShowAll(!showAll)}/>\n        </FormLabel>\n      </FormGroup>\n    </div>\n  )\n}\n\nexport default DeviceTemplateEditor;\n","import React from \"react\";\nimport \"./style.scss\";\nimport useHook from \"./hook\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card, Col, Dropdown} from \"react-bootstrap\";\nimport {NavLink, useHistory} from \"react-router-dom\";\nimport {CustomSpinner} from \"../../shared/loading-spinner\";\nimport ErrorMessage from \"../../shared/error-message\";\nimport DeviceTemplateReport from \"./device-template-report\";\nimport DeviceReportSettings from \"./device-report-settings\";\nimport DeviceTemplateEditor from \"./device-template-editor\";\n\nexport const DeviceTemplatePage: React.FC = (): React.ReactElement => {\n  const {\n    template,\n    devices,\n    status,\n    ieee,\n    showSettings,\n    play,\n\n    setShowSettings,\n    onSaveReportSettings,\n    playHandler,\n    onAddReport,\n    onDelete,\n    moveReport\n  } = useHook();\n\n  const history = useHistory();\n  const changeDeviceHandler = (device: { ieee: string }): void => {\n    history.push(`/device/template/${device.ieee}`)\n    playHandler(undefined);\n  }\n\n  if (status === \"loading\")\n    return (<CustomSpinner message=\"Template loading...\"/>)\n\n  if (status === \"error\" || !template)\n    return (<ErrorMessage title=\"Loading error\">Oops, for some reasons we cannot read template data for selected device.</ErrorMessage>)\n\n  return (\n    <>\n      <FadeIn>\n        <div>\n          <Card className=\"device-template\">\n            <Card.Header className=\"breadcrumb\">\n              <NavLink to=\"/devices\" className=\"breadcrumb-item\">Devices</NavLink>\n              <NavLink to={`/devices/${ieee}`} className=\"breadcrumb-item\">Settings</NavLink>\n              <Dropdown className=\"d-inline-block\">\n                <Dropdown.Toggle variant=\"link\" as={\"span\"} className=\"breadcrumb-item\">{template.Name || template.ModelId}</Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {devices.map((device, i) => (\n                    <Dropdown.Item onClick={() => changeDeviceHandler(device)} key={i}\n                                   className={device.ieee === ieee ? \"text-primary\" : \"\"}>{device.name}</Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Card.Header>\n            <Card.Body className=\"row\">\n              <Col xs={12} lg={6}>\n                {Object.keys(template.Report).map(key => {\n                  return (<DeviceTemplateReport key={key} reportKey={key} template={template}\n                                                showSettingsHandler={setShowSettings} playHandler={playHandler}\n                                                deleteHandler={onDelete} onMoveReport={moveReport}/>)\n                })}\n              </Col>\n              <Col xs={12} lg={6}><DeviceTemplateEditor play={play} template={template} onAddReport={onAddReport}/></Col>\n            </Card.Body>\n          </Card>\n        </div>\n      </FadeIn>\n      {showSettings && <DeviceReportSettings onClosed={() => setShowSettings(undefined)} data={showSettings} onSave={onSaveReportSettings}/>}\n    </>\n  )\n}\n\nexport default DeviceTemplatePage;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\nimport {getInitialized} from \"./store/slices/zespSlice\"\nimport {setSpinnerShow} from \"./store/slices/spinnerSlice\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport DeviceTemplatePage from \"./pages/device-template\";\n\nexport const Routes = () => {\n  const isInitialized = useSelector(getInitialized);\n  const dispatch = useDispatch();\n\n  if (!isInitialized) {\n    // return (<div>Initialization...</div>);\n    setTimeout(() => dispatch(setSpinnerShow(true)), 0);\n    return (<Fragment/>);\n  }\n\n  setTimeout(() => dispatch(setSpinnerShow(false)), 300);\n\n  return (\n    <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee\" component={DeviceInfoPage}/>\n      <Route path=\"/device/template/:ieee\" component={DeviceTemplatePage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/firmware\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn className=\"fullscreen\">\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\n\ninterface IProps {\n  setServerIndex: (index: number) => void\n}\n\nexport const WelcomePage: FunctionComponent<IProps> = (props: IProps) => {\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => props.setServerIndex(index);\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion} from \"../../store/slices/zespFirmwareSlice\";\n\nexport const AppFooter: React.FC = (): React.ReactElement => {\n  const uiVersion = process.env[\"REACT_APP_VERSION\"];\n  const zespVersion = useSelector(getZespFirmwareInstalledVersion);\n\n  return (\n    <footer className=\"app-footer my-3\">\n      <div className=\"d-flex justify-content-center\">\n        <div><a href=\"https://github.com/NickRimmer/zesp-ui\" target={\"_blank\"} rel=\"noreferrer\">ZESP UI<i className=\"bi bi-github ms-2\"/></a></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div>UI <span className=\"highlight\">{uiVersion}</span></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div><a href=\"https://t.me/zesp32\" target={\"_blank\"} rel=\"noreferrer\">ZESP</a> <span className=\"highlight\">{zespVersion}</span></div>\n      </div>\n    </footer>\n  )\n}\n\nexport default AppFooter;","import React, {useContext, useState} from \"react\";\nimport {AppDialog} from \"../app-dialog\";\nimport {Button} from \"react-bootstrap\";\nimport {useDispatch} from \"react-redux\";\nimport {setSpinner} from \"../../store/slices/spinnerSlice\";\nimport {ZespContext} from \"../agents/ZespAgent\";\n\nexport const PowerDialogLink: React.FC = (): React.ReactElement => {\n  const [show, setShow] = useState(false);\n  const {zespSend} = useContext(ZespContext);\n  const dispatch = useDispatch();\n\n  const showPowerDialogClickHandler = () => setShow(true);\n\n  const onRestartClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Restarting, please wait...\"}));\n    setShow(false);\n    zespSend({data: \"RebootESP\"});\n  };\n\n  const onShutdownClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Shutting down...\"}));\n    // dispatch(setConnectionStatus(\"reconnect\"));\n    setShow(false);\n    setTimeout(() => document.location.href = \"/\", 2000);\n    zespSend({data: \"Shutdown\"});\n  };\n\n  const navLink = (<span className=\"nav-link clickable\" onClick={showPowerDialogClickHandler}><i className=\"bi bi-power\"/></span>)\n  const buttons = (\n    <>\n      <Button onClick={onRestartClickedHandler}>Restart ZESP</Button>\n      <Button onClick={onShutdownClickedHandler} variant=\"secondary\">Shutdown</Button>\n    </>\n  );\n\n  return (\n    <>\n      {navLink}\n      {show && (\n        <AppDialog title=\"Power management\" footer={buttons} onClosed={() => setShow(false)}>\n          <div className=\"mb-3\">Restart of ZESP service can take a few minutes. This page will be reloaded automatically when restart completed.</div>\n          <div>To shutdown, just click Shutdown button. But this is way with one direction, make sure you know what are you doing.</div>\n        </AppDialog>\n      )}\n    </>\n  )\n}\n\nexport default PowerDialogLink;","import React from 'react';\nimport './styles.scss'\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\nimport PowerDialogLink from \"../power-dialog\";\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center pe-2\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n      <div className=\"border-start mx-3 opacity-25\"/>\n      <PowerDialogLink/>\n    </nav>\n  );\n};\n\nexport default Result;","import React, {useContext, useState} from \"react\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {Col, Modal, Row} from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUiSettings, setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {ZespContext} from \"../agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\ninterface IProps {\n  zespFirmwareUpdate: DictionaryStrings,\n  zespFirmwareCurrentVersion: string,\n  onClosed: () => void,\n}\n\nconst UpdatesNotificationDialog: React.FC<IProps> = ({\n  onClosed,\n  zespFirmwareUpdate,\n  zespFirmwareCurrentVersion\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const SettingsService = useZespSettings(zesp);\n  const uiSettings = useSelector(getUiSettings);\n  const zespFirmwareUpdateVersion = zespFirmwareUpdate[\"ver\"] || \"unknown\";\n\n  const onHideHandler = () => setShow(false);\n\n  const updateData: DictionaryStrings = {\n    ...{\"Current version\": zespFirmwareCurrentVersion},\n    ...{\"New version\": zespFirmwareUpdateVersion},\n    ...{...zespFirmwareUpdate, ...{\"ver\": undefined}} // skip ver from \"other\" properties, cause we'll show it before\n  }\n  const onUpdateClickHandler = () => {\n    toast.success(\"Not implemented yet...\", {icon: (<i className=\"bi bi-cone-striped text-warning\"/>)});\n  }\n\n  const onSkipClickHandler = () => {\n    const update: UiSettings = {...uiSettings || {} as UiSettings, ...{firmwareSkipUpdate: zespFirmwareUpdateVersion}};\n\n    dispatch(setUiSettings(update));\n    SettingsService.setUiSettings(update);\n\n    toast.success(\"Notification for this version disabled\", {icon: (<i className=\"bi bi-bell-slash-fill text-success\"/>)});\n  }\n\n  return (\n    <Modal show={show} onExited={onClosed} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>New version of ZESP Firmware</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        <div className=\"rows-striped\">\n          {Object.keys(updateData).map((key, i) => {\n            return updateData[key]\n              && updateData[key]!.trim().length > 0\n              && (<Row key={i}><Col xs={4} className=\"py-2 text-capitalize text-muted text-end\">{key}</Col><Col className=\"py-2 text-dark\">{updateData[key]}</Col></Row>);\n          })}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button className=\"btn btn-primary\" onClick={onUpdateClickHandler}>Download and Update</button>\n        <button className=\"btn btn-secondary\" onClick={onSkipClickHandler}>Skip this version</button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default UpdatesNotificationDialog;","import React, {Fragment, useState} from \"react\";\nimport UpdatesNotificationDialog from \"./UpdatesNotificationDialog\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion, getZespFirmwareUpdateInfo} from \"../../store/slices/zespFirmwareSlice\";\nimport {getUiSettings} from \"../../store/slices/settingsSlice\";\n\nexport const UpdatesNotification: React.FC = (): React.ReactElement => {\n  const zespFirmwareUpdate = useSelector(getZespFirmwareUpdateInfo);\n  const zespCurrentVersion = useSelector(getZespFirmwareInstalledVersion);\n  const uiSettings = useSelector(getUiSettings);\n  const [showDialog, setShowDialog] = useState(false);\n\n  if (!zespFirmwareUpdate\n    || zespFirmwareUpdate[\"ver\"] === zespCurrentVersion\n    || uiSettings?.firmwareSkipUpdate === zespFirmwareUpdate[\"ver\"]) return (<Fragment/>);\n\n  const title = `${zespCurrentVersion} to ${zespFirmwareUpdate[\"ver\"]} update`;\n  const onUpdatesClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  return (\n    <div>\n      <span onClick={onUpdatesClickedHandler} className=\"badge bg-info ms-3 notification-updates clickable\" title={title}>\n        <i className=\"bi bi-cloud-arrow-down-fill\"/>\n      </span>\n      {showDialog && (<UpdatesNotificationDialog\n        onClosed={() => setShowDialog(false)}\n        zespFirmwareUpdate={zespFirmwareUpdate}\n        zespFirmwareCurrentVersion={zespCurrentVersion}/>)}\n    </div>\n  )\n}\n\nexport default UpdatesNotification;","import React from \"react\";\nimport \"./styles.scss\";\nimport TopMenu from \"../top-menu\";\nimport {UpdatesNotification} from \"../updates-notification/UpdatesNotification\";\n\nexport const AppHeader: React.FC = (): React.ReactElement => {\n  return (\n    <header className=\"app-header\">\n      <a href=\"/\"><h3 className=\"title\">ZESP:UI</h3></a>\n      <div className=\"d-flex flex-row align-items-center\">\n        <TopMenu/>\n        <UpdatesNotification/>\n      </div>\n    </header>\n  )\n}\n\nexport default AppHeader;","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport {ZespAgent} from \"./shared/agents/ZespAgent\";\nimport {AppFooter} from \"./shared/footer\";\nimport AppHeader from \"./shared/header\";\n\nconst Content = () => {\n  const [serverIndex, setServerIndex] = useState<number | null>(null);\n  const serversString = window.localStorage.getItem(\"servers\");\n  const servers = (serversString && JSON.parse(serversString)) || [];\n  const selectedServer = (serverIndex === null || servers.length <= serverIndex!)\n    ? null\n    : servers[serverIndex!];\n\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage setServerIndex={setServerIndex}/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  return (\n    <ZespAgent server={props.server}>\n      <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <AppHeader/>\n        <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n          <Routes/>\n        </main>\n        <AppFooter/>\n      </div>\n    </ZespAgent>\n  )\n}\n\nconst Result = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Content/>\n        </Switch>\n      </Router>\n\n      <LoadingSpinner/>\n      <Toaster/>\n    </>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport zespReducer from \"./slices/zespSlice\";\nimport devicesReducer from \"./slices/devicesSlice\";\nimport spinnerReducer from \"./slices/spinnerSlice\";\nimport settingsReducer from \"./slices/settingsSlice\";\nimport zespFirmwareReducer from \"./slices/zespFirmwareSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    zesp: zespReducer,\n    devices: devicesReducer,\n    spinner: spinnerReducer,\n    settings: settingsReducer,\n    zespFirmware: zespFirmwareReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/configure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (process.env.NODE_ENV === \"production\") {\n  console.debug = (msg: string) => {\n    return;\n  }\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}