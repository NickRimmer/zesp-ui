{"version":3,"sources":["loader.js","i18n sync /^.*$","data/controls sync /^/.//.*$","services/zesp/enums/CloseEventCodes.tsx","services/zesp/common/ZespConnector.tsx","shared/top-menu/index.tsx","store/slices/spinnerSlice.tsx","shared/loading-spinner/index.tsx","shared/fadein-transition/index.tsx","pages/devices/item-image.tsx","pages/devices/item.tsx","services/devices.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","services/single.tsx","store/slices/devicesSlice.tsx","pages/devices/index.tsx","store/slices/settingsSlice.tsx","services/zesp/common/ZespResponseValidators.tsx","services/zesp/service-settings.tsx","pages/setup/index.tsx","pages/device-info/header.tsx","device-controls/layouts/binary-sensor/index.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/unknown.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/index.tsx","device-controls/layouts/DefaultLayout.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","store/slices/zespSlice.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","services/zesp/service-auto-layouts.tsx","services/zesp/service-devices.tsx","services/zesp/service-report-updates.tsx","services/zesp/service-root.tsx","shared/agents/ZespAgent.tsx","App.tsx","reportWebVitals.ts","store/configure.tsx","index.tsx","i18n/config.js"],"names":["window","$","jQuery","require","console","debug","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CloseEventCodes","_ws","_server","Result","t","useTranslation","className","to","process","spinnerSlice","createSlice","name","initialState","spinnerShow","reducers","setSpinnerShow","state","action","payload","getSpinnerShow","spinner","actions","LoadingSpinner","useSelector","Spinner","animation","variant","FadeIn","props","useState","setClassName","setTimeout","children","device","image","setImage","useEffect","testImage","Image","onerror","src","style","backgroundImage","detailsLink","ieee","title","tags","length","x","i","Devices","customLayout","buildLayoutSettingsFromZesp","reduce","r","groupName","group","find","push","settings","reportKey","deviceType","warn","endpoint","clusterId","attributeId","substr","zespInfo","Report","key","reportKeyInfo","DevType","registeredCluster","DataHaClusterIds","result","roleParts","role","split","buildLayoutItemForRole","attributes","IEEE","getLayoutItem","filter","undefined","dataCluster","roleSettings","layoutItem","zespRoleSettings","JSON","parse","ConnectionStartTimeout","VerifyConnectionTimeout","DefaultRequestTimeoutSeconds","ZespDataEventType","ZespDataEvent","dataType","dataParts","response","Event","_reconnecter","onMessageEvent","EventTarget","ZespConnector","connectAsync","server","zespConnectedAction","Promise","reject","reconnectAsync","then","Single","catch","error","Constants","setInterval","disconnect","clearInterval","underlyingWebsocket","readyState","close","force","Restart","protocol","document","location","WebsocketBuilder","address","onOpen","onClose","onError","onConnectionError","onMessage","onMessageReceived","build","send","args","data","isBinary","getBinaryData","requestAsync","timeoutSeconds","responseReceived","validator","responseValidator","listener","event","isValid","removeEventListener","addEventListener","request","onSuccess","errorMessage","subscribe","handler","zespEvent","unsubscribe","getServerAddress","ws","messageParts","replace","messageType","shift","exec","unshift","resultEvent","dispatchEvent","message","dataHex","replaceAll","match","parseInt","Uint8Array","ZespConnectorImplementation","devicesSlice","devices","setDevices","updateReport","update","updateRootReports","ModelId","getDeviceByIee","getAllDevices","DevicesList","devicesSorting","a","b","buildListItem","Name","getImageUrl","getTagsFromReports","serverAddress","Img","modelId","reports","reportKeyDetails","clusterInfo","HomeAutoClusters","indexOf","sort","deviceItems","Card","Body","zespSettings","settingsSlice","setSettings","getSettings","TypedZespResponseValidator","AllMessagesZespResponseValidator","jsonString","json","assign","parseResponse","stringify","join","toLocaleLowerCase","SaveSettings","dispatch","updatedSettings","ZespSettingsService","toast","success","reason","finally","useDispatch","alert","Container","Nav","Item","exact","marginTop","headerClassName","groups","headerContent","type","activeGroupName","onClick","setActiveGroupName","Modal","Header","onDetailsClicked","onCloseClicked","reportKeysValue","reportKeysBattery","deviceClasses","batteryValuesRange","getValueSettings","onOffReport","getReport","iconClassName","icons","onFalse","valueClassName","valueTitle","statusValue","parsed","val","status","deviceClass","valueSettings","onTrue","styles","titles","getBatterySettings","report","stateClassName","valuePercents","units","valueString","Number","valueNumber","Math","min","max","round","oneOfKeys","DeviceControls","config","deviceInfo","layoutId","OnOffRoot","Row","ButtonGroup","Button","toString","arguments","commandOn","commandOff","LevelRoot","currentValue","value","setValue","minMaxAttributes","inRange","FormControl","width","onChange","command","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","initialValue","readValue","item","localStorage","getItem","storedValue","setStoredValue","handleStorageChange","newValue","Function","setItem","RgbRoot","g","color","setColor","colorPicker","setColorPicker","colorChangeHandler","rgb","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","Transition","onRefresh","classNameFrom","onLoad","classNameTo","timeOutMs","HighlightOnUpdate","UnknownControl","showDetails","setShowDetails","configData","reportData","label","trim","preventDefault","href","NoReport","IlluminanceSensor","LevelControl","formatCommand","PlayerSrcRoot","srcReport","playSettings","playReport","setSrc","play","setPlay","list","placeholder","icon","OnOffBinarySensor","payloadOn","ValueSensor","unit","DeviceControlCol1","Col","md","DeviceControlCol2","DefaultLayout","control","element","controlProps","getControlForDevice","layoutProps","layoutName","layout","LayoutTag","layouts","default","binarySensorLayout","battery","history","useHistory","useParams","show","setShow","keysA","keysB","handleClose","onHide","onExited","handleSubmit","input","prop","attr","ReactForm","onSubmit","restProps","Form","predefinedMessages","predefinedBinary","messages","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","messagesRef","useRef","pausedRef","addMessages","current","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","Footer","togglePause","startsWith","i2","controlId","defaultValue","inputProps","Group","as","Label","column","lg","Control","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","allSettings","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","rel","Wifi","ssid","pass","ip","mask","gw","zespSlice","connectionStatus","initialized","setConnected","setDisconnected","setInitialized","getStatus","zesp","getInitialized","Routes","isInitialized","path","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","deleteConfirmed","setDeleteConfirmed","popover","Popover","dangerouslySetInnerHTML","__html","editServer","updateAction","addAction","closeAction","InputGroup","Text","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","setServerIndex","LayoutAutoDetection","valueReportKey","binarySensorValueKeys","batteryReportKey","binarySensorBatteryKeys","deviceClassIs","expectedDeviceClasses","reportDeviceClass","ServiceDevices","getDevicesListAsync","onDevicesListReceived","zespDevices","buildDeviceInfo","getDeviceModelSettings","predefinedDevices","modelIds","findIndex","controls","forEach","onReport","onUpdate","EndPoint","ClusterId","AttribId","Data","extractReports","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","ZespAgent","ServiceRoot","ServiceUpdates","Content","serverIndex","serversString","selectedServer","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","zespReducer","devicesReducer","spinnerReducer","ReactDOM","render","StrictMode","getElementById","languages","namespaces","i18n","use","initReactI18next","init","fallbackLng","lng","resources","lang","ns","loadResources","defaultNS"],"mappings":"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","file":"static/js/main.031a7f8b.chunk.js","sourcesContent":["window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 98,\n\t\"./config.js\": 98,\n\t\"./locales/en/common\": 124,\n\t\"./locales/en/common.json\": 124,\n\t\"./locales/en/nav\": 125,\n\t\"./locales/en/nav.json\": 125,\n\t\"./locales/en/pages/devices\": 126,\n\t\"./locales/en/pages/devices.json\": 126,\n\t\"./locales/en/pages/setup-mqtt\": 127,\n\t\"./locales/en/pages/setup-mqtt.json\": 127,\n\t\"./locales/en/pages/setup-wifi\": 128,\n\t\"./locales/en/pages/setup-wifi.json\": 128,\n\t\"./locales/en/pages/welcome\": 129,\n\t\"./locales/en/pages/welcome.json\": 129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","var map = {\n\t\"./root\": 156,\n\t\"./root.json\": 156\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 342;","// https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#status_codes\nexport enum CloseEventCodes {\n  Restart = 1012\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport Constants from \"./Constants\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IZespConnector, ZespConnectedAction, ZespConnectorHandler, ZespConnectorListener} from \"../interfaces/IZespConnector\";\nimport {Single} from \"../../single\";\nimport {CloseEventCodes} from \"../enums/CloseEventCodes\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\n\n// const zespHost = \"192.168.3.30\"; //TODO read host from config\n\nlet _ws: Websocket;\nlet _server: IServerInfo | null;\nconst onMessageEvent = new EventTarget();\nlet _reconnecter: NodeJS.Timeout | null | undefined;\n\nconst ZespConnector: IZespConnector = {\n  connectAsync: (\n    server,\n    zespConnectedAction: ZespConnectedAction\n  ) => new Promise<IZespConnector>((resolve, reject) => {\n    if (_server) {\n      console.warn(\"ZespConnector already initialized\");\n      return;\n    }\n\n    _server = server;\n\n    // start with delay\n    setTimeout(() => ZespConnector.reconnectAsync(true, zespConnectedAction)\n        .then(() => {\n          resolve(Single.ZespConnector)\n        })\n        .catch(error => {\n          zespConnectedAction(false);\n          reject(error);\n        }),\n      Constants.ConnectionStartTimeout);\n\n    // setup watchdog\n    _reconnecter = setInterval(() => ZespConnector.reconnectAsync(false, zespConnectedAction)\n        // .then(() => resolve(Single.ZespConnector))\n        .catch(error => {\n          console.warn(`Reconnection is failed: ${error}`);\n          zespConnectedAction(false);\n          // reject(error);\n        }),\n      Constants.VerifyConnectionTimeout);\n  }),\n\n  disconnect: () => {\n    if (_reconnecter) {\n      clearInterval(_reconnecter);\n      _reconnecter = null;\n    }\n    _server = null;\n\n    try {\n      if (_ws?.underlyingWebsocket?.readyState === 3 || _ws?.underlyingWebsocket?.readyState == null) {\n        console.debug(\"zesp connection already closed\");\n        return;\n      } else if (_ws?.underlyingWebsocket?.readyState === 1) {\n        console.debug(\"zesp connection closing...\");\n        _ws.close(1000); // closed normal\n        return;\n      } else {\n        _ws?.close(1000); // closed normal\n      }\n    } catch {\n      //it's ok (;\n    }\n  },\n\n  reconnectAsync: (force, zespConnectedAction) => new Promise<void>((resolve, reject) => {\n    if (!_server) {\n      reject(\"Server configuration missed\");\n      // throw new Error(\"ZespConnector is not initialized yet\")\n    }\n\n    if (_ws?.underlyingWebsocket?.readyState === 0) {\n      reject(\"Already connecting\");\n      return;\n    }\n\n    // check if already connected\n    if (_ws?.underlyingWebsocket?.readyState === 1 && !force) {\n      resolve();\n      return;\n    }\n\n    // create new connection\n    console.debug(\"Start ws connection...\");\n    try {\n      _ws.close(CloseEventCodes.Restart);\n    } catch {\n      // it's ok :P\n    }\n\n    if (zespConnectedAction) zespConnectedAction(false);\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    _ws = new WebsocketBuilder(`${protocol}://${_server!.address}:81`)\n      .onOpen(() => {\n        if (zespConnectedAction) {\n          console.debug(\"ZESP connected\");\n          zespConnectedAction(true);\n        }\n        resolve();\n      })\n      .onClose(() => {\n        console.debug(\"ZESP connection closed\");\n        zespConnectedAction && zespConnectedAction(false)\n      })\n      .onError(() => {\n        onConnectionError();\n        reject(\"ZESP connection error\")\n      })\n      .onMessage(onMessageReceived)\n      .build();\n  }),\n\n  send: (args) => {\n    if (!_ws) {\n      console.error(\"ZespConnector.send: WebSocket client is not initialized yet\");\n      return;\n    }\n\n    const data = args.isBinary === true\n      ? getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  },\n\n  requestAsync: (args) => new Promise<ZespDataEvent>(((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      onMessageEvent.addEventListener(ZespDataEventType, listener);\n      ZespConnector.send({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })),\n\n  request: (args) => new Promise<IZespConnector>((resolve, reject) => {\n    ZespConnector\n      .requestAsync(args)\n      .then(event => {\n        if (args.onSuccess) args.onSuccess(event);\n        else console.debug(`zesp request completed (${args.responseValidator.name})`);\n\n        resolve(Single.ZespConnector);\n      })\n      .catch(error => {\n        const errorMessage = `${error} (${args.responseValidator.name}; ${args.data})`;\n\n        if (args.onError) args.onError(errorMessage);\n        else console.warn(`zesp request failed: ${errorMessage}`);\n        reject(errorMessage);\n      });\n  }),\n\n  subscribe: (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  },\n\n  unsubscribe: (listener: ZespConnectorListener) => onMessageEvent.removeEventListener(ZespDataEventType, listener),\n\n  getServerAddress: () => _server?.address\n};\n\nconst onConnectionError = () => {\n  console.debug(\"Zesp connection error happened )=\");\n}\n\nconst onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n  const messageParts = e.data\n    .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n    .split(\"\\x00\");\n\n  if (messageParts.length == 0) {\n    console.warn(\"Received empty message from zesp\");\n    return;\n  }\n\n  let messageType = messageParts.shift();\n\n  const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n  if (jsonMatch) {\n    messageParts.unshift(messageType);\n    messageType = \"json\";\n  }\n\n  const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n  // console.debug(resultEvent);\n  onMessageEvent.dispatchEvent(resultEvent);\n}\n\nconst getBinaryData = (message: string): Uint8Array => {\n  const data = message.replaceAll(\" \", \"\");\n  const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n  return new Uint8Array(dataHex);\n}\n\nexport default ZespConnector;\n","import React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\n\nimport './styles.scss'\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n    </nav>\n  );\n};\n\nexport default Result;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\ninterface IState {\n  spinnerShow: boolean\n}\n\nconst initialState: IState = {\n  spinnerShow: false,\n}\n\nexport const spinnerSlice = createSlice({\n  name: \"spinner\",\n  initialState,\n  reducers: {\n    setSpinnerShow: (state, action: PayloadAction<boolean>): void => {\n      state.spinnerShow = action.payload;\n    }\n  }\n});\n\nconst getters = {\n  getSpinnerShow: (state: RootState) => state.spinner.spinnerShow\n}\n\nexport const {getSpinnerShow} = getters;\nexport const {setSpinnerShow} = spinnerSlice.actions;\nexport default spinnerSlice.reducer;\n","import React from \"react\";\nimport \"./styles.scss\"\nimport {Spinner} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\nimport {getSpinnerShow} from \"../../store/slices/spinnerSlice\";\n\nconst LoadingSpinner = () => {\n  const spinnerShow = useSelector(getSpinnerShow);\n  return (\n    <div className={`loading-overlay ${spinnerShow ? \"show\" : \"hidden\"}`}>\n      <Spinner animation=\"border\" variant=\"light\"/>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;","import {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: FunctionComponent = (props) => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={className}>\n      {props.children}\n    </div>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nconst defaultImage = \"/device-images/default.png\";\n\nexport default (props: IProps) => {\n  const [image, setImage] = useState(props.device.image);\n\n  useEffect(() => {\n    const testImage = new Image();\n    testImage.onerror = () => {\n      setImage(defaultImage);\n    }\n    testImage.src = image;\n  }, []);\n\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${image})`}}/>);\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nexport default (props: IProps) => {\n  const {device} = props;\n  const detailsLink = `/devices/${device.ieee}`;\n\n  return (\n    <NavLink className=\"item p-3 border rounded\" to={detailsLink}>\n      <div className=\"d-flex\">\n        <div><ItemImage device={props.device}/></div>\n        <div className=\"ps-2\">\n          <div className=\"title\">{device.title}</div>\n          <div className=\"ieee text-muted small\">{device.ieee}</div>\n          {device.tags.length > 0 && (\n            <div className=\"badges small\">\n              {device.tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n            </div>\n          )}\n        </div>\n      </div>\n    </NavLink>\n  );\n}","import {DataControlSettings, DataLayoutItemsGroup} from \"../models/DataControlSettings\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getDevice: (ieee: string): DeviceInfo | undefined => undefined,\n  // globalState.state.devices?.find(x => x.zespInfo.IEEE === ieee),\n\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout && device.customLayout.length > 0\n      ? device.customLayout\n      : buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string, deviceType: string): ReportKeyInfo | undefined => {\n    if (!deviceType || deviceType === \"ZED\" || deviceType === \"ZR\") {\n      if (reportKey?.length !== 10) // 01 0000 0000\n      {\n        console.warn(`Unknown format of Zigbee report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: reportKey.substr(0, 2),\n        clusterId: reportKey.substr(2, 4),\n        attributeId: reportKey.substr(6),\n      }\n    }\n\n    if (deviceType === \"BED\") {\n      if (reportKey?.length < 1) // a-ny-thing\n      {\n        console.warn(`Unknown format of BLE report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: \"\",\n        clusterId: reportKey,\n        attributeId: \"\",\n      }\n    }\n\n    console.warn(`Unknown device type '${deviceType}'`);\n    return undefined;\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataControlSettings[] => {\n  const getLayoutItem = (reportKey: string): DataControlSettings | undefined => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey, device.zespInfo.DevType);\n    if (!reportKeyInfo) {\n      console.warn(`Cannot get report key details for '${device.zespInfo.IEEE}' device`);\n      return undefined;\n    }\n\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataControlSettings;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey, device.zespInfo.DevType)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key)).filter(x => x !== undefined) as DataControlSettings[];\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string, deviceType: string): DataControlSettings | undefined => {\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey, deviceType);\n  if (!reportKeyInfo) return undefined;\n\n  const attributeId = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: attributeId} as DataControlSettings // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${attributeId}`]\n    || dataCluster.attributes[attributeId]\n    || {id: attributeId} as DataControlSettings; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 100,\n\n  // connection verify interval\n  VerifyConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {IZespConnector} from \"./zesp/interfaces/IZespConnector\";\nimport ZespConnectorImplementation from \"./zesp/common/ZespConnector\";\n\nexport namespace Single {\n  export const ZespConnector: IZespConnector = ZespConnectorImplementation;\n  export const ZespConnectorPromise: Promise<IZespConnector> = new Promise<IZespConnector>(resolve => resolve(Single.ZespConnector));\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {RootState} from \"../configure\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespReportUpdates} from \"../../services/zesp/service-root\";\n\nexport interface DevicesState {\n  devices: DeviceInfo[]\n}\n\nconst initialState: DevicesState = {\n  devices: []\n}\n\nexport const devicesSlice = createSlice({\n  name: \"devices\",\n  initialState,\n  reducers: {\n    setDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      state.devices = action.payload;\n    },\n    updateReport: (state, action: PayloadAction<{ ieee: string, reportKey: string, update: Partial<ZespReportInfo> }>): void => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Device '${action.payload.ieee}' not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report[action.payload.reportKey] = {...device.zespInfo.Report[action.payload.reportKey], ...action.payload.update};\n      console.debug(`Device '${action.payload.ieee}' with report '${action.payload.reportKey}' has been updated`);\n    },\n    updateRootReports: (state, action: PayloadAction<ZespReportUpdates>) => {\n      const device = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = {...device.zespInfo.Report, ...action.payload} as { [reportId: string]: ZespReportInfo };\n    }\n  }\n})\n\nconst getters = {\n  getDeviceByIee: (state: RootState, ieee: string): DeviceInfo | undefined => state.devices.devices.find(x => x.zespInfo.IEEE === ieee),\n  getDevicesByModelId: (state: RootState, modelId: string): DeviceInfo[] => state.devices.devices.filter(x => x.zespInfo.ModelId === modelId),\n  getAllDevices: (state: RootState): DeviceInfo[] => state.devices.devices || [] as DeviceInfo[],\n}\n\nexport const {getDevicesByModelId, getDeviceByIee, getAllDevices} = getters;\nexport const {setDevices, updateReport, updateRootReports} = devicesSlice.actions;\nexport default devicesSlice.reducer;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {useTranslation} from \"react-i18next\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\nimport {Devices} from \"../../services/devices\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {Single} from \"../../services/single\";\nimport {getAllDevices} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\n\nconst Result = () => {\n  const devices = useSelector(getAllDevices, (a: DeviceInfo[], b: DeviceInfo[]) => a.length === b.length);\n  if (devices.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  console.debug(\"Building list of devices to show...\");\n  const deviceItems = [...devices]\n    .sort(devicesSorting)\n    .map(buildListItem);\n\n  console.debug(\"devices page updated...\");\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <DevicesList devices={deviceItems}/>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nconst DevicesList = (props: { devices: DeviceListItem[] }) => {\n  const {t} = useTranslation(\"pages.devices\");\n  const {devices} = props;\n\n  return (\n    <div className=\"group border-top pt-4\">\n      <div className=\"title h5 pb-3\">\n        <span>{t(\"groups.all\")}</span>\n        {devices.length > 1 && (<span className=\"badge bg-secondary ms-2\">{devices.length}</span>)}\n      </div>\n      <div className=\"items d-flex flex-wrap\">\n        {devices.map((device, i) => (<Item device={device} key={i}/>))}\n      </div>\n    </div>\n  );\n}\n\nconst devicesSorting = (a: DeviceInfo, b: DeviceInfo): number => {\n  if (a.zespInfo.ModelId === \"ZESP_Root\") return -1;\n  if (b.zespInfo.ModelId === \"ZESP_Root\") return 1;\n\n  if (a.zespInfo.ModelId < b.zespInfo.ModelId) return -1;\n  if (a.zespInfo.ModelId > b.zespInfo.ModelId) return 1;\n\n  return 0;\n}\n\nconst buildListItem = (device: DeviceInfo): DeviceListItem => {\n  const title = device.zespInfo.Name && device.zespInfo.Name.length > 0 ? device.zespInfo.Name : device.zespInfo.ModelId;\n  const image = getImageUrl(device);\n  const tags = getTagsFromReports(device.zespInfo.Report, device.zespInfo.DevType);\n\n  return {\n    title,\n    ieee: device.zespInfo.IEEE,\n    image,\n    tags\n  };\n}\n\nconst getImageUrl = (device: DeviceInfo): string => {\n  // device.settings?.image || device.zespInfo.Img\n  if (device.settings?.image)\n    return `${process.env.PUBLIC_URL}/device-images/${device.settings.image}`;\n\n  const serverAddress = Single.ZespConnector.getServerAddress();\n  if (device.zespInfo.Img)\n    return `http://${serverAddress}:8081/${device.zespInfo.Img}`\n\n  const modelId = device.zespInfo.ModelId;\n  return `http://${serverAddress}:8081/img/${modelId}.jpg`;\n}\n\nconst getTagsFromReports = (reports: { [key: string]: ZespReportInfo }, deviceType: string): string[] => {\n  const result: string[] = [];\n\n  for (const key of Object.keys(reports)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key, deviceType);\n\n    if (!reportKeyDetails) {\n      console.warn(`Cannot read report '${key}' details for '${deviceType}' device type`);\n      continue;\n    }\n\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    result.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  return result\n    .filter((x, i) => result.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n}\n\nexport default Result;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\n\ninterface IState {\n  zespSettings: ZespSettings | undefined\n}\n\nconst initialState: IState = {\n  zespSettings: undefined\n}\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setSettings: (state, action: PayloadAction<ZespSettings>): void => {\n      state.zespSettings = action.payload;\n    }\n  }\n});\n\nconst getters = {\n  getSettings: (state: RootState) => state.settings.zespSettings\n}\n\nexport const {getSettings} = getters;\nexport const {setSettings} = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {ZespSettings} from \"./models/ZespSettings\";\nimport {Single} from \"../single\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\n\nexport default {\n  getAsync: (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    Single.ZespConnector.requestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  }),\n\n  setAsync: (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      Single.ZespConnector.requestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n","import React, {Fragment, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setSpinnerShow} from \"../../store/slices/spinnerSlice\"\nimport {setSettings, getSettings} from \"../../store/slices/settingsSlice\"\nimport ZespSettingsService from \"../../services/zesp/service-settings\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(getSettings);\n\n  useEffect(() => {\n    dispatch(setSpinnerShow(true));\n\n    ZespSettingsService.getAsync()\n      .then(data => {\n        dispatch(setSettings(data));\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  }, []);\n\n  if (!settings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <div className=\"aaa\">...</div>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (data: Partial<ZespSettings>, settings: ZespSettings | undefined, dispatch: Dispatch) => new Promise<void>((resolve, reject) => {\n  if (!settings) reject(\"Settings not loaded\");\n  dispatch(setSpinnerShow(true));\n\n  const updatedSettings: ZespSettings = ({...settings, ...data}) as ZespSettings;\n  ZespSettingsService\n    .setAsync(updatedSettings)\n    .then(() => {\n      dispatch(setSettings(updatedSettings));\n      resolve();\n      toast.success(\"Settings updated\");\n    })\n    .catch(reason => {\n      toast.error(`Cannot save: ${reason}`);\n      reject(reason);\n    })\n    .finally(() => dispatch(setSpinnerShow(false)));\n})\n\nexport default Result;\n","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClicked: () => void,\n  onDetailsClicked?: () => void,\n}) => {\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  return (\n    <Modal.Header className={headerClassName}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        {props.onDetailsClicked && (<button type=\"button\" className=\"btn\" onClick={props.onDetailsClicked}><i className=\"bi bi-three-dots-vertical\"/></button>)}\n        <span className=\"border-end ms-2 me-3\"/>\n        <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={props.onCloseClicked}/>\n      </div>\n    </Modal.Header>\n  )\n}","import React, {FunctionComponent} from \"react\";\nimport \"./styles.scss\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {IDeviceClassSettings} from \"./IDeviceClassSettings\";\n\nexport const reportKeysValue = [\"0100060000\", \"0104060000\"];\nexport const reportKeysBattery = [\"010000FF02\"];\n\nconst deviceClasses: { [deviceClass: string]: IDeviceClassSettings } = require(\"./device-classes.json\");\nconst batteryWarningLevelPercents = 50;\nconst batteryValuesRange = [2.7, 3.1]; // battery values to calculate percents from 0 to 100%\n\nexport const BinarySensorLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const value = getValueSettings(props);\n  const battery = getBatterySettings(props);\n\n  return (\n    <div className=\"row custom-binary-layout\">\n      <div className=\"col col-5 left\">\n        <i className={`bi ${value.iconClassName}`}/>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Current status:</div>\n          <div className={value.valueClassName}>{value.valueTitle}</div>\n        </div>\n\n        <div className=\"text-center mt-3 w-100\">\n          <div>Battery Level: <span className={`status ${battery.stateClassName}`}>{battery.valueTitle}</span></div>\n          <div className=\"progress mt-3\">\n            <div\n              className={`progress-bar ${battery.stateClassName}`}\n              role=\"progressbar\"\n              style={{width: `${battery.valuePercents}%`}}/>\n          </div>\n          <div className=\"battery-icon\">\n            <i className={`bi bi-battery-half ${battery.stateClassName}`}/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n// region getValueSettings \nconst getValueSettings = (props: LayoutProps): {\n  iconClassName: string,\n  valueClassName: string,\n  valueTitle: string\n} => {\n  const onOffReport = getReport(reportKeysValue, props);\n  if (!onOffReport) return {\n    iconClassName: deviceClasses[\"default\"].icons!.onFalse,\n    valueClassName: \"status-unknown\",\n    valueTitle: \"Unknown\"\n  }\n\n  // try to get status of binary sensor\n  const statusValue = onOffReport.parsed || onOffReport.val;\n  const roleParts = onOffReport.role && onOffReport.role.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const status: boolean = roleSettings && roleSettings[\"payload_on\"]\n    ? statusValue === roleSettings[\"payload_on\"] // compare with role settings\n    : (statusValue === \"1\" || statusValue === \"01\") // compare with default expected\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const iconClassName = status ? `${valueSettings.icons!.onTrue} ${valueSettings.styles!.onTrue}` : `${valueSettings.icons!.onFalse} ${valueSettings.styles!.onFalse}`;\n  const valueClassName = status ? `status ${valueSettings.styles!.onTrue}` : `status ${valueSettings.styles!.onFalse}`;\n  const valueTitle = status ? valueSettings.titles.onTrue : valueSettings.titles.onFalse;\n\n  return {iconClassName, valueClassName, valueTitle};\n}\n// endregion\n\n// region getBatterySettings\nconst getBatterySettings = (props: LayoutProps): {\n  stateClassName: string,\n  valueTitle: string,\n  valuePercents: number\n} => {\n  const report = getReport(reportKeysBattery, props);\n\n  // return default for unknown\n  if (!report) return {stateClassName: \"??\", valueTitle: \"-\", valuePercents: 0};\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const units = roleSettings && roleSettings[\"unit_of_measurement\"] || \"\";\n  const valueString = Number(report.parsed || report.val) || undefined;\n  let valuePercents: number | undefined = undefined;\n\n  // get percents\n  if (!valueString) valuePercents = undefined\n  else if (units === \"%\") valuePercents = Number(valueString);\n  else {\n    let valueNumber = Number(valueString) || undefined;\n    if (valueNumber) {\n      valueNumber = Math.min(batteryValuesRange[1], Math.max(batteryValuesRange[0], valueNumber));\n      valuePercents = Math.round((1 - (batteryValuesRange[1] - valueNumber) / (batteryValuesRange[1] - batteryValuesRange[0])) * 100);\n    }\n  }\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const valueTitle = `${valueString || \"??\"} ${units}`;\n  const stateClassName = !valuePercents\n    ? \"status-unknown\"\n    : valuePercents <= batteryWarningLevelPercents\n      ? valueSettings.styles!.onFalse\n      : valueSettings.styles!.onTrue;\n\n  return {\n    stateClassName,\n    valuePercents: valuePercents || 0,\n    valueTitle\n  };\n}\n// endregion\n\nconst getReport = (oneOfKeys: string[], props: LayoutProps): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = props.device.zespInfo.Report[key];\n    if (report) return report;\n  }\n}","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataControlSettings>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataControlSettings>(props: IDeviceControlProps<DataControlSettings>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n\n  setControlReport: (props: IDeviceControlProps<DataControlSettings>, value: string, reportKeyInfo?: ReportKeyInfo | null): boolean => {\n    const saveReportKeyInfo = reportKeyInfo || props.config.reportKey;\n    if (!saveReportKeyInfo) return false;\n\n    // const devices = globalState.state.devices;\n    // const device = devices?.find(x => x.zespInfo.IEEE === props.deviceInfo.zespInfo.IEEE);\n    // if (!device) return false;\n    //\n    // const reportKey = saveReportKeyInfo.endpoint + saveReportKeyInfo.clusterId + saveReportKeyInfo.attributeId;\n    // const report = device.zespInfo.Report[reportKey];\n    // report.val = value;\n    //\n    // globalState.setState(x => ({...x, ...{devices}}));\n    return true;\n  }\n}\n","import React from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    Single.ZespConnector.send({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    Single.ZespConnector.send({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  // const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    Single.ZespConnector.send({data: data});\n    // setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    Single.ZespConnector.send({data: data});\n    // setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {Single} from \"../../services/single\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  // const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    Single.ZespConnector.send({data: command});\n    // setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    Single.ZespConnector.send({data: command});\n    // setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler} width=\"270px\"/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(\n    () => setClassName(props.classNameFrom),\n    [props.children?.toString()]);\n\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {DeviceControls} from \"../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"./index\";\nimport {HighlightOnUpdate} from \"../shared/transition/HighlightOnUpdate\";\nimport {Row} from \"react-bootstrap\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataControlSettings>) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<NoReport id={props.config.id} reportData={reportData} configData={configData}/>)\n\n  const label = report.label || props.config.label || props.config.id || \"Unknown data\";\n  const value =\n    (report.parsed && report.parsed.toString().trim() === report.val.toString().trim() && report.parsed)\n    || (report.parsed && report.val && `${report.parsed} (${report.val})`)\n    || report.val\n    || \"No data\";\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 && JSON.parse(roleParts[1]);\n  const units = (roleSettings && roleSettings[\"unit_of_measurement\"]) || \"\";\n\n  const showDetailsClicked = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setShowDetails(!showDetails);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value} {units}</HighlightOnUpdate>\n        <a onClick={showDetailsClicked} href=\"#\" className=\"value-info\" title=\"Unrecognized data, click to show details\">\n          <i className=\"bi bi-info-circle-fill ms-2 text-secondary\"/>\n        </a>\n      </DeviceControlCol2>\n      <div className={`alert alert-info flex-column col-12 ${showDetails ? \"\" : \"d-none\"}`}>\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </Row>\n  )\n\n  // return \n}\n\nconst NoReport = (props: { id: string, configData: string, reportData: string }) => (\n  <Row>\n    <DeviceControlCol1>{props.id}</DeviceControlCol1>\n    <DeviceControlCol2>\n      <div className=\"alert alert-info\">\n        <div>{props.configData}</div>\n        {props.reportData && (<div className=\"mt-2\">{props.reportData}</div>)}\n      </div>\n    </DeviceControlCol2>\n  </Row>\n)\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n  // const setReportValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString())\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = formatCommand(props.config.arguments.command, result);\n    Single.ZespConnector.send({data: data});\n    // setReportValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n\n    const data = formatCommand(props.config.arguments.command, result);\n    Single.ZespConnector.send({data: data});\n    // setReportValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{props.config.label || \"Level\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number): string => command\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataControlSettings>) => {\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\",\n    \"http://listen.181fm.com/181-thebox_128k.mp3?\",\n    \"http://stream.live.vc.bbcmedia.co.uk/bbc_radio_one\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    // DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    setPlay(\"OFF\");\n    // DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    // DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) Single.ZespConnector.send({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    // DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) Single.ZespConnector.send({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = props.config.zespRoleSettings[\"unit_of_measurement\"] || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./unknown\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\n\nexport const getControlForDevice = (config: DataControlSettings, deviceInfo: DeviceInfo): JSX.Element | undefined => {\n  const controlProps: IDeviceControlProps<DataControlSettings> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>);\n    case \"level_root\" :\n      return (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>);\n    case \"rgb_root\" :\n      return (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>);\n    case \"player_src_root\" :\n      return (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataControlSettings}/>);\n    case \"player_control_root\":\n      return undefined;\n\n    case \"level_control\" :\n      return (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>);\n\n    case \"illuminance_sensor\" :\n      return (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>);\n    case \"binary_sensor\" :\n      return (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataControlSettings}/>);\n    case \"sensor\" :\n      return (<ValueSensor {...controlProps} config={controlProps.config as DataControlSettings}/>);\n\n    default:\n      return (<UnknownControl {...controlProps}/>)\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n} ","import {getControlForDevice} from \"../index\";\nimport React, {FunctionComponent} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\n\nexport const DefaultLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  return (\n    <>\n      {props.settings.map((control, i) => {\n        const element = getControlForDevice(control, props.device);\n        return element && (<div key={i} className=\"device-control-group\">{element}</div>);\n      })}\n    </>\n  )\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React, {FunctionComponent} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {BinarySensorLayout} from \"../../device-controls/layouts/binary-sensor\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {DefaultLayout} from \"../../device-controls/layouts/DefaultLayout\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  const layoutProps: LayoutProps = {\n    device: props.device,\n    settings: group.settings\n  };\n\n  const layoutName = props.device.settings?.layout || \"default\";\n  const LayoutTag: FunctionComponent<LayoutProps> = layouts[layoutName] || DefaultLayout;\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      <LayoutTag {...layoutProps}/>\n    </Modal.Body>\n  )\n}\n\nconst layouts = {\n  default: DefaultLayout,\n  binarySensorLayout: BinarySensorLayout,\n} as { [name: string]: FunctionComponent<LayoutProps> };\n","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Modal} from \"react-bootstrap\";\nimport {Devices} from \"../../services/devices\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport toast from \"react-hot-toast\";\nimport {getDeviceByIee} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/configure\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default () => {\n  const {ieee} = useParams<{ ieee: string }>();\n  const [show, setShow] = useState(true);\n  const history = useHistory();\n  const deviceInfo = useSelector((state: RootState) => getDeviceByIee(state, ieee), (a: DeviceInfo | undefined, b: DeviceInfo | undefined) => {\n    if (!a || !b) return false;\n    const keysA = Object.keys(a.zespInfo.Report);\n    const keysB = Object.keys(b.zespInfo.Report);\n\n    if (keysA.length != keysB.length) return false;\n    for (const key of keysA)\n      if (a.zespInfo.Report[key] !== b.zespInfo.Report[key]) return false;\n\n    return true;\n  });\n\n  if (!deviceInfo) return (<CustomDeviceNotFound/>);\n\n  const groups = Devices.getControlGroups(deviceInfo);\n  if (!groups || groups.length === 0) {\n    console.warn(`No controls found for '${deviceInfo.zespInfo.IEEE}' device`);\n    return (<CustomDeviceNotFound/>);\n  }\n\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const handleClose = () => setShow(false);\n  const handleExit = () => setTimeout(() => history.push(\"/devices\"), 100);\n  const handleDetails = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for logs\", {icon: \"👽\"});\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} onExited={handleExit}>\n      <CustomHeader\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}\n        setActiveGroupName={setActiveGroupName}\n        onCloseClicked={handleClose}\n        onDetailsClicked={handleDetails}\n      />\n\n      <CustomBody\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}/>\n    </Modal>\n  )\n}\n","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {Single} from \"../../services/single\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\", \"LoadJson|/zesp_ui.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default () => {\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    const data: string[] = [message.substr(0, 250), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    Single.ZespConnector.send({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    Single.ZespConnector.send({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = Single.ZespConnector.subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => Single.ZespConnector.unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"submit\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getSettings} from \"../../store/slices/settingsSlice\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const allSettings = useSelector(getSettings);\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.MQTT;\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, allSettings, dispatch);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getSettings} from \"../../store/slices/settingsSlice\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const allSettings = useSelector(getSettings);\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.Wifi;\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, allSettings, dispatch);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\nexport interface ZespState {\n  connectionStatus: \"disconnected\" | \"connected\",\n  initialized: boolean,\n}\n\nconst initialState: ZespState = {\n  connectionStatus: \"disconnected\",\n  initialized: false\n}\n\nexport const zespSlice = createSlice({\n  name: \"zesp\",\n  initialState,\n  reducers: {\n    setConnected: (state) => {\n      state.connectionStatus = \"connected\";\n    },\n\n    setDisconnected: (state) => {\n      state.connectionStatus = \"disconnected\"\n    },\n\n    setInitialized: (state, action: PayloadAction<boolean>) => {\n      state.initialized = action.payload;\n    }\n  }\n})\n\nconst getters = {\n  getStatus: (state: RootState) => state.zesp.connectionStatus,\n  getInitialized: (state: RootState) => state.zesp.initialized\n}\n\nexport const {getStatus, getInitialized} = getters;\nexport const {setConnected, setDisconnected, setInitialized} = zespSlice.actions;\nexport default zespSlice.reducer;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\nimport {getInitialized} from \"./store/slices/zespSlice\"\nimport {setSpinnerShow} from \"./store/slices/spinnerSlice\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const Routes = () => {\n  const isInitialized = useSelector(getInitialized);\n  const dispatch = useDispatch();\n\n  if (!isInitialized) {\n    // return (<div>Initialization...</div>);\n    setTimeout(() => dispatch(setSpinnerShow(true)), 0);\n    return (<Fragment/>);\n  }\n\n  setTimeout(() => dispatch(setSpinnerShow(false)), 300);\n\n  return (\n    <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee\" component={DeviceInfoPage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\n\ninterface IProps {\n  setServerIndex: (index: number) => void\n}\n\nexport const WelcomePage: FunctionComponent<IProps> = (props: IProps) => {\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => props.setServerIndex(index);\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {reportKeysBattery as binarySensorBatteryKeys, reportKeysValue as binarySensorValueKeys} from \"../../device-controls/layouts/binary-sensor\";\n\nexport const LayoutAutoDetection = {\n  binarySensor: (zespInfo: ZespDeviceInfo): string | undefined => {\n    const valueReportKey = getReport(binarySensorValueKeys, zespInfo);\n    const batteryReportKey = getReport(binarySensorBatteryKeys, zespInfo);\n\n    if (!valueReportKey || !batteryReportKey) return undefined; // these two guys required\n    if (!deviceClassIs([\"battery\"], batteryReportKey)) return undefined;\n    if (!deviceClassIs([\"door\", \"motion\"], valueReportKey)) return undefined;\n\n    console.debug(`Auto detected layout 'binarySensorLayout' for '${zespInfo.IEEE}'`);\n    return \"binarySensorLayout\";\n  }\n}\n\n// region help methods\nconst deviceClassIs = (expectedDeviceClasses: string[], report: ZespReportInfo): boolean => {\n  const roleParts = report.role && report.role.split(\"&\");\n  if (roleParts.length < 2) return false;\n\n  const roleSettings = JSON.parse(roleParts[1]);\n  const reportDeviceClass = roleSettings[\"device_class\"];\n  if (!reportDeviceClass) return false;\n\n  return expectedDeviceClasses.indexOf(reportDeviceClass) >= 0;\n}\n\nconst getReport = (oneOfKeys: string[], zespInfo: ZespDeviceInfo): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = zespInfo.Report[key];\n    if (report) return report;\n  }\n}\n// endregion","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {LayoutAutoDetection} from \"./service-auto-layouts\";\n\nconst ServiceDevices = {\n  getDevicesListAsync: (zesp: IZespConnector) => new Promise<DeviceInfo[]>((resolve, reject) => {\n    zesp.requestAsync({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(event => {\n        const result = onDevicesListReceived(event);\n        resolve(result);\n      })\n      .catch(reason => reject(reason));\n  })\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent): DeviceInfo[] => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n\n  return zespDevices.map(buildDeviceInfo);\n}\n\nexport const getDeviceModelSettings = (modelId: string): { settings: DataDeviceSettings, controls: DataControlSettings[] } => {\n  const settings: DataDeviceSettings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === modelId) >= 0) || {} as DataDeviceSettings;\n  const controls = settings?.controls && require(`../../data/controls/${settings.controls}`) as DataControlSettings[] || [];\n\n  return {settings, controls};\n}\n\nconst buildDeviceInfo = (zespInfo: ZespDeviceInfo) => {\n  const {settings, controls} = getDeviceModelSettings(zespInfo.ModelId);\n  controls.forEach(control => {\n    if (!control.reportKey) return;\n    const reportKey = control.reportKey.endpoint + control.reportKey.clusterId + control.reportKey.attributeId;\n    if (!zespInfo.Report[reportKey]) zespInfo.Report[reportKey] = {} as ZespReportInfo;\n  });\n\n  // try to autodetect layout by reports\n  const layout = settings.layout\n    || LayoutAutoDetection.binarySensor(zespInfo);\n\n  return {\n    zespInfo: zespInfo,\n    settings: {...settings, ...{layout: layout}},\n    customLayout: controls\n  } as DeviceInfo;\n}\n\nexport default ServiceDevices;\n","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, onReport))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const ieee = event.dataParts[1];\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportKey = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = {\n    parsed: data.parsed,\n    val: data.Data\n  } as Partial<ZespReportInfo>\n\n  onReport(ieee, reportKey, report);\n}","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespRootData} from \"./models/ZespRootData\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {getDeviceModelSettings} from \"./service-devices\";\n\nexport default {\n  getRootDataAsync: (zesp: IZespConnector) => new Promise<ZespReportUpdates>((resolve, reject) => {\n    zesp.requestAsync({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n    })\n      .then(event => {\n        const result = extractReports(event);\n\n        if (result) resolve(result);\n        else reject(\"Cannot update root device information\");\n      })\n      .catch(reason => reject(reason));\n  }),\n}\n\nexport type ZespReportUpdates = {\n  [key: string]: Partial<ZespReportInfo>\n}\n\nconst extractReports = (event: ZespDataEvent): ZespReportUpdates => {\n  const {controls} = getDeviceModelSettings(\"ZESP_Root\");\n  if (controls.length == 0) return {};\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const result: ZespReportUpdates = {};\n\n  const reportOnOff = controls.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) result[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId] = {val: data.on.toString()};\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = controls.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) result[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId] = {val: data.level.toString()};\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = controls.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) result[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId] = {val: `${data.B}:${data.G}:${data.R}`};\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = controls.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) result[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId] = {val: data.sound.volume.toString()};\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = controls.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) result[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId] = {val: data.sound.current_path?.toString()};\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = controls.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) result[playControl.endpoint + playControl.clusterId + playControl.attributeId] = {val: data.sound.play.toString()};\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  return result;\n}\n\n","import React, {Fragment} from \"react\";\nimport {Single} from \"../../services/single\";\nimport ServiceDevices from \"../../services/zesp/service-devices\";\nimport ServiceUpdates from \"../../services/zesp/service-report-updates\";\nimport ServiceRoot from \"../../services/zesp/service-root\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setConnected, setDisconnected, getStatus, setInitialized} from \"store/slices/zespSlice\";\nimport {setDevices, updateReport, updateRootReports} from \"store/slices/devicesSlice\";\nimport {IZespConnector} from \"../../services/zesp/interfaces/IZespConnector\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\n\ninterface IProps {\n  server: IServerInfo\n}\n\nexport const ZespAgent = (props: IProps) => {\n  const dispatch = useDispatch();\n  const zespStatus = useSelector(getStatus);\n\n  if (zespStatus === \"connected\") {\n    return (<Fragment/>);\n  }\n\n  Single.ZespConnector\n    .connectAsync(props.server, (status) => dispatch(status ? setConnected() : setDisconnected()))\n\n    .then(zesp => new Promise<IZespConnector>((resolve, reject) => {\n      ServiceDevices.getDevicesListAsync(zesp)\n        .then(devices => {\n          dispatch(setDevices(devices));\n          resolve(zesp);\n        })\n        .catch(reason => reject(reason));\n    }))\n\n    .then(zesp => new Promise<IZespConnector>((resolve, reject) => {\n      ServiceRoot\n        .getRootDataAsync(zesp)\n        .then(reports => {\n          dispatch(updateRootReports(reports))\n          resolve(zesp);\n          console.debug(\"Root device reports updated\");\n        })\n        .catch(reason => reject(reason));\n    }))\n\n    .then(zesp => {\n      const onReport = (ieee: string, reportKey: string, update: Partial<ZespReportInfo>) => {\n        dispatch(updateReport({ieee, reportKey, update}));\n      };\n\n      ServiceUpdates.subscribeToEvents(zesp, onReport);\n    })\n    .then(() => dispatch(setInitialized(true)))\n    .catch(reason => console.error(reason))\n    .finally(() => console.debug(\"ZESP initialization completed\"));\n\n  return (<Fragment/>);\n}\n","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport TopMenu from \"./shared/top-menu\";\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport {ZespAgent} from \"./shared/agents/ZespAgent\";\n\nconst Content = () => {\n  const [serverIndex, setServerIndex] = useState<number | null>(null);\n  const serversString = window.localStorage.getItem(\"servers\");\n  const servers = (serversString && JSON.parse(serversString)) || [];\n  const selectedServer = (serverIndex === null || servers.length <= serverIndex!)\n    ? null\n    : servers[serverIndex!];\n\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage setServerIndex={setServerIndex}/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  console.debug(\"App starting...\");\n\n  return (\n    <>\n      <ZespAgent server={props.server}/>\n      <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <header className=\"masthead\">\n          <a href=\"/\"><h3 className=\"masthead-brand\">ZESP:UI</h3></a>\n          <TopMenu/>\n        </header>\n        <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n          <Routes/>\n        </main>\n        <footer className=\"mastfoot mt-3\">\n          <p>ZESP UI application, by <a href=\"https://t.me/NickRimmer\" target={\"_blank\"} rel=\"noreferrer\">@NickRimmer</a>. (0.0.0 version, <span>dev build</span>)\n          </p>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nconst Result = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Content/>\n        </Switch>\n      </Router>\n\n      <LoadingSpinner/>\n      <Toaster/>\n    </>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport zespReducer from \"./slices/zespSlice\";\nimport devicesReducer from \"./slices/devicesSlice\";\nimport spinnerReducer from \"./slices/spinnerSlice\";\nimport settingsSlice from \"./slices/settingsSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    zesp: zespReducer,\n    devices: devicesReducer,\n    spinner: spinnerReducer,\n    settings: settingsSlice,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/configure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n                console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;"],"sourceRoot":""}