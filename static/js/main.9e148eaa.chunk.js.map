{"version":3,"sources":["loader.js","i18n sync /^.*$","data/controls sync /^/.//.*$","services/zesp/enums/CloseEventCodes.tsx","services/zesp/common/ZespConnector.tsx","shared/top-menu/index.tsx","store/slices/spinnerSlice.tsx","shared/loading-spinner/index.tsx","shared/fadein-transition/index.tsx","pages/devices/item-image.tsx","pages/devices/item.tsx","services/devices.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","services/single.tsx","store/slices/devicesSlice.tsx","pages/devices/index.tsx","store/slices/settingsSlice.tsx","services/zesp/common/ZespResponseValidators.tsx","services/zesp/service-settings.tsx","pages/setup/index.tsx","pages/device-info/header.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/unknown.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/controls/OnOffToggle.tsx","device-controls/index.tsx","device-controls/layouts/DefaultLayout.tsx","device-controls/layouts/binary-sensor/index.tsx","device-controls/layouts/index.tsx","device-controls/layouts/ble-beacon/index.tsx","device-controls/layouts/binary-sensor/auto.tsx","device-controls/layouts/ble-beacon/auto.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","store/slices/zespSlice.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","services/zesp/service-devices.tsx","services/zesp/service-report-updates.tsx","services/zesp/service-root.tsx","services/zesp/service-firmware.tsx","store/slices/zespFirmwareSlice.tsx","models/UiSettings.tsx","shared/agents/ZespAgent.tsx","shared/updates-notification/UpdatesNotificationDialog.tsx","shared/updates-notification/UpdatesNotification.tsx","shared/footer/AppFooter.tsx","App.tsx","reportWebVitals.ts","store/configure.tsx","index.tsx","i18n/config.js"],"names":["window","$","jQuery","require","console","debug","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CloseEventCodes","_ws","_server","Result","t","useTranslation","className","to","process","spinnerSlice","createSlice","name","initialState","spinnerShow","reducers","setSpinnerShow","state","action","payload","getSpinnerShow","spinner","actions","LoadingSpinner","useSelector","Spinner","animation","variant","FadeIn","props","useState","setClassName","setTimeout","children","device","image","setImage","useEffect","testImage","Image","onerror","src","style","backgroundImage","detailsLink","ieee","Col","xs","sm","lg","xxl","title","tags","length","x","i","Devices","customLayout","buildLayoutSettingsFromZesp","reduce","r","groupName","group","find","push","settings","reportKey","deviceType","warn","endpoint","clusterId","attributeId","substr","zespInfo","Report","key","reportKeyInfo","DevType","registeredCluster","DataHaClusterIds","result","roleParts","role","split","buildLayoutItemForRole","attributes","IEEE","getLayoutItem","filter","undefined","dataCluster","roleName","roleSettings","layoutItem","zespRoleSettings","JSON","parse","ConnectionStartTimeout","VerifyConnectionTimeout","DefaultRequestTimeoutSeconds","ZespDataEventType","ZespDataEvent","dataType","dataParts","response","Event","_reconnecter","onMessageEvent","EventTarget","ZespConnector","connectAsync","server","zespConnectedAction","Promise","reject","reconnectAsync","then","Single","catch","error","Constants","setInterval","disconnect","clearInterval","underlyingWebsocket","readyState","close","force","Restart","protocol","document","location","WebsocketBuilder","address","onOpen","onClose","onError","onConnectionError","onMessage","onMessageReceived","build","send","args","data","isBinary","getBinaryData","requestAsync","timeoutSeconds","responseReceived","validator","responseValidator","listener","event","isValid","removeEventListener","addEventListener","request","onSuccess","errorMessage","subscribe","handler","zespEvent","unsubscribe","getServerAddress","ws","messageParts","replace","messageType","shift","exec","unshift","resultEvent","dispatchEvent","message","dataHex","replaceAll","match","parseInt","Uint8Array","ZespConnectorImplementation","devicesSlice","devices","setDevices","updateReport","update","updateRootReports","ModelId","getDeviceByIee","getAllDevices","DevicesList","Row","devicesSorting","a","b","buildListItem","Name","getImageUrl","getTagsFromReports","serverAddress","Img","modelId","reports","reportKeyDetails","clusterInfo","HomeAutoClusters","indexOf","sort","deviceItems","Card","Body","zespSettings","uiSettings","settingsSlice","setZespSettings","setUiSettings","getZespSettings","JsonZespResponseValidator","fileName","responseFileName","TypedZespResponseValidator","AllMessagesZespResponseValidator","jsonString","json","assign","parseResponse","stringify","join","toLocaleLowerCase","jsonStr","trim","dataStr","SaveSettings","dispatch","updatedSettings","ZespSettingsService","toast","success","reason","finally","useDispatch","alert","Container","Nav","Item","exact","marginTop","headerClassName","groups","headerContent","type","activeGroupName","onClick","setActiveGroupName","Modal","Header","onDetailsClicked","onCloseClicked","DeviceControls","config","deviceInfo","layoutId","OnOffRoot","report","ButtonGroup","Button","val","toString","arguments","commandOn","commandOff","LevelRoot","currentValue","Number","max","min","value","setValue","minMaxAttributes","inRange","Math","FormControl","width","onChange","command","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","initialValue","readValue","item","localStorage","getItem","storedValue","setStoredValue","handleStorageChange","newValue","Function","setItem","RgbRoot","g","color","setColor","colorPicker","setColorPicker","colorChangeHandler","rgb","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","Transition","onRefresh","classNameFrom","onLoad","classNameTo","timeOutMs","HighlightOnUpdate","UnknownControl","showDetails","setShowDetails","configData","reportData","label","parsed","units","preventDefault","href","NoReport","IlluminanceSensor","LevelControl","sendValueToZesp","formatCommand","Device","PlayerSrcRoot","srcReport","playSettings","playReport","setSrc","play","setPlay","list","placeholder","icon","OnOffBinarySensor","payloadOn","ValueSensor","unit","OnOffToggle","commandToggle","DeviceControlCol1","md","DeviceControlCol2","DefaultLayout","controls","unknown","forEach","element","controlProps","getControlForDevice","showUnknown","setShowUnknown","reportKeysValue","reportKeysBattery","deviceClasses","batteryValuesRange","getValueSettings","onOffReport","getReport","iconClassName","icons","onFalse","valueClassName","valueTitle","statusValue","status","deviceClass","valueSettings","onTrue","styles","titles","getBatterySettings","stateClassName","valuePercents","valueString","valueNumber","round","oneOfKeys","layoutsAvailable","default","binarySensorLayout","battery","bleBeacon","isInRange","signalLevel","lastUpdateMs","time","lastDate","Date","calculateRelative","now","relative","setRelative","timer","lastUpdateStyle","rangeStyle","toLocaleDateString","toLocaleTimeString","autoDetectors","valueReportKey","layoutTools","binarySensorValueKeys","batteryReportKey","binarySensorBatteryKeys","roleDeviceClassIs","class","rangeReport","signalReport","autoDetect","layout","autoDetector","expectedDeviceClasses","reportDeviceClass","layoutProps","layoutName","LayoutElements","history","useHistory","useParams","show","setShow","keysA","keysB","handleClose","onHide","onExited","handleSubmit","input","prop","attr","ReactForm","onSubmit","restProps","Form","predefinedMessages","predefinedBinary","messages","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","messagesRef","useRef","pausedRef","addMessages","current","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","Footer","togglePause","startsWith","i2","controlId","defaultValue","inputProps","Group","as","Label","column","Control","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","allSettings","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","rel","Wifi","ssid","pass","ip","mask","gw","zespSlice","connectionStatus","initialized","setConnected","setDisconnected","setInitialized","getStatus","zesp","getInitialized","Routes","isInitialized","path","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","deleteConfirmed","setDeleteConfirmed","popover","Popover","dangerouslySetInnerHTML","__html","editServer","updateAction","addAction","closeAction","InputGroup","Text","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","setServerIndex","ServiceDevices","getDevicesListAsync","onDevicesListReceived","zespVersion","zespDevices","buildDeviceInfo","getDeviceModelSettings","predefinedDevices","modelIds","findIndex","control","onReport","onUpdate","EndPoint","ClusterId","AttribId","Data","extractReports","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","updates","currentVersion","updatesInformation","zespFirmwareUpdateInfo","zespFirmwareInstalledVersion","zespFirmwareSlice","setZespFirmwareUpdate","setZespFirmwareInstalledVersion","getZespFirmwareUpdateInfo","zespFirmware","getZespFirmwareInstalledVersion","UiDefaultSettings","ZespAgent","zespStatus","uiSettingsRef","ServiceRoot","ServiceSettings","firmwareUpdate","firmwareLastCheck","ServiceFirmware","firmwareInfo","ServiceUpdates","UpdatesNotificationDialog","onClosed","zespFirmwareUpdate","zespFirmwareCurrentVersion","onHideHandler","zespFirmwareUpdateVersion","updateData","UpdatesNotification","zespCurrentVersion","showDialog","setShowDialog","AppFooter","Content","serverIndex","serversString","selectedServer","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","zespReducer","devicesReducer","spinnerReducer","settingsReducer","zespFirmwareReducer","ReactDOM","render","StrictMode","getElementById","languages","namespaces","i18n","use","initReactI18next","init","fallbackLng","lng","resources","lang","ns","loadResources","defaultNS"],"mappings":"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","file":"static/js/main.9e148eaa.chunk.js","sourcesContent":["window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 98,\n\t\"./config.js\": 98,\n\t\"./locales/en/common\": 124,\n\t\"./locales/en/common.json\": 124,\n\t\"./locales/en/nav\": 125,\n\t\"./locales/en/nav.json\": 125,\n\t\"./locales/en/pages/devices\": 126,\n\t\"./locales/en/pages/devices.json\": 126,\n\t\"./locales/en/pages/setup-mqtt\": 127,\n\t\"./locales/en/pages/setup-mqtt.json\": 127,\n\t\"./locales/en/pages/setup-wifi\": 128,\n\t\"./locales/en/pages/setup-wifi.json\": 128,\n\t\"./locales/en/pages/welcome\": 129,\n\t\"./locales/en/pages/welcome.json\": 129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","var map = {\n\t\"./root\": 156,\n\t\"./root.json\": 156\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 342;","// https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#status_codes\nexport enum CloseEventCodes {\n  Restart = 1012\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport Constants from \"./Constants\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IZespConnector, ZespConnectedAction, ZespConnectorHandler, ZespConnectorListener} from \"../interfaces/IZespConnector\";\nimport {Single} from \"../../single\";\nimport {CloseEventCodes} from \"../enums/CloseEventCodes\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\n\n// const zespHost = \"192.168.3.30\"; //TODO read host from config\n\nlet _ws: Websocket;\nlet _server: IServerInfo | null;\nconst onMessageEvent = new EventTarget();\nlet _reconnecter: NodeJS.Timeout | null | undefined;\n\nconst ZespConnector: IZespConnector = {\n  connectAsync: (\n    server,\n    zespConnectedAction: ZespConnectedAction\n  ) => new Promise<IZespConnector>((resolve, reject) => {\n    if (_server) {\n      console.warn(\"ZespConnector already initialized\");\n      return;\n    }\n\n    _server = server;\n\n    // start with delay\n    setTimeout(() => ZespConnector.reconnectAsync(true, zespConnectedAction)\n        .then(() => {\n          resolve(Single.ZespConnector)\n        })\n        .catch(error => {\n          zespConnectedAction(false);\n          reject(error);\n        }),\n      Constants.ConnectionStartTimeout);\n\n    // setup watchdog\n    _reconnecter = setInterval(() => ZespConnector.reconnectAsync(false, zespConnectedAction)\n        // .then(() => resolve(Single.ZespConnector))\n        .catch(error => {\n          console.warn(`Reconnection is failed: ${error}`);\n          zespConnectedAction(false);\n          // reject(error);\n        }),\n      Constants.VerifyConnectionTimeout);\n  }),\n\n  disconnect: () => {\n    if (_reconnecter) {\n      clearInterval(_reconnecter);\n      _reconnecter = null;\n    }\n    _server = null;\n\n    try {\n      if (_ws?.underlyingWebsocket?.readyState === 3 || _ws?.underlyingWebsocket?.readyState == null) {\n        console.debug(\"zesp connection already closed\");\n        return;\n      } else if (_ws?.underlyingWebsocket?.readyState === 1) {\n        console.debug(\"zesp connection closing...\");\n        _ws.close(1000); // closed normal\n        return;\n      } else {\n        _ws?.close(1000); // closed normal\n      }\n    } catch {\n      //it's ok (;\n    }\n  },\n\n  reconnectAsync: (force, zespConnectedAction) => new Promise<void>((resolve, reject) => {\n    if (!_server) {\n      reject(\"Server configuration missed\");\n      // throw new Error(\"ZespConnector is not initialized yet\")\n    }\n\n    if (_ws?.underlyingWebsocket?.readyState === 0) {\n      reject(\"Already connecting\");\n      return;\n    }\n\n    // check if already connected\n    if (_ws?.underlyingWebsocket?.readyState === 1 && !force) {\n      resolve();\n      return;\n    }\n\n    // create new connection\n    console.debug(\"Start ws connection...\");\n    try {\n      _ws.close(CloseEventCodes.Restart);\n    } catch {\n      // it's ok :P\n    }\n\n    if (zespConnectedAction) zespConnectedAction(false);\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    _ws = new WebsocketBuilder(`${protocol}://${_server!.address}:81`)\n      .onOpen(() => {\n        if (zespConnectedAction) {\n          console.debug(\"ZESP connected\");\n          zespConnectedAction(true);\n        }\n        resolve();\n      })\n      .onClose(() => {\n        console.debug(\"ZESP connection closed\");\n        zespConnectedAction && zespConnectedAction(false)\n      })\n      .onError(() => {\n        onConnectionError();\n        reject(\"ZESP connection error\")\n      })\n      .onMessage(onMessageReceived)\n      .build();\n  }),\n\n  send: (args) => {\n    if (!_ws) {\n      console.error(\"ZespConnector.send: WebSocket client is not initialized yet\");\n      return;\n    }\n\n    const data = args.isBinary === true\n      ? getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  },\n\n  requestAsync: (args) => new Promise<ZespDataEvent>(((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      onMessageEvent.addEventListener(ZespDataEventType, listener);\n      ZespConnector.send({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })),\n\n  request: (args) => new Promise<IZespConnector>((resolve, reject) => {\n    ZespConnector\n      .requestAsync(args)\n      .then(event => {\n        if (args.onSuccess) args.onSuccess(event);\n        else console.debug(`zesp request completed (${args.responseValidator.name})`);\n\n        resolve(Single.ZespConnector);\n      })\n      .catch(error => {\n        const errorMessage = `${error} (${args.responseValidator.name}; ${args.data})`;\n\n        if (args.onError) args.onError(errorMessage);\n        else console.warn(`zesp request failed: ${errorMessage}`);\n        reject(errorMessage);\n      });\n  }),\n\n  subscribe: (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  },\n\n  unsubscribe: (listener: ZespConnectorListener) => onMessageEvent.removeEventListener(ZespDataEventType, listener),\n\n  getServerAddress: () => _server?.address\n};\n\nconst onConnectionError = () => {\n  console.debug(\"Zesp connection error happened )=\");\n}\n\nconst onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n  const messageParts = e.data\n    .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n    .split(\"\\x00\");\n\n  if (messageParts.length == 0) {\n    console.warn(\"Received empty message from zesp\");\n    return;\n  }\n\n  let messageType = messageParts.shift();\n\n  const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n  if (jsonMatch) {\n    messageParts.unshift(messageType);\n    messageType = \"json\";\n  }\n\n  const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n  // console.debug(resultEvent);\n  onMessageEvent.dispatchEvent(resultEvent);\n}\n\nconst getBinaryData = (message: string): Uint8Array => {\n  const data = message.replaceAll(\" \", \"\");\n  const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n  return new Uint8Array(dataHex);\n}\n\nexport default ZespConnector;\n","import React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\n\nimport './styles.scss'\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n    </nav>\n  );\n};\n\nexport default Result;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\ninterface IState {\n  spinnerShow: boolean\n}\n\nconst initialState: IState = {\n  spinnerShow: false,\n}\n\nexport const spinnerSlice = createSlice({\n  name: \"spinner\",\n  initialState,\n  reducers: {\n    setSpinnerShow: (state, action: PayloadAction<boolean>): void => {\n      state.spinnerShow = action.payload;\n    }\n  }\n});\n\nconst getters = {\n  getSpinnerShow: (state: RootState) => state.spinner.spinnerShow\n}\n\nexport const {getSpinnerShow} = getters;\nexport const {setSpinnerShow} = spinnerSlice.actions;\nexport default spinnerSlice.reducer;\n","import React from \"react\";\nimport \"./styles.scss\"\nimport {Spinner} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\nimport {getSpinnerShow} from \"../../store/slices/spinnerSlice\";\n\nconst LoadingSpinner = () => {\n  const spinnerShow = useSelector(getSpinnerShow);\n  return (\n    <div className={`loading-overlay ${spinnerShow ? \"show\" : \"hidden\"}`}>\n      <Spinner animation=\"border\" variant=\"light\"/>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;","import {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: FunctionComponent = (props) => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={className}>\n      {props.children}\n    </div>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nconst defaultImage = \"/device-images/default.png\";\n\nexport default (props: IProps) => {\n  const [image, setImage] = useState(props.device.image);\n\n  useEffect(() => {\n    const testImage = new Image();\n    testImage.onerror = () => {\n      setImage(defaultImage);\n    }\n    testImage.src = image;\n  }, []);\n\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${image})`}}/>);\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {Col} from \"react-bootstrap\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nexport default (props: IProps) => {\n  const {device} = props;\n  const detailsLink = `/devices/${device.ieee}`;\n\n  return (\n    <Col xs={12} sm={6} lg={4} xxl={3} className=\"p-1\">\n      <NavLink className=\"item p-3 border rounded d-block\" to={detailsLink}>\n        <div className=\"d-flex\">\n          <div><ItemImage device={props.device}/></div>\n          <div className=\"ps-2\">\n            <div className=\"title\">{device.title}</div>\n            <div className=\"ieee text-muted small\">{device.ieee}</div>\n            {device.tags.length > 0 && (\n              <div className=\"badges small\">\n                {device.tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n              </div>\n            )}\n          </div>\n        </div>\n      </NavLink>\n    </Col>\n  );\n}\n","import {DataControlSettings, DataLayoutItemsGroup} from \"../models/DataControlSettings\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout && device.customLayout.length > 0\n      ? device.customLayout\n      : buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string, deviceType: string): ReportKeyInfo | undefined => {\n    if (!deviceType || deviceType === \"ZED\" || deviceType === \"ZR\") {\n      if (reportKey?.length !== 10) // 01 0000 0000\n      {\n        console.warn(`Unknown format of Zigbee report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: reportKey.substr(0, 2),\n        clusterId: reportKey.substr(2, 4),\n        attributeId: reportKey.substr(6),\n      }\n    }\n\n    if (deviceType === \"BED\") {\n      if (reportKey?.length < 1) // a-ny-thing\n      {\n        console.warn(`Unknown format of BLE report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: \"\",\n        clusterId: reportKey,\n        attributeId: \"\",\n      }\n    }\n\n    console.warn(`Unknown device type '${deviceType}'`);\n    return undefined;\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataControlSettings[] => {\n  const getLayoutItem = (reportKey: string): DataControlSettings | undefined => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey, device.zespInfo.DevType);\n    if (!reportKeyInfo) {\n      console.warn(`Cannot get report key details for '${device.zespInfo.IEEE}' device`);\n      return undefined;\n    }\n\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataControlSettings;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey, device.zespInfo.DevType)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key)).filter(x => x !== undefined) as DataControlSettings[];\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string, deviceType: string): DataControlSettings | undefined => {\n  // return undefined;\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey, deviceType);\n  if (!reportKeyInfo) return undefined;\n\n  const roleName = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: roleName} as DataControlSettings // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${roleName}`]\n    || dataCluster.attributes[roleName]\n    || {id: roleName} as DataControlSettings; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 100,\n\n  // connection verify interval\n  VerifyConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {IZespConnector} from \"./zesp/interfaces/IZespConnector\";\nimport ZespConnectorImplementation from \"./zesp/common/ZespConnector\";\n\nexport namespace Single {\n  export const ZespConnector: IZespConnector = ZespConnectorImplementation;\n  export const ZespConnectorPromise: Promise<IZespConnector> = new Promise<IZespConnector>(resolve => resolve(Single.ZespConnector));\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {RootState} from \"../configure\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespReportUpdates} from \"../../services/zesp/service-root\";\n\nexport interface DevicesState {\n  devices: DeviceInfo[]\n}\n\nconst initialState: DevicesState = {\n  devices: []\n}\n\nexport const devicesSlice = createSlice({\n  name: \"devices\",\n  initialState,\n  reducers: {\n    setDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      state.devices = action.payload;\n    },\n    updateReport: (state, action: PayloadAction<{ ieee: string, reportKey: string, update: Partial<ZespReportInfo> }>): void => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Device '${action.payload.ieee}' not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report[action.payload.reportKey] = {...device.zespInfo.Report[action.payload.reportKey], ...action.payload.update};\n      console.debug(`Device '${action.payload.ieee}' with report '${action.payload.reportKey}' has been updated`);\n    },\n    updateRootReports: (state, action: PayloadAction<ZespReportUpdates>) => {\n      const device = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = {...device.zespInfo.Report, ...action.payload} as { [reportId: string]: ZespReportInfo };\n    }\n  }\n})\n\nconst getters = {\n  getDeviceByIee: (state: RootState, ieee: string): DeviceInfo | undefined => state.devices.devices.find(x => x.zespInfo.IEEE === ieee),\n  getDevicesByModelId: (state: RootState, modelId: string): DeviceInfo[] => state.devices.devices.filter(x => x.zespInfo.ModelId === modelId),\n  getAllDevices: (state: RootState): DeviceInfo[] => state.devices.devices || [] as DeviceInfo[],\n}\n\nexport const {getDevicesByModelId, getDeviceByIee, getAllDevices} = getters;\nexport const {setDevices, updateReport, updateRootReports} = devicesSlice.actions;\nexport default devicesSlice.reducer;\n","import React from \"react\";\nimport \"./styles.scss\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card, Row} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {useTranslation} from \"react-i18next\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\nimport {Devices} from \"../../services/devices\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {Single} from \"../../services/single\";\nimport {getAllDevices} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\n\nconst Result = () => {\n  const devices = useSelector(getAllDevices, (a: DeviceInfo[], b: DeviceInfo[]) => a.length === b.length);\n  if (devices.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  console.debug(\"Building list of devices to show...\");\n  const deviceItems = [...devices]\n    .sort(devicesSorting)\n    .map(buildListItem);\n\n  console.debug(\"devices page updated...\");\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <DevicesList devices={deviceItems}/>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nconst DevicesList = (props: { devices: DeviceListItem[] }) => {\n  const {t} = useTranslation(\"pages.devices\");\n  const {devices} = props;\n\n  return (\n    <div className=\"group border-top pt-4\">\n      <div className=\"title h5 pb-3\">\n        <span>{t(\"groups.all\")}</span>\n        {devices.length > 1 && (<span className=\"badge bg-secondary ms-2\">{devices.length}</span>)}\n      </div>\n      <Row className=\"items\">\n        {devices.map((device, i) => (<Item device={device} key={i}/>))}\n      </Row>\n    </div>\n  );\n}\n\nconst devicesSorting = (a: DeviceInfo, b: DeviceInfo): number => {\n  if (a.zespInfo.ModelId === \"ZESP_Root\") return -1;\n  if (b.zespInfo.ModelId === \"ZESP_Root\") return 1;\n\n  if (a.zespInfo.ModelId < b.zespInfo.ModelId) return -1;\n  if (a.zespInfo.ModelId > b.zespInfo.ModelId) return 1;\n\n  return 0;\n}\n\nconst buildListItem = (device: DeviceInfo): DeviceListItem => {\n  const title = device.zespInfo.Name && device.zespInfo.Name.length > 0 ? device.zespInfo.Name : device.zespInfo.ModelId;\n  const image = getImageUrl(device);\n  const tags = getTagsFromReports(device.zespInfo.Report, device.zespInfo.DevType);\n\n  return {\n    title,\n    ieee: device.zespInfo.IEEE,\n    image,\n    tags\n  };\n}\n\nconst getImageUrl = (device: DeviceInfo): string => {\n  // device.settings?.image || device.zespInfo.Img\n  if (device.settings?.image)\n    return `${process.env.PUBLIC_URL}/device-images/${device.settings.image}`;\n\n  const serverAddress = Single.ZespConnector.getServerAddress();\n  if (device.zespInfo.Img)\n    return `http://${serverAddress}:8081/${device.zespInfo.Img}`\n\n  const modelId = device.zespInfo.ModelId;\n  return `http://${serverAddress}:8081/img/${modelId}.jpg`;\n}\n\nconst getTagsFromReports = (reports: { [key: string]: ZespReportInfo }, deviceType: string): string[] => {\n  const result: string[] = [];\n\n  for (const key of Object.keys(reports)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key, deviceType);\n\n    if (!reportKeyDetails) {\n      console.warn(`Cannot read report '${key}' details for '${deviceType}' device type`);\n      continue;\n    }\n\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    result.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  return result\n    .filter((x, i) => result.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n}\n\nexport default Result;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {UiSettings} from \"../../models/UiSettings\";\n\ninterface IState {\n  zespSettings: ZespSettings | undefined,\n  uiSettings: UiSettings | undefined,\n}\n\nconst initialState: IState = {\n  zespSettings: undefined,\n  uiSettings: undefined,\n}\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setZespSettings: (state, action: PayloadAction<ZespSettings>): void => {\n      state.zespSettings = action.payload;\n    },\n\n    setUiSettings: (state, action: PayloadAction<UiSettings>): void => {\n      state.uiSettings = action.payload;\n    }\n  }\n});\n\nconst getters = {\n  getZespSettings: (state: RootState) => state.settings.zespSettings,\n  getUiSettings: (state: RootState) => state.settings.uiSettings,\n}\n\nexport const {getZespSettings, getUiSettings} = getters;\nexport const {setZespSettings, setUiSettings} = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {ZespSettings} from \"./models/ZespSettings\";\nimport {Single} from \"../single\";\nimport {JsonZespResponseValidator, TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\n\nexport default {\n  getAsync: (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    Single.ZespConnector.requestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  }),\n\n  setAsync: (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      Single.ZespConnector.requestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  },\n\n  getCustomAsync: function getCustom<T>(name: string): Promise<T | undefined> {\n    return Single.ZespConnector\n      .requestAsync({\n        data: `LoadJson|/${name}.json`,\n        responseValidator: JsonZespResponseValidator(name)\n      })\n      .then(event => {\n        if (event.dataParts.length < 1) throw new Error(\"Unexpected JSON file response from ZESP\");\n        const jsonStr = event.dataParts[1];\n\n        if (!jsonStr || jsonStr.length === 0 || jsonStr.trim().toLocaleLowerCase() === \"null\") return undefined;\n        return JSON.parse(jsonStr) as T;\n      })\n  },\n\n  setCustom: function setCustom<T>(name: string, data: T): void {\n    const fileName = `/${name}.json`;\n    const dataStr = JSON.stringify(data);\n\n    Single.ZespConnector.send({\n      data: `SaveJson|${fileName}|${dataStr}`\n    });\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n","import React, {Fragment, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setSpinnerShow} from \"../../store/slices/spinnerSlice\"\nimport {setZespSettings, getZespSettings} from \"../../store/slices/settingsSlice\"\nimport ZespSettingsService from \"../../services/zesp/service-settings\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(getZespSettings);\n\n  useEffect(() => {\n    dispatch(setSpinnerShow(true));\n\n    ZespSettingsService.getAsync()\n      .then(data => {\n        dispatch(setZespSettings(data));\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  }, []);\n\n  if (!settings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <div className=\"aaa\">...</div>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/firmware\">Firmware manager</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (data: Partial<ZespSettings>, settings: ZespSettings | undefined, dispatch: Dispatch) => new Promise<void>((resolve, reject) => {\n  if (!settings) reject(\"Settings not loaded\");\n  dispatch(setSpinnerShow(true));\n\n  const updatedSettings: ZespSettings = ({...settings, ...data}) as ZespSettings;\n  ZespSettingsService\n    .setAsync(updatedSettings)\n    .then(() => {\n      dispatch(setZespSettings(updatedSettings));\n      resolve();\n      toast.success(\"Settings updated\");\n    })\n    .catch(reason => {\n      toast.error(`Cannot save: ${reason}`);\n      reject(reason);\n    })\n    .finally(() => dispatch(setSpinnerShow(false)));\n})\n\nexport default Result;","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClicked: () => void,\n  onDetailsClicked?: () => void,\n}) => {\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  return (\n    <Modal.Header className={headerClassName}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        {props.onDetailsClicked && (<button type=\"button\" className=\"btn\" onClick={props.onDetailsClicked}><i className=\"bi bi-three-dots-vertical\"/></button>)}\n        <span className=\"border-end ms-2 me-3\"/>\n        <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={props.onCloseClicked}/>\n      </div>\n    </Modal.Header>\n  )\n}","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataControlSettings>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataControlSettings>(props: IDeviceControlProps<DataControlSettings>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n}\n","import React from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    Single.ZespConnector.send({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    Single.ZespConnector.send({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  // const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    Single.ZespConnector.send({data: data});\n    // setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    Single.ZespConnector.send({data: data});\n    // setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {Single} from \"../../services/single\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  // const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    Single.ZespConnector.send({data: command});\n    // setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    Single.ZespConnector.send({data: command});\n    // setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler} width=\"270px\"/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(\n    () => setClassName(props.classNameFrom),\n    [props.children?.toString()]);\n\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {DeviceControls} from \"../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"./index\";\nimport {HighlightOnUpdate} from \"../shared/transition/HighlightOnUpdate\";\nimport {Row} from \"react-bootstrap\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataControlSettings>) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<NoReport id={props.config.id} reportData={reportData} configData={configData}/>)\n\n  const label = report.label || props.config.label || props.config.id || \"Unknown data\";\n  const value =\n    (report.parsed && report.parsed.toString().trim() === report.val.toString().trim() && report.parsed)\n    || (report.parsed && report.val && `${report.parsed} (${report.val})`)\n    || report.val\n    || \"No data\";\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 && JSON.parse(roleParts[1]);\n  const units = (roleSettings && roleSettings[\"unit_of_measurement\"]) || \"\";\n\n  const showDetailsClicked = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setShowDetails(!showDetails);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value} {units}</HighlightOnUpdate>\n        <a onClick={showDetailsClicked} href=\"#\" className=\"value-info\" title=\"Unrecognized data, click to show details\">\n          <i className=\"bi bi-info-circle-fill ms-2 text-secondary\"/>\n        </a>\n      </DeviceControlCol2>\n      <div className={`alert alert-info flex-column col-12 ${showDetails ? \"\" : \"d-none\"}`}>\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </Row>\n  )\n\n  // return \n}\n\nconst NoReport = (props: { id: string, configData: string, reportData: string }) => (\n  <Row>\n    <DeviceControlCol1>{props.id}</DeviceControlCol1>\n    <DeviceControlCol2>\n      <div className=\"alert alert-info\">\n        <div>{props.configData}</div>\n        {props.reportData && (<div className=\"mt-2\">{props.reportData}</div>)}\n      </div>\n    </DeviceControlCol2>\n  </Row>\n)\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.parsed ? Number(report.parsed) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    sendValueToZesp(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    sendValueToZesp(result);\n  }\n\n  const sendValueToZesp = (value: number) => {\n    const data = formatCommand(props.config.arguments.command, value, props);\n    Single.ZespConnector.send({data: data});\n  }\n\n  const label = report?.label || props.config.label || \"Level\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number, props: IDeviceControlProps<LayoutSettingsLevel>): string => command\n  .replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataControlSettings>) => {\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\",\n    \"http://listen.181fm.com/181-thebox_128k.mp3?\",\n    \"http://stream.live.vc.bbcmedia.co.uk/bbc_radio_one\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    // DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    setPlay(\"OFF\");\n    // DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    // DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) Single.ZespConnector.send({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    // DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) Single.ZespConnector.send({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = props.config.zespRoleSettings[\"unit_of_measurement\"] || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOffToggle} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffToggle = (props: IDeviceControlProps<LayoutSettingsOnOffToggle>) => {\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    const command = props.config.arguments.commandOn.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    Single.ZespConnector.send({data: command, isBinary: true});\n  };\n\n  const offHandler = () => {\n    const command = props.config.arguments.commandOff.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    Single.ZespConnector.send({data: command, isBinary: true});\n  };\n\n  const toggleHandler = () => {\n    const command = props.config.arguments.commandToggle.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    Single.ZespConnector.send({data: command, isBinary: true});\n  }\n\n  const label = report?.label || props.config.label || \"Power\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.parsed.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant=\"secondary\" onClick={toggleHandler}>Toggle</Button>\n          <Button variant={report?.parsed.toString() === \"0\" ? \"primary\" : \"secondary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsOnOffToggle, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./unknown\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\nimport {OnOffToggle} from \"./controls/OnOffToggle\";\n\nexport const getControlForDevice = (config: DataControlSettings, deviceInfo: DeviceInfo): JSX.Element | undefined => {\n  const controlProps: IDeviceControlProps<DataControlSettings> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>);\n    case \"level_root\" :\n      return (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>);\n    case \"rgb_root\" :\n      return (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>);\n    case \"player_src_root\" :\n      return (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataControlSettings}/>);\n    case \"player_control_root\":\n      return undefined;\n\n    case \"level_control\" :\n      return (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>);\n\n    case \"illuminance_sensor\" :\n      return (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>);\n    case \"binary_sensor\" :\n      return (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataControlSettings}/>);\n    case \"sensor\" :\n      return (<ValueSensor {...controlProps} config={controlProps.config as DataControlSettings}/>);\n\n    case \"on_off_toggle\":\n      return (<OnOffToggle {...controlProps} config={controlProps.config as LayoutSettingsOnOffToggle}/>);\n\n    default:\n      return (<UnknownControl {...controlProps}/>)\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n}","import {getControlForDevice} from \"../index\";\nimport React, {FunctionComponent, useState} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\n\nexport const DefaultLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const controls: React.ReactElement[] = [];\n  const unknown: React.ReactElement[] = [];\n\n  props.settings.forEach(settings => {\n    const element = getControlForDevice(settings, props.device);\n    if (!element) return;\n\n    if (element?.type.name === \"UnknownControl\") unknown.push(element);\n    else controls.push(element);\n  });\n\n  // show by default if now identified controls found\n  const [showUnknown, setShowUnknown] = useState(controls.length === 0);\n\n  const onToggleUnknownHandler = () => {\n    setShowUnknown(!showUnknown);\n  }\n\n  return (\n    <div className=\"default-layout\">\n      {controls.length > 0 && (\n        <div className=\"elements\">\n          {controls.map((element, i) => {\n            return (<div key={i} className=\"device-control-group\">{element}</div>);\n          })}\n        </div>\n      )}\n\n      {unknown.length > 0 && (\n        <>\n          <button onClick={onToggleUnknownHandler} className=\"show-unknown-btn btn btn-outline-info\">Unknown reports ({unknown.length})</button>\n          <div className={`elements unknown ${showUnknown ? \"show\" : \"hide\"}`}>\n            {unknown.map((element, i) => {\n              return (<div key={i} className=\"device-control-group\">{element}</div>);\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}","import React, {FunctionComponent} from \"react\";\nimport \"./styles.scss\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {IDeviceClassSettings} from \"./IDeviceClassSettings\";\n\nexport const reportKeysValue = [\"0100060000\", \"0104060000\"];\nexport const reportKeysBattery = [\"010000FF02\"];\n\nconst deviceClasses: { [deviceClass: string]: IDeviceClassSettings } = require(\"./device-classes.json\");\nconst batteryWarningLevelPercents = 50;\nconst batteryValuesRange = [2.7, 3.1]; // battery values to calculate percents from 0 to 100%\n\nexport const BinarySensorLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const value = getValueSettings(props);\n  const battery = getBatterySettings(props);\n\n  return (\n    <div className=\"row custom-binary-layout\">\n      <div className=\"col col-5 left\">\n        <i className={`bi ${value.iconClassName}`}/>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Current status:</div>\n          <div className={value.valueClassName}>{value.valueTitle}</div>\n        </div>\n\n        <div className=\"text-center mt-3 w-100\">\n          <div>Battery Level: <span className={`status ${battery.stateClassName}`}>{battery.valueTitle}</span></div>\n          <div className=\"progress mt-3\">\n            <div\n              className={`progress-bar ${battery.stateClassName}`}\n              role=\"progressbar\"\n              style={{width: `${battery.valuePercents}%`}}/>\n          </div>\n          <div className=\"battery-icon\">\n            <i className={`bi bi-battery-half ${battery.stateClassName}`}/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n// region getValueSettings \nconst getValueSettings = (props: LayoutProps): {\n  iconClassName: string,\n  valueClassName: string,\n  valueTitle: string\n} => {\n  const onOffReport = getReport(reportKeysValue, props);\n  if (!onOffReport) return {\n    iconClassName: deviceClasses[\"default\"].icons!.onFalse,\n    valueClassName: \"status-unknown\",\n    valueTitle: \"Unknown\"\n  }\n\n  // try to get status of binary sensor\n  const statusValue = onOffReport.parsed || onOffReport.val;\n  const roleParts = onOffReport.role && onOffReport.role.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const status: boolean = roleSettings && roleSettings[\"payload_on\"]\n    ? statusValue === roleSettings[\"payload_on\"] // compare with role settings\n    : (statusValue === \"1\" || statusValue === \"01\") // compare with default expected\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const iconClassName = status ? `${valueSettings.icons!.onTrue} ${valueSettings.styles!.onTrue}` : `${valueSettings.icons!.onFalse} ${valueSettings.styles!.onFalse}`;\n  const valueClassName = status ? `status ${valueSettings.styles!.onTrue}` : `status ${valueSettings.styles!.onFalse}`;\n  const valueTitle = status ? valueSettings.titles.onTrue : valueSettings.titles.onFalse;\n\n  return {iconClassName, valueClassName, valueTitle};\n}\n// endregion\n\n// region getBatterySettings\nconst getBatterySettings = (props: LayoutProps): {\n  stateClassName: string,\n  valueTitle: string,\n  valuePercents: number\n} => {\n  const report = getReport(reportKeysBattery, props);\n\n  // return default for unknown\n  if (!report) return {stateClassName: \"??\", valueTitle: \"-\", valuePercents: 0};\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const units = roleSettings && roleSettings[\"unit_of_measurement\"] || \"\";\n  const valueString = Number(report.parsed || report.val) || undefined;\n  let valuePercents: number | undefined = undefined;\n\n  // get percents\n  if (!valueString) valuePercents = undefined\n  else if (units === \"%\") valuePercents = Number(valueString);\n  else {\n    let valueNumber = Number(valueString) || undefined;\n    if (valueNumber) {\n      valueNumber = Math.min(batteryValuesRange[1], Math.max(batteryValuesRange[0], valueNumber));\n      valuePercents = Math.round((1 - (batteryValuesRange[1] - valueNumber) / (batteryValuesRange[1] - batteryValuesRange[0])) * 100);\n    }\n  }\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const valueTitle = `${valueString || \"??\"} ${units}`;\n  const stateClassName = !valuePercents\n    ? \"status-unknown\"\n    : valuePercents <= batteryWarningLevelPercents\n      ? valueSettings.styles!.onFalse\n      : valueSettings.styles!.onTrue;\n\n  return {\n    stateClassName,\n    valuePercents: valuePercents || 0,\n    valueTitle\n  };\n}\n// endregion\n\nconst getReport = (oneOfKeys: string[], props: LayoutProps): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = props.device.zespInfo.Report[key];\n    if (report) return report;\n  }\n}","import {DefaultLayout} from \"./DefaultLayout\";\nimport {BinarySensorLayout} from \"./binary-sensor\";\nimport {FunctionComponent} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\nimport AutoDetectionBinarySensor from \"./binary-sensor/auto\";\nimport AutoDetectionBleBeacon from \"./ble-beacon/auto\";\nimport BleBeaconLayout from \"./ble-beacon\";\n\n// list of available layouts with names\nexport const layoutsAvailable = {\n  default: DefaultLayout,\n  binarySensorLayout: BinarySensorLayout,\n  bleBeacon: BleBeaconLayout,\n} as { [name: string]: FunctionComponent<LayoutProps> };\n\n// list of layout auto detection functions, which return layout name\nconst autoDetectors: { (zespInfo: ZespDeviceInfo): string | undefined }[] = [\n  AutoDetectionBinarySensor,\n  AutoDetectionBleBeacon,\n];\n\n// region help methods\nexport const layoutTools = {\n  autoDetect: (zespInfo: ZespDeviceInfo): string | undefined => {\n    for (const autoDetector of autoDetectors) {\n      const layout = autoDetector(zespInfo);\n      if (layout) return layout;\n    }\n\n    return undefined;\n  },\n\n  roleDeviceClassIs: (expectedDeviceClasses: string[], report: ZespReportInfo): boolean => {\n    const roleParts = report.role && report.role.split(\"&\");\n    if (roleParts.length < 2) return false;\n\n    const roleSettings = JSON.parse(roleParts[1]);\n    const reportDeviceClass = roleSettings[\"device_class\"];\n    if (!reportDeviceClass) return false;\n\n    return expectedDeviceClasses.indexOf(reportDeviceClass) >= 0;\n  },\n  getReport: (oneOfKeys: string[], zespInfo: ZespDeviceInfo): ZespReportInfo | undefined => {\n    for (const key of oneOfKeys) {\n      const report = zespInfo.Report[key];\n      if (report) return report;\n    }\n  }\n}\n// endregion","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {HighlightOnUpdate} from \"../../../shared/transition/HighlightOnUpdate\";\n\nconst lastUpdateTresholdSeconds = 60 * 5;\n\nexport const BleBeacon: FunctionComponent<LayoutProps> = (props) => {\n  const isInRange = props.device.zespInfo.Report[\"ble_InRange\"]?.parsed === \"1\";\n  const signalLevel = props.device.zespInfo.Report[\"ble_signal_level\"]?.parsed;\n\n  const lastUpdateMs = Math.max(props.device.zespInfo.Report[\"ble_InRange\"].time, props.device.zespInfo.Report[\"ble_signal_level\"].time);\n  const lastDate = new Date(lastUpdateMs);\n  const calculateRelative = () => Math.round((Date.now() - lastUpdateMs) / 1000);\n  const [relative, setRelative] = useState(calculateRelative());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setRelative(calculateRelative());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    }\n  }, [lastUpdateMs]);\n\n  const lastUpdateStyle = relative < lastUpdateTresholdSeconds\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  const rangeStyle = isInRange\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  return (\n    <div className=\"row custom-layout\">\n      <div className=\"col col-5 left flex-column position-relative\">\n        <i className={`bi bi-wifi ${rangeStyle}`}/>\n        <div className={`icon-description ${rangeStyle}`}>{isInRange ? \"In range\" : \"Out of range\"}</div>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Signal level:</div>\n          <div className={`status ${rangeStyle}`}><HighlightOnUpdate>{signalLevel}</HighlightOnUpdate></div>\n        </div>\n        <div className=\"text-center mt-3\">\n          <div>Last update:</div>\n          <div className={`status ${lastUpdateStyle}`}>{lastDate.toLocaleDateString()} {lastDate.toLocaleTimeString()}</div>\n          <div className=\"small text-muted opacity-50\">{\n            relative < 60 ? `${relative} seconds ago` :\n              relative / 60 < 60 ? `${Math.round(relative / 60)} minutes ago` :\n                `${Math.round(relative / 60 / 60)} hours ago`\n          }</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BleBeacon;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {reportKeysBattery as binarySensorBatteryKeys, reportKeysValue as binarySensorValueKeys} from \"./index\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBinarySensor = (zespInfo: ZespDeviceInfo): string | undefined => {\n  const valueReportKey = layoutTools.getReport(binarySensorValueKeys, zespInfo);\n  const batteryReportKey = layoutTools.getReport(binarySensorBatteryKeys, zespInfo);\n\n  if (!valueReportKey || !batteryReportKey) return undefined; // these two guys required\n  if (!layoutTools.roleDeviceClassIs([\"battery\"], batteryReportKey)) return undefined;\n  if (!layoutTools.roleDeviceClassIs([\"door\", \"motion\"], valueReportKey)) return undefined;\n\n  console.debug(`Auto detected layout 'binarySensorLayout' for '${zespInfo.IEEE}'`);\n  return \"binarySensorLayout\";\n}\n\nexport default AutoDetectionBinarySensor;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBleBeacon = (zespInfo: ZespDeviceInfo): string | undefined => {\n  if (zespInfo.DevType !== \"BED\" || zespInfo.class !== \"beacon\") return undefined;\n\n  const rangeReport = layoutTools.getReport([\"ble_InRange\"], zespInfo);\n  const signalReport = layoutTools.getReport([\"ble_signal_level\"], zespInfo);\n  if (!rangeReport || !signalReport) return undefined;\n\n  return \"bleBeacon\";\n}\n\nexport default AutoDetectionBleBeacon;","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React, {FunctionComponent} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {DefaultLayout} from \"../../device-controls/layouts/DefaultLayout\";\nimport {layoutsAvailable} from \"../../device-controls/layouts\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  const layoutProps: LayoutProps = {\n    device: props.device,\n    settings: group.settings\n  };\n\n  const layoutName = props.device.settings?.layout || \"default\";\n  const LayoutElements: FunctionComponent<LayoutProps> = layoutsAvailable[layoutName] || DefaultLayout;\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      <LayoutElements {...layoutProps}/>\n    </Modal.Body>\n  )\n}","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Modal} from \"react-bootstrap\";\nimport {Devices} from \"../../services/devices\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport toast from \"react-hot-toast\";\nimport {getDeviceByIee} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/configure\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default () => {\n  const {ieee} = useParams<{ ieee: string }>();\n  const [show, setShow] = useState(true);\n  const history = useHistory();\n  const deviceInfo = useSelector((state: RootState) => getDeviceByIee(state, ieee), (a: DeviceInfo | undefined, b: DeviceInfo | undefined) => {\n    if (!a || !b) return false;\n    const keysA = Object.keys(a.zespInfo.Report);\n    const keysB = Object.keys(b.zespInfo.Report);\n\n    if (keysA.length != keysB.length) return false;\n    for (const key of keysA)\n      if (a.zespInfo.Report[key] !== b.zespInfo.Report[key]) return false;\n\n    return true;\n  });\n\n  if (!deviceInfo) return (<CustomDeviceNotFound/>);\n\n  const groups = Devices.getControlGroups(deviceInfo);\n  if (!groups || groups.length === 0) {\n    console.warn(`No controls found for '${deviceInfo.zespInfo.IEEE}' device`);\n    return (<CustomDeviceNotFound/>);\n  }\n\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const handleClose = () => setShow(false);\n  const handleExit = () => setTimeout(() => history.push(\"/devices\"), 100);\n  const handleDetails = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for logs\", {icon: \"👽\"});\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} onExited={handleExit}>\n      <CustomHeader\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}\n        setActiveGroupName={setActiveGroupName}\n        onCloseClicked={handleClose}\n        onDetailsClicked={handleDetails}\n      />\n\n      <CustomBody\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}/>\n    </Modal>\n  )\n}\n","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {Single} from \"../../services/single\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\", \"LoadJson|/zesp_ui.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default () => {\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    const data: string[] = [message.substr(0, 250), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    Single.ZespConnector.send({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    Single.ZespConnector.send({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = Single.ZespConnector.subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => Single.ZespConnector.unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"submit\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.MQTT;\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, allSettings, dispatch);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.Wifi;\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, allSettings, dispatch);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\nexport interface ZespState {\n  connectionStatus: \"disconnected\" | \"connected\",\n  initialized: boolean,\n}\n\nconst initialState: ZespState = {\n  connectionStatus: \"disconnected\",\n  initialized: false\n}\n\nexport const zespSlice = createSlice({\n  name: \"zesp\",\n  initialState,\n  reducers: {\n    setConnected: (state) => {\n      state.connectionStatus = \"connected\";\n    },\n\n    setDisconnected: (state) => {\n      state.connectionStatus = \"disconnected\"\n    },\n\n    setInitialized: (state, action: PayloadAction<boolean>) => {\n      state.initialized = action.payload;\n    }\n  }\n})\n\nconst getters = {\n  getStatus: (state: RootState) => state.zesp.connectionStatus,\n  getInitialized: (state: RootState) => state.zesp.initialized\n}\n\nexport const {getStatus, getInitialized} = getters;\nexport const {setConnected, setDisconnected, setInitialized} = zespSlice.actions;\nexport default zespSlice.reducer;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\nimport {getInitialized} from \"./store/slices/zespSlice\"\nimport {setSpinnerShow} from \"./store/slices/spinnerSlice\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const Routes = () => {\n  const isInitialized = useSelector(getInitialized);\n  const dispatch = useDispatch();\n\n  if (!isInitialized) {\n    // return (<div>Initialization...</div>);\n    setTimeout(() => dispatch(setSpinnerShow(true)), 0);\n    return (<Fragment/>);\n  }\n\n  setTimeout(() => dispatch(setSpinnerShow(false)), 300);\n\n  return (\n    <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee\" component={DeviceInfoPage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/firmware\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\n\ninterface IProps {\n  setServerIndex: (index: number) => void\n}\n\nexport const WelcomePage: FunctionComponent<IProps> = (props: IProps) => {\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => props.setServerIndex(index);\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {layoutTools} from \"../../device-controls/layouts\";\n\ninterface IGetDevicesResponse {\n  devices: DeviceInfo[],\n  zespVersion: string | undefined,\n}\n\nconst ServiceDevices = {\n  getDevicesListAsync: (zesp: IZespConnector) => new Promise<IGetDevicesResponse>((resolve, reject) => {\n    zesp.requestAsync({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(event => {\n        const result = onDevicesListReceived(event);\n        resolve({\n          devices: result,\n          zespVersion: event.dataParts.length > 1 ? event.dataParts[1] : undefined,\n        } as IGetDevicesResponse);\n      })\n      .catch(reason => reject(reason));\n  })\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent): DeviceInfo[] => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n\n  return zespDevices.map(buildDeviceInfo);\n}\n\nexport const getDeviceModelSettings = (modelId: string): { settings: DataDeviceSettings, controls: DataControlSettings[] } => {\n  const settings: DataDeviceSettings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === modelId) >= 0) || {} as DataDeviceSettings;\n  const controls = settings?.controls && require(`../../data/controls/${settings.controls}`) as DataControlSettings[] || [];\n\n  return {settings, controls};\n}\n\nconst buildDeviceInfo = (zespInfo: ZespDeviceInfo): DeviceInfo => {\n  const {settings, controls} = getDeviceModelSettings(zespInfo.ModelId);\n  controls.forEach(control => {\n    if (!control.reportKey) return;\n    const reportKey = control.reportKey.endpoint + control.reportKey.clusterId + control.reportKey.attributeId;\n    if (!zespInfo.Report[reportKey]) zespInfo.Report[reportKey] = {} as ZespReportInfo;\n  });\n\n  // try to autodetect layout by reports\n  const layout = settings.layout || layoutTools.autoDetect(zespInfo);\n\n  return {\n    zespInfo: zespInfo,\n    settings: {...settings, ...{layout: layout}},\n    customLayout: controls\n  };\n}\n\nexport default ServiceDevices;\n","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, onReport))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const ieee = event.dataParts[1];\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportKey = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = {\n    parsed: data.parsed,\n    val: data.Data,\n    time: data.time,\n  } as Partial<ZespReportInfo>\n\n  onReport(ieee, reportKey, report);\n}","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespRootData} from \"./models/ZespRootData\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {getDeviceModelSettings} from \"./service-devices\";\n\nexport default {\n  getRootDataAsync: (zesp: IZespConnector) => new Promise<ZespReportUpdates>((resolve, reject) => {\n    zesp.requestAsync({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n    })\n      .then(event => {\n        const result = extractReports(event);\n\n        if (result) resolve(result);\n        else reject(\"Cannot update root device information\");\n      })\n      .catch(reason => reject(reason));\n  }),\n}\n\nexport type ZespReportUpdates = {\n  [key: string]: Partial<ZespReportInfo>\n}\n\nconst extractReports = (event: ZespDataEvent): ZespReportUpdates => {\n  const {controls} = getDeviceModelSettings(\"ZESP_Root\");\n  if (controls.length == 0) return {};\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const result: ZespReportUpdates = {};\n\n  const reportOnOff = controls.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) result[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId] = {val: data.on.toString()};\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = controls.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) result[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId] = {val: data.level.toString()};\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = controls.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) result[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId] = {val: `${data.B}:${data.G}:${data.R}`};\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = controls.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) result[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId] = {val: data.sound.volume.toString()};\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = controls.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) result[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId] = {val: data.sound.current_path?.toString()};\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = controls.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) result[playControl.endpoint + playControl.clusterId + playControl.attributeId] = {val: data.sound.play.toString()};\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  return result;\n}\n\n","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {FirmwareInfo} from \"../../models/FirmwareInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\n\nexport default {\n  getFirmwareInfoAsync: (zesp: IZespConnector): Promise<FirmwareInfo> => zesp\n    .requestAsync({\n      data: \"loadfwlist\",\n      responseValidator: TypedZespResponseValidator(\"rsploadfwlist\"),\n      timeoutSeconds: 15,\n    }).then(event => {\n      if (event.dataParts.length < 2) throw Error(\"Unexpected zesp firmware information response\");\n\n      const updates = JSON.parse(event.dataParts[0]) as DictionaryStrings[];\n      const currentVersion = event.dataParts[1];\n      if (!updates || updates.length === 0) throw Error(\"Unexpected zesp firmware udpates response\");\n      if (!currentVersion || currentVersion.length === 0) throw Error(\"Unexpected zesp current version response\");\n\n      const result: FirmwareInfo = {\n        currentVersion,\n        updatesInformation: updates[0]\n      };\n\n      return result;\n    }),\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\n\ninterface IState {\n  zespFirmwareUpdateInfo: DictionaryStrings | undefined,\n  zespFirmwareInstalledVersion: string,\n}\n\nconst initialState: IState = {\n  zespFirmwareUpdateInfo: undefined,\n  zespFirmwareInstalledVersion: \"-\",\n}\n\nexport const zespFirmwareSlice = createSlice({\n  name: \"zespFirmwareUpdate\",\n  initialState: initialState,\n  reducers: {\n    setZespFirmwareUpdate: (state, action: PayloadAction<DictionaryStrings>): void => {\n      state.zespFirmwareUpdateInfo = action.payload;\n    },\n\n    setZespFirmwareInstalledVersion: (state, action: PayloadAction<string>): void => {\n      state.zespFirmwareInstalledVersion = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespFirmwareUpdateInfo: (state: RootState) => state.zespFirmware.zespFirmwareUpdateInfo,\n  getZespFirmwareInstalledVersion: (state: RootState) => state.zespFirmware.zespFirmwareInstalledVersion,\n}\n\nexport const {getZespFirmwareUpdateInfo, getZespFirmwareInstalledVersion} = getters;\nexport const {setZespFirmwareUpdate, setZespFirmwareInstalledVersion} = zespFirmwareSlice.actions;\nexport default zespFirmwareSlice.reducer;","import {DictionaryStrings} from \"./DictionaryStrings\";\n\nexport type UiSettings = {\n  firmwareUpdate: DictionaryStrings | undefined,\n  firmwareLastCheck: number | undefined,\n}\n\nexport const UiDefaultSettings: UiSettings = {} as UiSettings;","import React, {Fragment, useRef} from \"react\";\nimport {Single} from \"../../services/single\";\nimport ServiceDevices from \"../../services/zesp/service-devices\";\nimport ServiceUpdates from \"../../services/zesp/service-report-updates\";\nimport ServiceRoot from \"../../services/zesp/service-root\";\nimport ServiceFirmware from \"../../services/zesp/service-firmware\";\nimport ServiceSettings from \"../../services/zesp/service-settings\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setConnected, setDisconnected, getStatus, setInitialized} from \"store/slices/zespSlice\";\nimport {setDevices, updateReport, updateRootReports} from \"store/slices/devicesSlice\";\nimport {setZespFirmwareInstalledVersion, setZespFirmwareUpdate} from \"store/slices/zespFirmwareSlice\";\nimport {IZespConnector} from \"../../services/zesp/interfaces/IZespConnector\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {UiDefaultSettings, UiSettings} from \"../../models/UiSettings\";\nimport {setUiSettings} from \"../../store/slices/settingsSlice\";\n\ninterface IProps {\n  server: IServerInfo\n}\n\nexport const ZespAgent = (props: IProps) => {\n  const dispatch = useDispatch();\n  const zespStatus = useSelector(getStatus);\n  const uiSettingsRef = useRef<UiSettings>();\n\n  if (zespStatus === \"connected\") {\n    return (<Fragment/>);\n  }\n\n  Single.ZespConnector\n    .connectAsync(props.server, (status) => dispatch(status ? setConnected() : setDisconnected()))\n\n    // read devices list\n    .then(zesp => new Promise<IZespConnector>((resolve, reject) => {\n      ServiceDevices.getDevicesListAsync(zesp)\n        .then(result => {\n          dispatch(setDevices(result.devices));\n          if (result.zespVersion) dispatch(setZespFirmwareInstalledVersion(result.zespVersion));\n\n          resolve(zesp);\n        })\n        .catch(reason => reject(reason));\n    }))\n\n    // read root device information\n    .then(zesp => new Promise<IZespConnector>((resolve, reject) => {\n      ServiceRoot\n        .getRootDataAsync(zesp)\n        .then(reports => {\n          dispatch(updateRootReports(reports))\n          resolve(zesp);\n          console.debug(\"Root device reports updated\");\n        })\n        .catch(reason => reject(reason));\n    }))\n\n    // read ui settings\n    .then(zesp => ServiceSettings\n      .getCustomAsync<UiSettings>(\"zesp_ui\")\n      .then(settings => {\n        dispatch(setUiSettings(settings || UiDefaultSettings))\n        uiSettingsRef.current = settings || UiDefaultSettings;\n        return zesp;\n      }))\n\n    // read firmware updates\n    .then(zesp => {\n      const uiSettings = uiSettingsRef.current\n      if (!uiSettings) throw new Error(\"Read UI settings before firmware checking\");\n\n      const oneDataMs = 1000 * 60 * 60 * 24;\n      if (uiSettings.firmwareUpdate && uiSettings.firmwareLastCheck && (Date.now() - uiSettings.firmwareLastCheck) < oneDataMs) {\n        dispatch(setZespFirmwareUpdate(uiSettings.firmwareUpdate));\n        console.debug(\"Firmware information read from settings\");\n        return zesp;\n      }\n\n      ServiceFirmware\n        .getFirmwareInfoAsync(zesp)\n        .then(firmwareInfo => {\n          dispatch(setZespFirmwareInstalledVersion(firmwareInfo.currentVersion));\n          dispatch(setZespFirmwareUpdate(firmwareInfo.updatesInformation));\n\n          uiSettingsRef.current = {...uiSettings, ...{firmwareUpdate: firmwareInfo.updatesInformation, firmwareLastCheck: Date.now()}};\n          ServiceSettings.setCustom(\"zesp_ui\", uiSettingsRef.current);\n\n          dispatch(setUiSettings(uiSettingsRef.current));\n          console.debug(\"Firmware updates information loaded\");\n        })\n        .catch(reason => {\n          console.warn(\"Cannot read Firmware update information\");\n          console.warn(reason);\n        });\n\n      // continue without waiting of results\n      return zesp;\n    })\n\n    // subscribe for report updates\n    .then(zesp => {\n      const onReport = (ieee: string, reportKey: string, update: Partial<ZespReportInfo>) => {\n        dispatch(updateReport({ieee, reportKey, update}));\n      };\n\n      ServiceUpdates.subscribeToEvents(zesp, onReport);\n    })\n    .then(() => dispatch(setInitialized(true)))\n    .catch(reason => console.error(reason))\n    .finally(() => console.debug(\"ZESP initialization completed\"));\n\n  return (<Fragment/>);\n}\n","import React, {useState} from \"react\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {Col, Modal, Row} from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\n\ninterface IProps {\n  zespFirmwareUpdate: DictionaryStrings,\n  zespFirmwareCurrentVersion: string,\n  onClosed: () => void,\n}\n\nconst UpdatesNotificationDialog: React.FC<IProps> = ({\n  onClosed,\n  zespFirmwareUpdate,\n  zespFirmwareCurrentVersion\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n\n  const onHideHandler = () => setShow(false);\n\n  const zespFirmwareUpdateVersion = zespFirmwareUpdate[\"ver\"] || \"unknown\";\n\n  const updateData: DictionaryStrings = {\n    ...{\"Current version\": zespFirmwareCurrentVersion},\n    ...{\"New version\": zespFirmwareUpdateVersion},\n    ...{...zespFirmwareUpdate, ...{\"ver\": undefined}} // skip ver from \"other\" properties, cause we'll show it before\n  }\n\n  const onUpdateClickHandler = () => {\n    toast.success(\"Not implemented yet...\", {icon: (<i className=\"bi bi-cone-striped text-warning\"/>)});\n  }\n\n  const onSkipClickHandler = () => {\n    toast.success(\"Not implemented yet...\", {icon: (<i className=\"bi bi-cone-striped text-warning\"/>)});\n  }\n\n  return (\n    <Modal show={show} onExited={onClosed} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>New version of ZESP Firmware</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        <div className=\"rows-striped\">\n          {Object.keys(updateData).map((key, i) => {\n            return updateData[key]\n              && updateData[key]!.trim().length > 0\n              && (<Row key={i}><Col xs={4} className=\"py-2 text-capitalize text-muted text-end\">{key}</Col><Col className=\"py-2 text-dark\">{updateData[key]}</Col></Row>);\n          })}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button className=\"btn btn-primary\" onClick={onUpdateClickHandler}>Download and Update</button>\n        <button className=\"btn btn-secondary\" onClick={onSkipClickHandler}>Skip this version</button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default UpdatesNotificationDialog;","import React, {Fragment, useState} from \"react\";\nimport UpdatesNotificationDialog from \"./UpdatesNotificationDialog\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion, getZespFirmwareUpdateInfo} from \"../../store/slices/zespFirmwareSlice\";\n\nexport const UpdatesNotification: React.FC = (): React.ReactElement => {\n  const zespFirmwareUpdate = useSelector(getZespFirmwareUpdateInfo);\n  const zespCurrentVersion = useSelector(getZespFirmwareInstalledVersion);\n  const [showDialog, setShowDialog] = useState(false);\n\n  if (!zespFirmwareUpdate || zespFirmwareUpdate[\"ver\"] === zespCurrentVersion) return (<Fragment/>);\n\n  const title = `${zespCurrentVersion} to ${zespFirmwareUpdate[\"ver\"]} update`;\n  const onUpdatesClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  return (\n    <div>\n      <span onClick={onUpdatesClickedHandler} className=\"badge bg-info ms-3 notification-updates clickable\" title={title}>\n        <i className=\"bi bi-cloud-arrow-down-fill\"/>\n      </span>\n      {showDialog && (<UpdatesNotificationDialog\n        onClosed={() => setShowDialog(false)}\n        zespFirmwareUpdate={zespFirmwareUpdate}\n        zespFirmwareCurrentVersion={zespCurrentVersion}/>)}\n    </div>\n  )\n}\n\nexport default UpdatesNotification;","import React from \"react\";\nimport \"./styles.scss\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion} from \"../../store/slices/zespFirmwareSlice\";\n\nexport const AppFooter: React.FC = (): React.ReactElement => {\n  const uiVersion = \"0.0.1 alfa\";\n  const zespVersion = useSelector(getZespFirmwareInstalledVersion);\n\n  return (\n    <footer className=\"app-footer my-3\">\n      <div className=\"d-flex justify-content-center\">\n        <div><a href=\"https://github.com/NickRimmer/zesp-ui\" target={\"_blank\"} rel=\"noreferrer\">ZESP UI<i className=\"bi bi-github ms-2\"/></a></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div>UI <span className=\"highlight\">{uiVersion}</span></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div><a href=\"https://t.me/zesp32\" target={\"_blank\"} rel=\"noreferrer\">ZESP</a> <span className=\"highlight\">{zespVersion}</span></div>\n      </div>\n    </footer>\n  )\n}\n\nexport default AppFooter;","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport TopMenu from \"./shared/top-menu\";\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport {ZespAgent} from \"./shared/agents/ZespAgent\";\nimport {UpdatesNotification} from \"./shared/updates-notification\";\nimport {AppFooter} from \"./shared/footer\";\n\nconst Content = () => {\n  const [serverIndex, setServerIndex] = useState<number | null>(null);\n  const serversString = window.localStorage.getItem(\"servers\");\n  const servers = (serversString && JSON.parse(serversString)) || [];\n  const selectedServer = (serverIndex === null || servers.length <= serverIndex!)\n    ? null\n    : servers[serverIndex!];\n\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage setServerIndex={setServerIndex}/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  return (\n    <>\n      <ZespAgent server={props.server}/>\n      <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <header className=\"masthead\">\n          <a href=\"/\"><h3 className=\"masthead-brand\">ZESP:UI</h3></a>\n          <div className=\"d-flex flex-row align-items-center\">\n            <TopMenu/>\n            <UpdatesNotification/>\n          </div>\n        </header>\n        <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n          <Routes/>\n        </main>\n        <AppFooter/>\n      </div>\n    </>\n  )\n}\n\nconst Result = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Content/>\n        </Switch>\n      </Router>\n\n      <LoadingSpinner/>\n      <Toaster/>\n    </>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport zespReducer from \"./slices/zespSlice\";\nimport devicesReducer from \"./slices/devicesSlice\";\nimport spinnerReducer from \"./slices/spinnerSlice\";\nimport settingsReducer from \"./slices/settingsSlice\";\nimport zespFirmwareReducer from \"./slices/zespFirmwareSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    zesp: zespReducer,\n    devices: devicesReducer,\n    spinner: spinnerReducer,\n    settings: settingsReducer,\n    zespFirmware: zespFirmwareReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/configure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n                console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;"],"sourceRoot":""}