{"version":3,"sources":["loader.js","i18n sync /^.*$","data/controls sync /^/.//.*$","store/slices/spinnerSlice.tsx","shared/loading-spinner/index.tsx","shared/fadein-transition/index.tsx","pages/devices/item-image.tsx","pages/devices/item.tsx","services/devices.tsx","store/slices/devicesSlice.tsx","store/slices/zespSlice.tsx","services/zesp/common/ZespResponseValidators.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/unknown.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/controls/OnOffToggle.tsx","device-controls/index.tsx","device-controls/layouts/DefaultLayout.tsx","device-controls/layouts/binary-sensor/index.tsx","device-controls/layouts/index.tsx","device-controls/layouts/ble-beacon/index.tsx","device-controls/layouts/binary-sensor/auto.tsx","device-controls/layouts/ble-beacon/auto.tsx","services/zesp/service-devices.tsx","store/slices/zespFirmwareSlice.tsx","services/zesp/service-root.tsx","services/zesp/zespSettings.hook.tsx","services/zesp/service-firmware.tsx","models/UiSettings.tsx","store/slices/settingsSlice.tsx","services/zesp/service-report-updates.tsx","shared/agents/ZespAgent.hook.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","services/zesp/common/service-connector.tsx","shared/agents/ZespAgent.tsx","pages/devices/index.tsx","pages/setup/index.tsx","pages/device-info/header.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","shared/footer/AppFooter.tsx","shared/app-dialog/index.tsx","shared/power-dialog/index.tsx","shared/top-menu/index.tsx","shared/updates-notification/UpdatesNotificationDialog.tsx","shared/updates-notification/UpdatesNotification.tsx","shared/header/index.tsx","App.tsx","reportWebVitals.ts","store/configure.tsx","index.tsx","i18n/config.js"],"names":["window","$","jQuery","require","console","debug","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialState","spinnerShow","spinnerMessage","spinnerSlice","createSlice","name","reducers","setSpinnerShow","state","action","payload","setSpinner","show","message","getSpinner","spinner","actions","LoadingSpinner","useSelector","Modal","centered","size","backdrop","Body","className","Spinner","animation","variant","FadeIn","props","useState","setClassName","setTimeout","children","device","image","setImage","useEffect","testImage","Image","onerror","src","style","backgroundImage","detailsLink","ieee","Col","xs","sm","lg","xxl","to","title","tags","length","x","i","Devices","customLayout","buildLayoutSettingsFromZesp","reduce","r","groupName","group","find","push","settings","reportKey","deviceType","warn","endpoint","clusterId","attributeId","substr","zespInfo","Report","key","reportKeyInfo","DevType","registeredCluster","DataHaClusterIds","result","roleParts","role","split","buildLayoutItemForRole","attributes","IEEE","getLayoutItem","filter","undefined","dataCluster","roleName","roleSettings","layoutItem","zespRoleSettings","JSON","parse","devicesSlice","devices","setDevices","updateReport","update","updateRootReports","ModelId","getDeviceByIee","getAllDevices","zespSlice","connectionStatus","initialized","setConnectionStatus","setInitialized","getStatus","zesp","getInitialized","JsonZespResponseValidator","fileName","isValid","event","dataType","responseFileName","dataParts","exec","TypedZespResponseValidator","AllMessagesZespResponseValidator","DeviceControls","config","deviceInfo","layoutId","OnOffRoot","zespSend","useContext","ZespContext","report","Row","ButtonGroup","Button","val","toString","onClick","data","arguments","commandOn","isBinary","commandOff","LevelRoot","currentValue","Number","max","min","value","setValue","minMaxAttributes","inRange","Math","FormControl","width","type","onChange","command","replace","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","initialValue","readValue","item","localStorage","getItem","error","storedValue","setStoredValue","handleStorageChange","addEventListener","removeEventListener","newValue","Function","setItem","stringify","dispatchEvent","Event","RgbRoot","g","b","color","setColor","colorPicker","setColorPicker","colorChangeHandler","rgb","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","Transition","onRefresh","classNameFrom","onLoad","classNameTo","timeOutMs","HighlightOnUpdate","UnknownControl","showDetails","setShowDetails","configData","reportData","label","parsed","trim","units","preventDefault","href","NoReport","IlluminanceSensor","parseInt","LevelControl","sendValueToZesp","formatCommand","Device","PlayerSrcRoot","srcReport","playSettings","playReport","toast","setSrc","play","setPlay","list","placeholder","icon","OnOffBinarySensor","payloadOn","ValueSensor","unit","OnOffToggle","commandToggle","DeviceControlCol1","md","DeviceControlCol2","DefaultLayout","controls","unknown","forEach","control","controlProps","element","getControlForDevice","showUnknown","setShowUnknown","reportKeysValue","reportKeysBattery","deviceClasses","batteryValuesRange","getValueSettings","onOffReport","getReport","iconClassName","icons","onFalse","valueClassName","valueTitle","statusValue","status","deviceClass","valueSettings","onTrue","styles","titles","getBatterySettings","stateClassName","valuePercents","valueString","valueNumber","round","oneOfKeys","layoutsAvailable","default","binarySensorLayout","battery","bleBeacon","isInRange","signalLevel","lastUpdateMs","time","lastDate","Date","calculateRelative","now","relative","setRelative","timer","setInterval","clearInterval","lastUpdateStyle","rangeStyle","toLocaleDateString","toLocaleTimeString","autoDetectors","valueReportKey","layoutTools","binarySensorValueKeys","batteryReportKey","binarySensorBatteryKeys","roleDeviceClassIs","class","rangeReport","signalReport","autoDetect","layout","autoDetector","expectedDeviceClasses","reportDeviceClass","indexOf","ServiceDevices","getDevicesListAsync","Promise","reject","zespRequestAsync","responseValidator","then","onDevicesListReceived","zespVersion","catch","reason","jsonString","zespDevices","assign","buildDeviceInfo","getDeviceModelSettings","modelId","predefinedDevices","modelIds","findIndex","zespFirmwareUpdateInfo","zespFirmwareInstalledVersion","zespSkipVersion","zespFirmwareSlice","setZespFirmwareUpdate","setZespFirmwareInstalledVersion","getZespFirmwareUpdateInfo","zespFirmware","getZespFirmwareInstalledVersion","extractReports","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","useZespSettings","setCustom","dataStr","getAsync","json","parseResponse","setAsync","join","toLocaleLowerCase","response","getCustomAsync","jsonStr","setUiSettings","timeoutSeconds","updates","currentVersion","updatesInformation","UiDefaultSettings","zespSettings","uiSettings","settingsSlice","setZespSettings","getZespSettings","getUiSettings","onReport","subscribe","onUpdate","EndPoint","ClusterId","AttribId","Data","useZespAgent","dispatch","uiSettingsRef","useRef","connectAsync","server","getDevices","getRoot","ServiceRoot","reports","readUiSettings","current","readFirmwareUpdates","firmwareUpdate","firmwareLastCheck","ServiceFirmware","firmwareInfo","subscribeReportUpdates","ServiceUpdates","Result","ConnectionStartTimeout","RestartConnectionTimeout","DefaultRequestTimeoutSeconds","WatcherIntervalSeconds","ZespDataEventType","ZespDataEvent","useZespConnector","_server","_onMessageEvent","EventTarget","_ws","_lastMessageTimestamp","_watcher","_onMessageReceived","ws","messageParts","messageType","shift","unshift","resultEvent","_runWatcher","zespStatusChangeHandler","underlyingWebsocket","readyState","Constants","args","dataHex","replaceAll","match","Uint8Array","_getBinaryData","send","responseReceived","validator","listener","force","close","_tryToCloseWS","protocol","document","location","serverAddress","address","WebsocketBuilder","onOpen","onClose","onError","onMessage","build","_tryConnectWs","handler","zespEvent","unsubscribe","getServerAddress","React","createContext","ZespAgent","useDispatch","zespStatus","setZesp","_restartTimerRef","Provider","clearTimeout","finally","DevicesList","t","useTranslation","devicesSorting","a","buildListItem","Name","getImageUrl","getTagsFromReports","process","Img","reportKeyDetails","clusterInfo","HomeAutoClusters","sort","deviceItems","Card","SaveSettings","updatedSettings","success","alert","Container","Nav","Item","exact","marginTop","headerClassName","groups","headerContent","activeGroupName","setActiveGroupName","Header","onDetailsClicked","onCloseClicked","layoutProps","layoutName","LayoutElements","history","useHistory","useParams","setShow","keysA","keysB","handleClose","onHide","onExited","handleSubmit","input","prop","attr","ReactForm","onSubmit","restProps","Form","predefinedMessages","predefinedBinary","messages","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","repsPaused","_setRepsPaused","messagesRef","pausedRef","repsPausedRef","addMessages","startsWith","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","Footer","togglePause","toggleRepsPause","i2","controlId","defaultValue","inputProps","Group","as","Label","column","Control","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","allSettings","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","rel","Wifi","ssid","pass","ip","mask","gw","Routes","isInitialized","path","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","deleteConfirmed","setDeleteConfirmed","popover","Popover","dangerouslySetInnerHTML","__html","editServer","updateAction","addAction","closeAction","InputGroup","Text","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","setServerIndex","AppFooter","AppDialog","footer","dialogLoaded","setDialogLoaded","onHideHandler","PowerDialogLink","navLink","buttons","UpdatesNotificationDialog","onClosed","zespFirmwareUpdate","zespFirmwareCurrentVersion","SettingsService","zespFirmwareUpdateVersion","updateData","firmwareSkipUpdate","UpdatesNotification","zespCurrentVersion","showDialog","setShowDialog","AppHeader","Content","serverIndex","serversString","selectedServer","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","zespReducer","devicesReducer","spinnerReducer","settingsReducer","zespFirmwareReducer","ReactDOM","render","StrictMode","getElementById","languages","namespaces","i18n","use","initReactI18next","init","fallbackLng","lng","resources","lang","ns","loadResources","defaultNS"],"mappings":"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","file":"static/js/main.47e99c38.chunk.js","sourcesContent":["window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 98,\n\t\"./config.js\": 98,\n\t\"./locales/en/common\": 124,\n\t\"./locales/en/common.json\": 124,\n\t\"./locales/en/nav\": 125,\n\t\"./locales/en/nav.json\": 125,\n\t\"./locales/en/pages/devices\": 126,\n\t\"./locales/en/pages/devices.json\": 126,\n\t\"./locales/en/pages/setup-mqtt\": 127,\n\t\"./locales/en/pages/setup-mqtt.json\": 127,\n\t\"./locales/en/pages/setup-wifi\": 128,\n\t\"./locales/en/pages/setup-wifi.json\": 128,\n\t\"./locales/en/pages/welcome\": 129,\n\t\"./locales/en/pages/welcome.json\": 129\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","var map = {\n\t\"./root\": 155,\n\t\"./root.json\": 155\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 325;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\ninterface IState {\n  spinnerShow: boolean,\n  spinnerMessage: string,\n}\n\nconst initialState: IState = {\n  spinnerShow: false,\n  spinnerMessage: \"Loading...\",\n}\n\nexport const spinnerSlice = createSlice({\n  name: \"spinner\",\n  initialState,\n  reducers: {\n    setSpinnerShow: (state, action: PayloadAction<boolean>): void => {\n      state.spinnerShow = action.payload;\n      if (state.spinnerShow) state.spinnerMessage = initialState.spinnerMessage;\n    },\n\n    setSpinner: (state, action: PayloadAction<{ show: boolean, message: string | undefined }>): void => {\n      state.spinnerShow = action.payload.show;\n      state.spinnerMessage = action.payload.message || initialState.spinnerMessage;\n    }\n  }\n});\n\nconst getters = {\n  getSpinner: (state: RootState) => state.spinner,\n}\n\nexport const {getSpinner} = getters;\nexport const {setSpinnerShow, setSpinner} = spinnerSlice.actions;\nexport default spinnerSlice.reducer;\n","import React from \"react\";\nimport \"./styles.scss\"\nimport {Modal, Spinner} from \"react-bootstrap\";\nimport {useSelector} from \"react-redux\";\nimport {getSpinner} from \"../../store/slices/spinnerSlice\";\n\nconst LoadingSpinner = () => {\n  const {spinnerShow, spinnerMessage} = useSelector(getSpinner);\n\n  return (\n    <Modal show={spinnerShow} centered size=\"sm\" backdrop={true}>\n      <Modal.Body>\n        <div className=\"d-flex align-items-center\">\n          <Spinner animation=\"border\" variant=\"primary\" className=\"me-3\"/>\n          <div>{spinnerMessage}</div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default LoadingSpinner;","import React, {HTMLAttributes, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: React.FC<HTMLAttributes<HTMLDivElement>> = (props): React.ReactElement => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={`${className} ${props.className}`}>\n      {props.children}\n    </div>\n  )\n}","import React, {useEffect, useState} from \"react\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nconst defaultImage = \"/device-images/default.png\";\n\nexport default (props: IProps) => {\n  const [image, setImage] = useState(props.device.image);\n\n  useEffect(() => {\n    const testImage = new Image();\n    testImage.onerror = () => {\n      setImage(defaultImage);\n    }\n    testImage.src = image;\n  }, []);\n\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${image})`}}/>);\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport {Col} from \"react-bootstrap\";\n\ninterface IProps {\n  device: DeviceListItem\n}\n\nexport default (props: IProps) => {\n  const {device} = props;\n  const detailsLink = `/devices/${device.ieee}`;\n\n  return (\n    <Col xs={12} sm={6} lg={4} xxl={3} className=\"p-1\">\n      <NavLink className=\"item p-3 border rounded d-block\" to={detailsLink}>\n        <div className=\"d-flex\">\n          <div><ItemImage device={props.device}/></div>\n          <div className=\"ps-2\">\n            <div className=\"title\">{device.title}</div>\n            <div className=\"ieee text-muted small\">{device.ieee}</div>\n            {device.tags.length > 0 && (\n              <div className=\"badges small\">\n                {device.tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n              </div>\n            )}\n          </div>\n        </div>\n      </NavLink>\n    </Col>\n  );\n}\n","import {DataControlSettings, DataLayoutItemsGroup} from \"../models/DataControlSettings\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout && device.customLayout.length > 0\n      ? device.customLayout\n      : buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string, deviceType: string): ReportKeyInfo | undefined => {\n    if (!deviceType || deviceType === \"ZED\" || deviceType === \"ZR\") {\n      if (reportKey?.length !== 10) // 01 0000 0000\n      {\n        console.warn(`Unknown format of Zigbee report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: reportKey.substr(0, 2),\n        clusterId: reportKey.substr(2, 4),\n        attributeId: reportKey.substr(6),\n      }\n    }\n\n    if (deviceType === \"BED\") {\n      if (reportKey?.length < 1) // a-ny-thing\n      {\n        console.warn(`Unknown format of BLE report key: '${reportKey}'`);\n        return undefined;\n      }\n\n      return {\n        endpoint: \"\",\n        clusterId: reportKey,\n        attributeId: \"\",\n      }\n    }\n\n    console.warn(`Unknown device type '${deviceType}'`);\n    return undefined;\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataControlSettings[] => {\n  const getLayoutItem = (reportKey: string): DataControlSettings | undefined => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey, device.zespInfo.DevType);\n    if (!reportKeyInfo) {\n      console.warn(`Cannot get report key details for '${device.zespInfo.IEEE}' device`);\n      return undefined;\n    }\n\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataControlSettings;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey, device.zespInfo.DevType)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key)).filter(x => x !== undefined) as DataControlSettings[];\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string, deviceType: string): DataControlSettings | undefined => {\n  // return undefined;\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey, deviceType);\n  if (!reportKeyInfo) return undefined;\n\n  const roleName = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: roleName} as DataControlSettings // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${roleName}`]\n    || dataCluster.attributes[roleName]\n    || {id: roleName} as DataControlSettings; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {RootState} from \"../configure\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespReportUpdates} from \"../../services/zesp/service-root\";\n\nexport interface DevicesState {\n  devices: DeviceInfo[]\n}\n\nconst initialState: DevicesState = {\n  devices: []\n}\n\nexport const devicesSlice = createSlice({\n  name: \"devices\",\n  initialState,\n  reducers: {\n    setDevices: (state, action: PayloadAction<DeviceInfo[]>): void => {\n      state.devices = action.payload;\n    },\n    updateReport: (state, action: PayloadAction<{ ieee: string, reportKey: string, update: Partial<ZespReportInfo> }>): void => {\n      const device = state.devices.find(x => x.zespInfo.IEEE === action.payload.ieee);\n      if (!device) {\n        console.warn(`Device '${action.payload.ieee}' not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report[action.payload.reportKey] = {...device.zespInfo.Report[action.payload.reportKey], ...action.payload.update};\n      // console.debug(`Device '${action.payload.ieee}' with report '${action.payload.reportKey}' has been updated`);\n    },\n    updateRootReports: (state, action: PayloadAction<ZespReportUpdates>) => {\n      const device = state.devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n      if (!device) {\n        console.warn(`Root device not found to update`);\n        return;\n      }\n\n      device.zespInfo.Report = {...device.zespInfo.Report, ...action.payload} as { [reportId: string]: ZespReportInfo };\n    }\n  }\n})\n\nconst getters = {\n  getDeviceByIee: (state: RootState, ieee: string): DeviceInfo | undefined => state.devices.devices.find(x => x.zespInfo.IEEE === ieee),\n  getDevicesByModelId: (state: RootState, modelId: string): DeviceInfo[] => state.devices.devices.filter(x => x.zespInfo.ModelId === modelId),\n  getAllDevices: (state: RootState): DeviceInfo[] => state.devices.devices || [] as DeviceInfo[],\n}\n\nexport const {getDevicesByModelId, getDeviceByIee, getAllDevices} = getters;\nexport const {setDevices, updateReport, updateRootReports} = devicesSlice.actions;\nexport default devicesSlice.reducer;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\n\nexport type zespConnectionStatus = \"disconnected\" | \"connected\" | \"connecting\" | \"reconnect\" | \"closed\";\n\nexport interface ZespState {\n  connectionStatus: zespConnectionStatus,\n  initialized: boolean,\n}\n\nconst initialState: ZespState = {\n  connectionStatus: \"disconnected\",\n  initialized: false,\n}\n\nexport const zespSlice = createSlice({\n  name: \"zesp\",\n  initialState,\n  reducers: {\n    setConnectionStatus: (state, action: PayloadAction<zespConnectionStatus>) => {\n      state.connectionStatus = action.payload;\n    },\n\n    setInitialized: (state, action: PayloadAction<boolean>) => {\n      state.initialized = action.payload;\n    },\n  }\n})\n\nconst getters = {\n  getStatus: (state: RootState) => state.zesp.connectionStatus,\n  getInitialized: (state: RootState) => state.zesp.initialized,\n}\n\nexport const {getStatus, getInitialized,} = getters;\nexport const {setConnectionStatus, setInitialized,} = zespSlice.actions;\nexport default zespSlice.reducer;","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataControlSettings>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataControlSettings>(props: IDeviceControlProps<DataControlSettings>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    zespSend({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    zespSend({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  // const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    zespSend({data: data});\n    // setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useContext, useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  // const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    zespSend({data: command});\n    // setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    zespSend({data: command});\n    // setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler} width=\"270px\"/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(\n    () => setClassName(props.classNameFrom),\n    [props.children?.toString()]);\n\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {DeviceControls} from \"../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"./index\";\nimport {HighlightOnUpdate} from \"../shared/transition/HighlightOnUpdate\";\nimport {Row} from \"react-bootstrap\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataControlSettings>) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<NoReport id={props.config.id} reportData={reportData} configData={configData}/>)\n\n  const label = report.label || props.config.label || props.config.id || \"Unknown data\";\n  const value =\n    (report.parsed && report.parsed.toString().trim() === report.val.toString().trim() && report.parsed)\n    || (report.parsed && report.val && `${report.parsed} (${report.val})`)\n    || report.val\n    || \"No data\";\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 && JSON.parse(roleParts[1]);\n  const units = (roleSettings && roleSettings[\"unit_of_measurement\"]) || \"\";\n\n  const showDetailsClicked = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    setShowDetails(!showDetails);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value} {units}</HighlightOnUpdate>\n        <a onClick={showDetailsClicked} href=\"#\" className=\"value-info\" title=\"Unrecognized data, click to show details\">\n          <i className=\"bi bi-info-circle-fill ms-2 text-secondary\"/>\n        </a>\n      </DeviceControlCol2>\n      <div className={`alert alert-info flex-column col-12 ${showDetails ? \"\" : \"d-none\"}`}>\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </Row>\n  )\n\n  // return \n}\n\nconst NoReport = (props: { id: string, configData: string, reportData: string }) => (\n  <Row>\n    <DeviceControlCol1>{props.id}</DeviceControlCol1>\n    <DeviceControlCol2>\n      <div className=\"alert alert-info\">\n        <div>{props.configData}</div>\n        {props.reportData && (<div className=\"mt-2\">{props.reportData}</div>)}\n      </div>\n    </DeviceControlCol2>\n  </Row>\n)\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext, useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const {zespSend} = useContext(ZespContext);\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.parsed ? Number(report.parsed) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    sendValueToZesp(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    sendValueToZesp(result);\n  }\n\n  const sendValueToZesp = (value: number) => {\n    const data = formatCommand(props.config.arguments.command, value, props);\n    zespSend({data: data});\n  }\n\n  const label = report?.label || props.config.label || \"Level\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number, props: IDeviceControlProps<LayoutSettingsLevel>): string => command\n  .replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useContext, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataControlSettings>) => {\n  const {zespSend} = useContext(ZespContext);\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\",\n    \"http://listen.181fm.com/181-thebox_128k.mp3?\",\n    \"http://stream.live.vc.bbcmedia.co.uk/bbc_radio_one\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    // DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    setPlay(\"OFF\");\n    // DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    // DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) zespSend({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    // DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) zespSend({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataControlSettings>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = props.config.zespRoleSettings[\"unit_of_measurement\"] || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useContext} from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOffToggle} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nexport const OnOffToggle = (props: IDeviceControlProps<LayoutSettingsOnOffToggle>) => {\n  const {zespSend} = useContext(ZespContext);\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    const command = props.config.arguments.commandOn.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const offHandler = () => {\n    const command = props.config.arguments.commandOff.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  };\n\n  const toggleHandler = () => {\n    const command = props.config.arguments.commandToggle.replace(\"{device}\", props.deviceInfo.zespInfo.Device)\n    zespSend({data: command, isBinary: true});\n  }\n\n  const label = report?.label || props.config.label || \"Power\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{label}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.parsed.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant=\"secondary\" onClick={toggleHandler}>Toggle</Button>\n          <Button variant={report?.parsed.toString() === \"0\" ? \"primary\" : \"secondary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {Fragment, FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsOnOffToggle, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./unknown\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataControlSettings} from \"../models/DataControlSettings\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\nimport {OnOffToggle} from \"./controls/OnOffToggle\";\n\ntype ElementTypes = \"regular\" | \"skip\" | \"unknown\";\n\ninterface IResult {\n  element: JSX.Element,\n  type: ElementTypes\n}\n\nexport const getControlForDevice = (config: DataControlSettings, deviceInfo: DeviceInfo): IResult => {\n  const controlProps: IDeviceControlProps<DataControlSettings> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return {type: \"regular\", element: (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>)};\n    case \"level_root\" :\n      return {type: \"regular\", element: (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n    case \"rgb_root\" :\n      return {type: \"regular\", element: (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>)};\n    case \"player_src_root\" :\n      return {type: \"regular\", element: (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"player_control_root\":\n      return {type: \"skip\", element: (<Fragment/>)};\n\n    case \"level_control\" :\n      return {type: \"regular\", element: (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>)};\n\n    case \"illuminance_sensor\" :\n      return {type: \"regular\", element: (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>)};\n    case \"binary_sensor\" :\n      return {type: \"regular\", element: (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n    case \"sensor\" :\n      return {type: \"regular\", element: (<ValueSensor {...controlProps} config={controlProps.config as DataControlSettings}/>)};\n\n    case \"on_off_toggle\":\n      return {type: \"regular\", element: (<OnOffToggle {...controlProps} config={controlProps.config as LayoutSettingsOnOffToggle}/>)};\n\n    default:\n      return {type: \"unknown\", element: (<UnknownControl {...controlProps}/>)}\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n}","import {getControlForDevice} from \"../index\";\nimport React, {FunctionComponent, useState} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\n\nexport const DefaultLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const controls: React.ReactElement[] = [];\n  const unknown: React.ReactElement[] = [];\n\n  props.settings.forEach(settings => {\n    const control = getControlForDevice(settings, props.device);\n    if (control.type === \"skip\") return;\n\n    if (control.type === \"unknown\") unknown.push(control.element);\n    else controls.push(control.element);\n  });\n\n  // show by default if now identified controls found\n  const [showUnknown, setShowUnknown] = useState(controls.length === 0);\n\n  const onToggleUnknownHandler = () => {\n    setShowUnknown(!showUnknown);\n  }\n\n  return (\n    <div className=\"default-layout\">\n      {controls.length > 0 && (\n        <div className=\"elements\">\n          {controls.map((element, i) => {\n            return (<div key={i} className=\"device-control-group\">{element}</div>);\n          })}\n        </div>\n      )}\n\n      {unknown.length > 0 && (\n        <>\n          <button onClick={onToggleUnknownHandler} className=\"show-unknown-btn btn btn-outline-info\">Unknown reports ({unknown.length})</button>\n          <div className={`elements unknown ${showUnknown ? \"show\" : \"hide\"}`}>\n            {unknown.map((element, i) => {\n              return (<div key={i} className=\"device-control-group\">{element}</div>);\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}","import React, {FunctionComponent} from \"react\";\nimport \"./styles.scss\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../../services/zesp/models/ZespReportInfo\";\nimport {IDeviceClassSettings} from \"./IDeviceClassSettings\";\n\nexport const reportKeysValue = [\"0100060000\", \"0104060000\"];\nexport const reportKeysBattery = [\"010000FF02\"];\n\nconst deviceClasses: { [deviceClass: string]: IDeviceClassSettings } = require(\"./device-classes.json\");\nconst batteryWarningLevelPercents = 50;\nconst batteryValuesRange = [2.7, 3.1]; // battery values to calculate percents from 0 to 100%\n\nexport const BinarySensorLayout: FunctionComponent<LayoutProps> = (props: LayoutProps) => {\n  const value = getValueSettings(props);\n  const battery = getBatterySettings(props);\n\n  return (\n    <div className=\"row custom-binary-layout\">\n      <div className=\"col col-5 left\">\n        <i className={`bi ${value.iconClassName}`}/>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Current status:</div>\n          <div className={value.valueClassName}>{value.valueTitle}</div>\n        </div>\n\n        <div className=\"text-center mt-3 w-100\">\n          <div>Battery Level: <span className={`status ${battery.stateClassName}`}>{battery.valueTitle}</span></div>\n          <div className=\"progress mt-3\">\n            <div\n              className={`progress-bar ${battery.stateClassName}`}\n              role=\"progressbar\"\n              style={{width: `${battery.valuePercents}%`}}/>\n          </div>\n          <div className=\"battery-icon\">\n            <i className={`bi bi-battery-half ${battery.stateClassName}`}/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n// region getValueSettings \nconst getValueSettings = (props: LayoutProps): {\n  iconClassName: string,\n  valueClassName: string,\n  valueTitle: string\n} => {\n  const onOffReport = getReport(reportKeysValue, props);\n  if (!onOffReport) return {\n    iconClassName: deviceClasses[\"default\"].icons!.onFalse,\n    valueClassName: \"status-unknown\",\n    valueTitle: \"Unknown\"\n  }\n\n  // try to get status of binary sensor\n  const statusValue = onOffReport.parsed || onOffReport.val;\n  const roleParts = onOffReport.role && onOffReport.role.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const status: boolean = roleSettings && roleSettings[\"payload_on\"]\n    ? statusValue === roleSettings[\"payload_on\"] // compare with role settings\n    : (statusValue === \"1\" || statusValue === \"01\") // compare with default expected\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const iconClassName = status ? `${valueSettings.icons!.onTrue} ${valueSettings.styles!.onTrue}` : `${valueSettings.icons!.onFalse} ${valueSettings.styles!.onFalse}`;\n  const valueClassName = status ? `status ${valueSettings.styles!.onTrue}` : `status ${valueSettings.styles!.onFalse}`;\n  const valueTitle = status ? valueSettings.titles.onTrue : valueSettings.titles.onFalse;\n\n  return {iconClassName, valueClassName, valueTitle};\n}\n// endregion\n\n// region getBatterySettings\nconst getBatterySettings = (props: LayoutProps): {\n  stateClassName: string,\n  valueTitle: string,\n  valuePercents: number\n} => {\n  const report = getReport(reportKeysBattery, props);\n\n  // return default for unknown\n  if (!report) return {stateClassName: \"??\", valueTitle: \"-\", valuePercents: 0};\n\n  const roleParts = report.role?.split(\"&\");\n  const roleSettings = roleParts && roleParts.length > 1 ? JSON.parse(roleParts[1]) : undefined;\n  const units = roleSettings && roleSettings[\"unit_of_measurement\"] || \"\";\n  const valueString = Number(report.parsed || report.val) || undefined;\n  let valuePercents: number | undefined = undefined;\n\n  // get percents\n  if (!valueString) valuePercents = undefined\n  else if (units === \"%\") valuePercents = Number(valueString);\n  else {\n    let valueNumber = Number(valueString) || undefined;\n    if (valueNumber) {\n      valueNumber = Math.min(batteryValuesRange[1], Math.max(batteryValuesRange[0], valueNumber));\n      valuePercents = Math.round((1 - (batteryValuesRange[1] - valueNumber) / (batteryValuesRange[1] - batteryValuesRange[0])) * 100);\n    }\n  }\n\n  // views configuration\n  const deviceClass: string = roleSettings && roleSettings[\"device_class\"] || \"default\";\n  const valueSettings: IDeviceClassSettings = {...deviceClasses[\"default\"], ...deviceClasses[deviceClass]};\n\n  const valueTitle = `${valueString || \"??\"} ${units}`;\n  const stateClassName = !valuePercents\n    ? \"status-unknown\"\n    : valuePercents <= batteryWarningLevelPercents\n      ? valueSettings.styles!.onFalse\n      : valueSettings.styles!.onTrue;\n\n  return {\n    stateClassName,\n    valuePercents: valuePercents || 0,\n    valueTitle\n  };\n}\n// endregion\n\nconst getReport = (oneOfKeys: string[], props: LayoutProps): ZespReportInfo | undefined => {\n  for (const key of oneOfKeys) {\n    const report = props.device.zespInfo.Report[key];\n    if (report) return report;\n  }\n}","import {DefaultLayout} from \"./DefaultLayout\";\nimport {BinarySensorLayout} from \"./binary-sensor\";\nimport {FunctionComponent} from \"react\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {ZespDeviceInfo} from \"../../services/zesp/models/ZespDeviceInfo\";\nimport AutoDetectionBinarySensor from \"./binary-sensor/auto\";\nimport AutoDetectionBleBeacon from \"./ble-beacon/auto\";\nimport BleBeaconLayout from \"./ble-beacon\";\n\n// list of available layouts with names\nexport const layoutsAvailable = {\n  default: DefaultLayout,\n  binarySensorLayout: BinarySensorLayout,\n  bleBeacon: BleBeaconLayout,\n} as { [name: string]: FunctionComponent<LayoutProps> };\n\n// list of layout auto detection functions, which return layout name\nconst autoDetectors: { (zespInfo: ZespDeviceInfo): string | undefined }[] = [\n  AutoDetectionBinarySensor,\n  AutoDetectionBleBeacon,\n];\n\n// region help methods\nexport const layoutTools = {\n  autoDetect: (zespInfo: ZespDeviceInfo): string | undefined => {\n    for (const autoDetector of autoDetectors) {\n      const layout = autoDetector(zespInfo);\n      if (layout) return layout;\n    }\n\n    return undefined;\n  },\n\n  roleDeviceClassIs: (expectedDeviceClasses: string[], report: ZespReportInfo): boolean => {\n    const roleParts = report.role && report.role.split(\"&\");\n    if (roleParts.length < 2) return false;\n\n    const roleSettings = JSON.parse(roleParts[1]);\n    const reportDeviceClass = roleSettings[\"device_class\"];\n    if (!reportDeviceClass) return false;\n\n    return expectedDeviceClasses.indexOf(reportDeviceClass) >= 0;\n  },\n  getReport: (oneOfKeys: string[], zespInfo: ZespDeviceInfo): ZespReportInfo | undefined => {\n    for (const key of oneOfKeys) {\n      const report = zespInfo.Report[key];\n      if (report) return report;\n    }\n  }\n}\n// endregion","import React, {FunctionComponent, useEffect, useState} from \"react\";\nimport {LayoutProps} from \"../../../models/LayoutProps\";\nimport {HighlightOnUpdate} from \"../../../shared/transition/HighlightOnUpdate\";\n\nconst lastUpdateTresholdSeconds = 60 * 5;\n\nexport const BleBeacon: FunctionComponent<LayoutProps> = (props) => {\n  const isInRange = props.device.zespInfo.Report[\"ble_InRange\"]?.parsed === \"1\";\n  const signalLevel = props.device.zespInfo.Report[\"ble_signal_level\"]?.parsed;\n\n  const lastUpdateMs = Math.max(props.device.zespInfo.Report[\"ble_InRange\"].time, props.device.zespInfo.Report[\"ble_signal_level\"].time);\n  const lastDate = new Date(lastUpdateMs);\n  const calculateRelative = () => Math.round((Date.now() - lastUpdateMs) / 1000);\n  const [relative, setRelative] = useState(calculateRelative());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setRelative(calculateRelative());\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    }\n  }, [lastUpdateMs]);\n\n  const lastUpdateStyle = relative < lastUpdateTresholdSeconds\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  const rangeStyle = isInRange\n    ? \"status-primary\"\n    : \"status-unknown\";\n\n  return (\n    <div className=\"row custom-layout\">\n      <div className=\"col col-5 left flex-column position-relative\">\n        <i className={`bi bi-wifi ${rangeStyle}`}/>\n        <div className={`icon-description ${rangeStyle}`}>{isInRange ? \"In range\" : \"Out of range\"}</div>\n      </div>\n      <div className=\"col right flex-column justify-content-center\">\n        <div className=\"text-center\">\n          <div>Signal level:</div>\n          <div className={`status ${rangeStyle}`}><HighlightOnUpdate>{signalLevel}</HighlightOnUpdate></div>\n        </div>\n        <div className=\"text-center mt-3\">\n          <div>Last update:</div>\n          <div className={`status ${lastUpdateStyle}`}>{lastDate.toLocaleDateString()} {lastDate.toLocaleTimeString()}</div>\n          <div className=\"small text-muted opacity-50\">{\n            relative < 60 ? `${relative} seconds ago` :\n              relative / 60 < 60 ? `${Math.round(relative / 60)} minutes ago` :\n                `${Math.round(relative / 60 / 60)} hours ago`\n          }</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BleBeacon;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {reportKeysBattery as binarySensorBatteryKeys, reportKeysValue as binarySensorValueKeys} from \"./index\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBinarySensor = (zespInfo: ZespDeviceInfo): string | undefined => {\n  const valueReportKey = layoutTools.getReport(binarySensorValueKeys, zespInfo);\n  const batteryReportKey = layoutTools.getReport(binarySensorBatteryKeys, zespInfo);\n\n  if (!valueReportKey || !batteryReportKey) return undefined; // these two guys required\n  if (!layoutTools.roleDeviceClassIs([\"battery\"], batteryReportKey)) return undefined;\n  if (!layoutTools.roleDeviceClassIs([\"door\", \"motion\"], valueReportKey)) return undefined;\n\n  console.debug(`Auto detected layout 'binarySensorLayout' for '${zespInfo.IEEE}'`);\n  return \"binarySensorLayout\";\n}\n\nexport default AutoDetectionBinarySensor;","import {ZespDeviceInfo} from \"../../../services/zesp/models/ZespDeviceInfo\";\nimport {layoutTools} from \"../index\";\n\nexport const AutoDetectionBleBeacon = (zespInfo: ZespDeviceInfo): string | undefined => {\n  if (zespInfo.DevType !== \"BED\" || zespInfo.class !== \"beacon\") return undefined;\n\n  const rangeReport = layoutTools.getReport([\"ble_InRange\"], zespInfo);\n  const signalReport = layoutTools.getReport([\"ble_signal_level\"], zespInfo);\n  if (!rangeReport || !signalReport) return undefined;\n\n  return \"bleBeacon\";\n}\n\nexport default AutoDetectionBleBeacon;","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataControlSettings} from \"../../models/DataControlSettings\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {layoutTools} from \"../../device-controls/layouts\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\ninterface IGetDevicesResponse {\n  devices: DeviceInfo[],\n  zespVersion: string | undefined,\n}\n\nconst ServiceDevices = {\n  getDevicesListAsync: (zesp: IZespConnector) => new Promise<IGetDevicesResponse>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\")\n    })\n      .then(event => {\n        const result = onDevicesListReceived(event);\n        resolve({\n          devices: result,\n          zespVersion: event.dataParts.length > 1 ? event.dataParts[1] : undefined,\n        } as IGetDevicesResponse);\n      })\n      .catch(reason => reject(reason));\n  })\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent): DeviceInfo[] => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n\n  return zespDevices.map(buildDeviceInfo);\n}\n\nexport const getDeviceModelSettings = (modelId: string): { settings: DataDeviceSettings, controls: DataControlSettings[] } => {\n  const settings: DataDeviceSettings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === modelId) >= 0) || {} as DataDeviceSettings;\n  const controls = settings?.controls && require(`../../data/controls/${settings.controls}`) as DataControlSettings[] || [];\n\n  return {settings, controls};\n}\n\nconst buildDeviceInfo = (zespInfo: ZespDeviceInfo): DeviceInfo => {\n  const {settings, controls} = getDeviceModelSettings(zespInfo.ModelId);\n  controls.forEach(control => {\n    if (!control.reportKey) return;\n    const reportKey = control.reportKey.endpoint + control.reportKey.clusterId + control.reportKey.attributeId;\n    if (!zespInfo.Report[reportKey]) zespInfo.Report[reportKey] = {} as ZespReportInfo;\n  });\n\n  // try to autodetect layout by reports\n  const layout = settings.layout || layoutTools.autoDetect(zespInfo);\n\n  return {\n    zespInfo: zespInfo,\n    settings: {...settings, ...{layout: layout}},\n    customLayout: controls\n  };\n}\n\nexport default ServiceDevices;\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\n\ninterface IState {\n  zespFirmwareUpdateInfo: DictionaryStrings | undefined,\n  zespFirmwareInstalledVersion: string,\n  zespSkipVersion: string | undefined,\n}\n\nconst initialState: IState = {\n  zespFirmwareUpdateInfo: undefined,\n  zespFirmwareInstalledVersion: \"-\",\n  zespSkipVersion: undefined,\n}\n\nexport const zespFirmwareSlice = createSlice({\n  name: \"zespFirmwareUpdate\",\n  initialState: initialState,\n  reducers: {\n    setZespFirmwareUpdate: (state, action: PayloadAction<DictionaryStrings>): void => {\n      state.zespFirmwareUpdateInfo = action.payload;\n    },\n\n    setZespFirmwareInstalledVersion: (state, action: PayloadAction<string>): void => {\n      state.zespFirmwareInstalledVersion = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespFirmwareUpdateInfo: (state: RootState) => state.zespFirmware.zespFirmwareUpdateInfo,\n  getZespFirmwareInstalledVersion: (state: RootState) => state.zespFirmware.zespFirmwareInstalledVersion,\n}\n\nexport const {getZespFirmwareUpdateInfo, getZespFirmwareInstalledVersion} = getters;\nexport const {setZespFirmwareUpdate, setZespFirmwareInstalledVersion} = zespFirmwareSlice.actions;\nexport default zespFirmwareSlice.reducer;","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespRootData} from \"./models/ZespRootData\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {getDeviceModelSettings} from \"./service-devices\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getRootDataAsync: (zesp: IZespConnector) => new Promise<ZespReportUpdates>((resolve, reject) => {\n    zesp.zespRequestAsync({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n    })\n      .then(event => {\n        const result = extractReports(event);\n\n        if (result) resolve(result);\n        else reject(\"Cannot update root device information\");\n      })\n      .catch(reason => reject(reason));\n  }),\n}\n\nexport type ZespReportUpdates = {\n  [key: string]: Partial<ZespReportInfo>\n}\n\nconst extractReports = (event: ZespDataEvent): ZespReportUpdates => {\n  const {controls} = getDeviceModelSettings(\"ZESP_Root\");\n  if (controls.length == 0) return {};\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const result: ZespReportUpdates = {};\n\n  const reportOnOff = controls.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) result[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId] = {val: data.on.toString()};\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = controls.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) result[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId] = {val: data.level.toString()};\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = controls.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) result[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId] = {val: `${data.B}:${data.G}:${data.R}`};\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = controls.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) result[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId] = {val: data.sound.volume.toString()};\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = controls.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) result[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId] = {val: data.sound.current_path?.toString()};\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = controls.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) result[playControl.endpoint + playControl.clusterId + playControl.attributeId] = {val: data.sound.play.toString()};\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  return result;\n}\n\n","import {ZespSettings} from \"./models/ZespSettings\";\nimport {JsonZespResponseValidator, TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport const useZespSettings = ({zespRequestAsync, zespSend}: IZespConnector) => {\n  const getAsync = (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    zespRequestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  })\n\n  const setAsync = (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      zespRequestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  }\n\n  const getCustomAsync = function getCustom<T>(name: string): Promise<T | undefined> {\n    return zespRequestAsync({\n      data: `LoadJson|/${name}.json`,\n      responseValidator: JsonZespResponseValidator(name)\n    })\n      .then(event => {\n        if (event.dataParts.length < 1) throw new Error(\"Unexpected JSON file response from ZESP\");\n        const jsonStr = event.dataParts[1];\n\n        if (!jsonStr || jsonStr.length === 0 || jsonStr.trim().toLocaleLowerCase() === \"null\") return undefined;\n        return JSON.parse(jsonStr) as T;\n      })\n  }\n\n  const setCustom = function setCustom<T>(name: string, data: T): void {\n    const fileName = `/${name}.json`;\n    const dataStr = JSON.stringify(data);\n\n    zespSend({\n      data: `SaveJson|${fileName}|${dataStr}`\n    });\n  }\n\n  const setUiSettings = (data: UiSettings): void => {\n    setCustom(\"zesp_ui\", data);\n  }\n\n  return {\n    getAsync,\n    setAsync,\n    getCustomAsync,\n    setCustom,\n    setUiSettings,\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n\nexport default useZespSettings;","import {FirmwareInfo} from \"../../models/FirmwareInfo\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  getFirmwareInfoAsync: (zesp: IZespConnector): Promise<FirmwareInfo> => zesp\n    .zespRequestAsync({\n      data: \"loadfwlist\",\n      responseValidator: TypedZespResponseValidator(\"rsploadfwlist\"),\n      timeoutSeconds: 15,\n    }).then(event => {\n      if (event.dataParts.length < 2) throw Error(\"Unexpected zesp firmware information response\");\n\n      const updates = JSON.parse(event.dataParts[0]) as DictionaryStrings[];\n      const currentVersion = event.dataParts[1];\n      if (!updates || updates.length === 0) throw Error(\"Unexpected zesp firmware udpates response\");\n      if (!currentVersion || currentVersion.length === 0) throw Error(\"Unexpected zesp current version response\");\n\n      const result: FirmwareInfo = {\n        currentVersion,\n        updatesInformation: updates[0]\n      };\n\n      return result;\n    }),\n}\n","import {DictionaryStrings} from \"./DictionaryStrings\";\n\nexport type UiSettings = {\n  firmwareUpdate: DictionaryStrings | undefined,\n  firmwareLastCheck: number | undefined,\n  firmwareSkipUpdate: string | undefined,\n}\n\nexport const UiDefaultSettings: UiSettings = {} as UiSettings;","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../configure\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {UiSettings} from \"../../models/UiSettings\";\n\ninterface IState {\n  zespSettings: ZespSettings | undefined,\n  uiSettings: UiSettings | undefined,\n}\n\nconst initialState: IState = {\n  zespSettings: undefined,\n  uiSettings: undefined,\n}\n\nexport const settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setZespSettings: (state, action: PayloadAction<ZespSettings>): void => {\n      state.zespSettings = action.payload;\n    },\n\n    setUiSettings: (state, action: PayloadAction<UiSettings>): void => {\n      state.uiSettings = action.payload;\n    },\n  }\n});\n\nconst getters = {\n  getZespSettings: (state: RootState) => state.settings.zespSettings,\n  getUiSettings: (state: RootState) => state.settings.uiSettings,\n}\n\nexport const {getZespSettings, getUiSettings} = getters;\nexport const {setZespSettings, setUiSettings} = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\nimport {IZespConnector} from \"./common/service-connector.interfaces\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, onReport))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, onReport: (ieee: string, reportKey: string, updates: Partial<ZespReportInfo>) => void): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const ieee = event.dataParts[1];\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportKey = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = {\n    parsed: data.parsed,\n    val: data.Data,\n    time: data.time,\n  } as Partial<ZespReportInfo>\n\n  onReport(ieee, reportKey, report);\n}","import {Dispatch} from \"redux\";\nimport {setConnectionStatus} from \"../../store/slices/zespSlice\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport ServiceDevices from \"../../services/zesp/service-devices\";\nimport {setDevices, updateReport, updateRootReports} from \"../../store/slices/devicesSlice\";\nimport {setZespFirmwareInstalledVersion, setZespFirmwareUpdate} from \"../../store/slices/zespFirmwareSlice\";\nimport ServiceRoot from \"../../services/zesp/service-root\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport ServiceFirmware from \"../../services/zesp/service-firmware\";\nimport {UiDefaultSettings, UiSettings} from \"../../models/UiSettings\";\nimport {setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {useRef} from \"react\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport ServiceUpdates from \"../../services/zesp/service-report-updates\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\n\nexport const useZespAgent = (dispatch: Dispatch, zesp: IZespConnector) => {\n  const uiSettingsRef = useRef<UiSettings>({} as UiSettings);\n  const firmwareUpdateMinTimout = 1000 * 60 * 60 * 24;\n\n  // init\n  const connectAsync = (server: IServerInfo): Promise<void> => zesp\n    .connectAsync(server, (status) => dispatch(setConnectionStatus(status)), false)\n\n  // read devices list\n  const getDevices = (): Promise<void> => ServiceDevices.getDevicesListAsync(zesp)\n    .then(result => {\n      dispatch(setDevices(result.devices));\n      if (result.zespVersion) dispatch(setZespFirmwareInstalledVersion(result.zespVersion));\n    });\n\n  // read root info\n  const getRoot = (): Promise<void> => ServiceRoot\n    .getRootDataAsync(zesp)\n    .then(reports => {\n      dispatch(updateRootReports(reports))\n      console.debug(\"Root device reports updated\");\n    });\n\n  // read ui settings\n  const readUiSettings = (): Promise<void> => useZespSettings(zesp)\n    .getCustomAsync<UiSettings>(\"zesp_ui\")\n    .then(settings => {\n      const result = settings || UiDefaultSettings;\n      dispatch(setUiSettings(result))\n      uiSettingsRef.current = result;\n    })\n\n  // private firmware updates downloading\n  const _getFirmware = (): void => {\n    ServiceFirmware\n      .getFirmwareInfoAsync(zesp)\n      .then(firmwareInfo => {\n        dispatch(setZespFirmwareInstalledVersion(firmwareInfo.currentVersion));\n        dispatch(setZespFirmwareUpdate(firmwareInfo.updatesInformation));\n\n        uiSettingsRef.current = {...uiSettingsRef.current, ...{firmwareUpdate: firmwareInfo.updatesInformation, firmwareLastCheck: Date.now()}};\n        useZespSettings(zesp).setCustom(\"zesp_ui\", uiSettingsRef.current);\n\n        dispatch(setUiSettings(uiSettingsRef.current));\n        console.debug(\"Firmware updates information loaded\");\n      })\n      .catch(reason => {\n        console.warn(\"Cannot read Firmware update information\");\n        console.warn(reason);\n      });\n  }\n\n  // read firmware updates\n  const readFirmwareUpdates = (): Promise<void> => {\n    const uiSettings = uiSettingsRef.current\n    if (!uiSettings) throw new Error(\"Read UI settings before firmware checking\");\n\n    if (uiSettings.firmwareUpdate && uiSettings.firmwareLastCheck && (Date.now() - uiSettings.firmwareLastCheck) < firmwareUpdateMinTimout) {\n      dispatch(setZespFirmwareUpdate(uiSettings.firmwareUpdate));\n      console.debug(\"Firmware information read from settings\");\n      return Promise.resolve();\n    }\n\n    // run firmware loading in background\n    _getFirmware();\n\n    return Promise.resolve();\n  }\n\n  // subscribe to report updates events\n  const subscribeReportUpdates = (): Promise<void> => {\n    const onReport = (ieee: string, reportKey: string, update: Partial<ZespReportInfo>) =>\n      dispatch(updateReport({ieee, reportKey, update}));\n\n    ServiceUpdates.subscribeToEvents(zesp, onReport);\n    return Promise.resolve();\n  }\n\n  return {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n  }\n}\n\nexport default useZespAgent;","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 100,\n\n  // connection verify interval\n  RestartConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n\n  // connection checker interval, should be greater then 'DefaultRequestTimeoutSeconds' \n  WatcherIntervalSeconds: 15,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\nimport Constants from \"./Constants\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IRequestAsyncArgs, ISendArgs, ZespConnectedAction, ZespConnectorHandler, ZespConnectorListener} from \"./service-connector.interfaces\";\nimport {AllMessagesZespResponseValidator} from \"./ZespResponseValidators\";\n\nexport const useZespConnector = () => {\n  const _onMessageEvent = new EventTarget();\n  let _ws: Websocket | undefined = undefined;\n  let _server: IServerInfo | undefined;\n  let _lastMessageTimestamp: number = Date.now();\n  let _watcher: NodeJS.Timeout | undefined = undefined;\n\n  const _onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n    _lastMessageTimestamp = Date.now();\n    const messageParts = e.data\n      .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n      .split(\"\\x00\");\n\n    if (messageParts.length == 0) {\n      console.warn(\"Received empty message from zesp\");\n      return;\n    }\n\n    let messageType = messageParts.shift();\n\n    const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n    if (jsonMatch) {\n      messageParts.unshift(messageType);\n      messageType = \"json\";\n    }\n\n    const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n    _onMessageEvent.dispatchEvent(resultEvent);\n  }\n\n  const _tryToCloseWS = (): boolean => {\n    if (_ws) {\n      try {\n        _ws.close(1000);\n        return true;\n      } catch {\n        // it's ok :P\n      }\n    }\n    return false;\n  }\n\n  const _tryConnectWs = (zespStatusChangeHandler: ZespConnectedAction) => new Promise<void>((resolve, reject) => {\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const serverAddress = `${protocol}://${_server!.address}:81`;\n    console.debug(`Create connection to ${serverAddress}`)\n    _ws = new WebsocketBuilder(serverAddress)\n      .onOpen(() => {\n        console.debug(\"ZESP connected\");\n        zespStatusChangeHandler(\"connected\");\n        resolve();\n      })\n      .onClose(() => {\n        console.debug(\"ZESP connection closed\");\n        zespStatusChangeHandler(\"closed\");\n        reject(\"ZESP connection closed\");\n      })\n      .onError(() => reject(\"ZESP connection error\"))\n      .onMessage(_onMessageReceived)\n      .build();\n  });\n\n  const _getBinaryData = (message: string): Uint8Array => {\n    const data = message.replaceAll(\" \", \"\");\n    const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    return new Uint8Array(dataHex);\n  }\n\n  const _pingAsync = (): Promise<ZespDataEvent> =>\n    zespRequestAsync({data: \"LoadJson|/ping.json\", responseValidator: AllMessagesZespResponseValidator})\n\n  const _runWatcher = (zespStatusChangeHandler: ZespConnectedAction): Promise<void> => {\n    if (_watcher) {\n      console.debug(\"Stop old watcher\");\n      clearInterval(_watcher);\n    }\n\n    console.debug(\"Start watcher\");\n    _watcher = setInterval(() => {\n      if (_ws?.underlyingWebsocket?.readyState !== 1) return;\n\n      const periodWithoutMessageSeconds = (Date.now() - _lastMessageTimestamp) / 1000;\n      if (periodWithoutMessageSeconds > Constants.WatcherIntervalSeconds) {\n        _lastMessageTimestamp = Date.now() + Constants.DefaultRequestTimeoutSeconds * 1000;\n        if (_watcher) clearInterval(_watcher); // stop watcher until 'ping' finished\n        \n        _pingAsync()\n          .then(() => _runWatcher(zespStatusChangeHandler)) // everything fine, continue watching\n          .catch(() => zespStatusChangeHandler(\"reconnect\")); // oops, try to restart. Do not start watcher at the moment\n      }\n    }, 5000);\n\n    return Promise.resolve();\n  }\n\n  const connectAsync = (server: IServerInfo, zespStatusChangeHandler: ZespConnectedAction, force: boolean) => {\n    _server = server;\n    return new Promise<void>((resolve, reject) => {\n      console.debug(\"Start WS connection...\");\n\n      if (!force) {\n        if (_ws?.underlyingWebsocket?.readyState === 0) {\n          reject(\"Already connecting\");\n          return;\n        }\n\n        if (_ws?.underlyingWebsocket?.readyState === 1) {\n          console.debug(\"ZESP already connected, skip connection\");\n          resolve();\n          return;\n        }\n      }\n\n      _tryToCloseWS();\n      _tryConnectWs(zespStatusChangeHandler)\n        .then(() => _runWatcher(zespStatusChangeHandler))\n        .then(resolve)\n        .catch(reject);\n    })\n  }\n\n  const zespSend = (args: ISendArgs): void => {\n    if (!_ws) {\n      console.warn(\"WebSocket client is not initialized yet\");\n      return;\n    }\n\n    const data = args.isBinary === true\n      ? _getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  }\n\n  const zespRequestAsync = (args: IRequestAsyncArgs) => new Promise<ZespDataEvent>((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      _onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      _onMessageEvent.addEventListener(ZespDataEventType, listener);\n      zespSend({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })\n\n  const subscribe = (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    _onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  }\n\n  const unsubscribe = (listener: ZespConnectorListener) => _onMessageEvent.removeEventListener(ZespDataEventType, listener)\n\n  const getServerAddress = () => _server?.address;\n\n  return {\n    connectAsync,\n    zespSend,\n    zespRequestAsync,\n    subscribe,\n    unsubscribe,\n    getServerAddress,\n  }\n}\n\nexport default useZespConnector;","import React, {Fragment, useContext, useEffect, useRef, useState} from \"react\";\nimport {IServerInfo} from \"../../pages/welcome/interfaces\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getStatus, setConnectionStatus, setInitialized} from \"store/slices/zespSlice\";\nimport useZespAgent from \"./ZespAgent.hook\";\nimport useZespConnector from \"../../services/zesp/common/service-connector\";\nimport Constants from \"../../services/zesp/common/Constants\";\nimport {IZespConnector} from \"../../services/zesp/common/service-connector.interfaces\";\n\ninterface IProps {\n  server: IServerInfo\n}\n\nexport const ZespContext = React.createContext<IZespConnector>(useZespConnector());\n\nexport const ZespAgent: React.FC<IProps> = ({server, children})\n  : React.ReactElement => {\n  const dispatch = useDispatch();\n  const zespStatus = useSelector(getStatus);\n  const [zesp, setZesp] = useState(useContext(ZespContext));\n  const _restartTimerRef = useRef<NodeJS.Timeout | undefined>(undefined);\n\n  useEffect(() => {\n    if (zespStatus === \"reconnect\") {\n      setZesp(useZespConnector());\n      dispatch(setConnectionStatus(\"disconnected\"));\n    }\n\n    console.log(`ZESP agent status: ${zespStatus}`);\n  }, [zespStatus])\n\n  const {\n    connectAsync,\n    getDevices,\n    getRoot,\n    readUiSettings,\n    readFirmwareUpdates,\n    subscribeReportUpdates,\n  } = useZespAgent(dispatch, zesp);\n\n  if (zespStatus === \"connected\") return (\n    <ZespContext.Provider value={zesp}>\n      {children}\n    </ZespContext.Provider>\n  );\n\n  if (zespStatus === \"closed\") {\n    if (_restartTimerRef.current) {\n      clearTimeout(_restartTimerRef.current);\n      _restartTimerRef.current = undefined;\n    }\n\n    _restartTimerRef.current = setTimeout(() => {\n      if (zespStatus === \"closed\") {\n        dispatch(setConnectionStatus(\"reconnect\"));\n      } else {\n        console.debug(`Cancel restarting, cause status: ${zespStatus}`);\n      }\n    }, Constants.RestartConnectionTimeout);\n  }\n\n  if (zespStatus !== \"disconnected\") return (<Fragment/>);\n  dispatch(setConnectionStatus(\"connecting\"));\n  connectAsync(server)\n    .then(getDevices)\n    .then(getRoot)\n    .then(readUiSettings)\n    .then(readFirmwareUpdates)\n    .then(subscribeReportUpdates)\n\n    // final steps\n    .then(() => dispatch(setInitialized(true)))\n    .catch(reason => console.error(reason))\n    .finally(() => {\n      setZesp(zesp);\n      console.debug(\"ZESP initialization completed\");\n    });\n\n  return (<Fragment/>);\n}\n","import React, {useContext} from \"react\";\nimport \"./styles.scss\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card, Row} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {useTranslation} from \"react-i18next\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DeviceListItem} from \"../../models/DeviceListItem\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\nimport {Devices} from \"../../services/devices\";\nimport {ZespReportInfo} from \"../../services/zesp/models/ZespReportInfo\";\nimport {getAllDevices} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result: React.FC = (): React.ReactElement => {\n  const {getServerAddress} = useContext(ZespContext);\n  const devices = useSelector(getAllDevices, (a: DeviceInfo[], b: DeviceInfo[]) => a.length === b.length);\n  if (devices.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  console.debug(\"Building list of devices to show...\");\n  const serverAddress = getServerAddress() || \"/\";\n  const deviceItems = [...devices]\n    .sort(devicesSorting)\n    .map(x => buildListItem(x, serverAddress));\n\n  console.debug(\"devices page updated...\");\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <DevicesList devices={deviceItems}/>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nconst DevicesList = (props: { devices: DeviceListItem[] }) => {\n  const {t} = useTranslation(\"pages.devices\");\n  const {devices} = props;\n\n  return (\n    <div className=\"group border-top pt-4\">\n      <div className=\"title h5 pb-3\">\n        <span>{t(\"groups.all\")}</span>\n        {devices.length > 1 && (<span className=\"badge bg-secondary ms-2\">{devices.length}</span>)}\n      </div>\n      <Row className=\"items\">\n        {devices.map((device, i) => (<Item device={device} key={i}/>))}\n      </Row>\n    </div>\n  );\n}\n\nconst devicesSorting = (a: DeviceInfo, b: DeviceInfo): number => {\n  if (a.zespInfo.ModelId === \"ZESP_Root\") return -1;\n  if (b.zespInfo.ModelId === \"ZESP_Root\") return 1;\n\n  if (a.zespInfo.ModelId < b.zespInfo.ModelId) return -1;\n  if (a.zespInfo.ModelId > b.zespInfo.ModelId) return 1;\n\n  return 0;\n}\n\nconst buildListItem = (device: DeviceInfo, serverAddress: string): DeviceListItem => {\n  const title = device.zespInfo.Name && device.zespInfo.Name.length > 0 ? device.zespInfo.Name : device.zespInfo.ModelId;\n  const image = getImageUrl(device, serverAddress);\n  const tags = getTagsFromReports(device.zespInfo.Report, device.zespInfo.DevType);\n\n  return {\n    title,\n    ieee: device.zespInfo.IEEE,\n    image,\n    tags\n  };\n}\n\nconst getImageUrl = (device: DeviceInfo, serverAddress: string): string => {\n  // device.settings?.image || device.zespInfo.Img\n  if (device.settings?.image)\n    return `${process.env.PUBLIC_URL}/device-images/${device.settings.image}`;\n\n  if (device.zespInfo.Img)\n    return `http://${serverAddress}:8081/${device.zespInfo.Img}`\n\n  const modelId = device.zespInfo.ModelId;\n  return `http://${serverAddress}:8081/img/${modelId}.jpg`;\n}\n\nconst getTagsFromReports = (reports: { [key: string]: ZespReportInfo }, deviceType: string): string[] => {\n  const result: string[] = [];\n\n  for (const key of Object.keys(reports)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key, deviceType);\n\n    if (!reportKeyDetails) {\n      console.warn(`Cannot read report '${key}' details for '${deviceType}' device type`);\n      continue;\n    }\n\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    result.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  return result\n    .filter((x, i) => result.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n}\n\nexport default Result;\n","import React, {Fragment, useContext, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setSpinnerShow} from \"../../store/slices/spinnerSlice\"\nimport {setZespSettings, getZespSettings} from \"../../store/slices/settingsSlice\"\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {Dispatch} from \"@reduxjs/toolkit\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const settings = useSelector(getZespSettings);\n  const {getAsync} = useZespSettings(zesp);\n\n  useEffect(() => {\n    dispatch(setSpinnerShow(true));\n\n    getAsync()\n      .then(data => {\n        dispatch(setZespSettings(data));\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  }, []);\n\n  if (!settings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/firmware\">Firmware manager</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (\n  data: Partial<ZespSettings>,\n  settings: ZespSettings | undefined,\n  dispatch: Dispatch,\n  setAsync: { (settings: ZespSettings): Promise<void> }) =>\n  new Promise<void>((resolve, reject) => {\n    if (!settings) reject(\"Settings not loaded\");\n    dispatch(setSpinnerShow(true));\n\n    const updatedSettings: ZespSettings = ({...settings, ...data}) as ZespSettings;\n    setAsync(updatedSettings)\n      .then(() => {\n        dispatch(setZespSettings(updatedSettings));\n        resolve();\n        toast.success(\"Settings updated\");\n      })\n      .catch(reason => {\n        toast.error(`Cannot save: ${reason}`);\n        reject(reason);\n      })\n      .finally(() => dispatch(setSpinnerShow(false)));\n  })\n\nexport default Result;","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClicked: () => void,\n  onDetailsClicked?: () => void,\n}) => {\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  return (\n    <Modal.Header className={headerClassName}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        {props.onDetailsClicked && (<button type=\"button\" className=\"btn\" onClick={props.onDetailsClicked}><i className=\"bi bi-three-dots-vertical\"/></button>)}\n        <span className=\"border-end ms-2 me-3\"/>\n        <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={props.onCloseClicked}/>\n      </div>\n    </Modal.Header>\n  )\n}","import {DataLayoutItemsGroup} from \"../../models/DataControlSettings\";\nimport {Modal} from \"react-bootstrap\";\nimport React, {FunctionComponent} from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {LayoutProps} from \"../../models/LayoutProps\";\nimport {DefaultLayout} from \"../../device-controls/layouts/DefaultLayout\";\nimport {layoutsAvailable} from \"../../device-controls/layouts\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  const layoutProps: LayoutProps = {\n    device: props.device,\n    settings: group.settings\n  };\n\n  const layoutName = props.device.settings?.layout || \"default\";\n  const LayoutElements: FunctionComponent<LayoutProps> = layoutsAvailable[layoutName] || DefaultLayout;\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      <LayoutElements {...layoutProps}/>\n    </Modal.Body>\n  )\n}","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Modal} from \"react-bootstrap\";\nimport {Devices} from \"../../services/devices\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport toast from \"react-hot-toast\";\nimport {getDeviceByIee} from \"../../store/slices/devicesSlice\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../store/configure\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default () => {\n  const {ieee} = useParams<{ ieee: string }>();\n  const [show, setShow] = useState(true);\n  const history = useHistory();\n  const deviceInfo = useSelector((state: RootState) => getDeviceByIee(state, ieee), (a: DeviceInfo | undefined, b: DeviceInfo | undefined) => {\n    if (!a || !b) return false;\n    const keysA = Object.keys(a.zespInfo.Report);\n    const keysB = Object.keys(b.zespInfo.Report);\n\n    if (keysA.length != keysB.length) return false;\n    for (const key of keysA)\n      if (a.zespInfo.Report[key] !== b.zespInfo.Report[key]) return false;\n\n    return true;\n  });\n\n  if (!deviceInfo) return (<CustomDeviceNotFound/>);\n\n  const groups = Devices.getControlGroups(deviceInfo);\n  if (!groups || groups.length === 0) {\n    console.warn(`No controls found for '${deviceInfo.zespInfo.IEEE}' device`);\n    return (<CustomDeviceNotFound/>);\n  }\n\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const handleClose = () => setShow(false);\n  const handleExit = () => setTimeout(() => history.push(\"/devices\"), 100);\n  const handleDetails = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for logs\", {icon: \"👽\"});\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} onExited={handleExit}>\n      <CustomHeader\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}\n        setActiveGroupName={setActiveGroupName}\n        onCloseClicked={handleClose}\n        onDetailsClicked={handleDetails}\n      />\n\n      <CustomBody\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}/>\n    </Modal>\n  )\n}\n","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useContext, useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\", \"LoadJson|/zesp_ui.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default (): React.ReactElement => {\n  const {zespSend, subscribe, unsubscribe} = useContext(ZespContext);\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n  const [repsPaused, _setRepsPaused] = useState<boolean>(true);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n  const repsPausedRef = useRef(repsPaused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    if (repsPausedRef.current && (\n      message.startsWith(\"rep|\") ||\n      message.startsWith(\"ArBle|\")\n    )) return;\n\n    const data: string[] = [message.substr(0, 500), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const toggleRepsPause = () => {\n    const data = !repsPausedRef.current;\n    repsPausedRef.current = data;\n    _setRepsPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    zespSend({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    zespSend({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n          <button className={`btn btn-outline-${repsPaused ? \"secondary\" : \"info\"} ms-3 btn-sm float-end`}\n                  onClick={() => toggleRepsPause()}>{repsPaused ? \"REPs disabled\" : \"REPs enabled\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React, {useContext} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n\n  if (!allSettings) return (<div>No settings found...</div>);\n  const settings = allSettings.MQTT;\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment, useContext} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getZespSettings} from \"../../store/slices/settingsSlice\";\nimport {ZespContext} from \"../../shared/agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\nconst Result = () => {\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const zespSettings = useZespSettings(zesp);\n  const allSettings = useSelector(getZespSettings);\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n\n  if (!allSettings) return (<Fragment/>);\n  const settings = allSettings.Wifi;\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, allSettings, dispatch, zespSettings.setAsync);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\nimport {getInitialized} from \"./store/slices/zespSlice\"\nimport {setSpinnerShow} from \"./store/slices/spinnerSlice\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\nexport const Routes = () => {\n  const isInitialized = useSelector(getInitialized);\n  const dispatch = useDispatch();\n\n  if (!isInitialized) {\n    // return (<div>Initialization...</div>);\n    setTimeout(() => dispatch(setSpinnerShow(true)), 0);\n    return (<Fragment/>);\n  }\n\n  setTimeout(() => dispatch(setSpinnerShow(false)), 300);\n\n  return (\n    <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee\" component={DeviceInfoPage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/firmware\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n    </Fragment>\n  )\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn className=\"fullscreen\">\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\n\ninterface IProps {\n  setServerIndex: (index: number) => void\n}\n\nexport const WelcomePage: FunctionComponent<IProps> = (props: IProps) => {\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => props.setServerIndex(index);\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import React from \"react\";\nimport \"./styles.scss\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion} from \"../../store/slices/zespFirmwareSlice\";\n\nexport const AppFooter: React.FC = (): React.ReactElement => {\n  const uiVersion = \"0.0.1 alfa\";\n  const zespVersion = useSelector(getZespFirmwareInstalledVersion);\n\n  return (\n    <footer className=\"app-footer my-3\">\n      <div className=\"d-flex justify-content-center\">\n        <div><a href=\"https://github.com/NickRimmer/zesp-ui\" target={\"_blank\"} rel=\"noreferrer\">ZESP UI<i className=\"bi bi-github ms-2\"/></a></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div>UI <span className=\"highlight\">{uiVersion}</span></div>\n        <div className=\"mx-3 border-start opacity-25\"/>\n        <div><a href=\"https://t.me/zesp32\" target={\"_blank\"} rel=\"noreferrer\">ZESP</a> <span className=\"highlight\">{zespVersion}</span></div>\n      </div>\n    </footer>\n  )\n}\n\nexport default AppFooter;","import React, {Fragment, useEffect, useState} from \"react\";\nimport {Modal} from \"react-bootstrap\";\n\ninterface IProps {\n  show: boolean,\n  title: string,\n  setShow: (show: boolean) => void,\n  footer: React.ReactElement | undefined,\n}\n\nexport const AppDialog: React.FunctionComponent<IProps> = ({\n  children,\n  show,\n  title,\n  setShow,\n  footer,\n}): React.ReactElement => {\n  const [dialogLoaded, setDialogLoaded] = useState(show);\n\n  useEffect(() => {\n    if (show) setDialogLoaded(true);\n  }, [show]);\n\n  const onClosedHandler = () => setDialogLoaded(false);\n  const onHideHandler = () => setShow(false);\n\n  if (!dialogLoaded) return (<Fragment/>);\n  return (\n    <Modal show={show} onExited={onClosedHandler} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>{title}</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        {children}\n      </Modal.Body>\n\n      {footer && (\n        <Modal.Footer>\n          {footer}\n        </Modal.Footer>\n      )}\n    </Modal>\n  )\n}","import React, {useContext, useState} from \"react\";\nimport {AppDialog} from \"../app-dialog\";\nimport {Button} from \"react-bootstrap\";\nimport {useDispatch} from \"react-redux\";\nimport {setSpinner} from \"../../store/slices/spinnerSlice\";\nimport {ZespContext} from \"../agents/ZespAgent\";\n\nexport const PowerDialogLink: React.FC = (): React.ReactElement => {\n  const [show, setShow] = useState(false);\n  const {zespSend} = useContext(ZespContext);\n  const dispatch = useDispatch();\n\n  const showPowerDialogClickHandler = () => setShow(true);\n\n  const onRestartClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Restarting, please wait...\"}));\n    setShow(false);\n    zespSend({data: \"RebootESP\"});\n  };\n\n  const onShutdownClickedHandler = () => {\n    dispatch(setSpinner({show: true, message: \"Shutting down...\"}));\n    // dispatch(setConnectionStatus(\"reconnect\"));\n    setShow(false);\n    setTimeout(() => document.location.href = \"/\", 2000);\n    zespSend({data: \"Shutdown\"});\n  };\n\n  const navLink = (<span className=\"nav-link clickable\" onClick={showPowerDialogClickHandler}><i className=\"bi bi-power\"/></span>)\n  const buttons = (\n    <>\n      <Button onClick={onRestartClickedHandler}>Restart ZESP</Button>\n      <Button onClick={onShutdownClickedHandler} variant=\"secondary\">Shutdown</Button>\n    </>\n  );\n\n  return (\n    <>\n      {navLink}\n      <AppDialog title=\"Power management\" show={show} setShow={setShow} footer={buttons}>\n        <div className=\"mb-3\">Restart of ZESP service can take a few minutes. This page will be reloaded automatically when restart completed.</div>\n        <div>To shutdown, just click Shutdown button. But this is way with one direction, make sure you know what are you doing.</div>\n      </AppDialog>\n    </>\n  )\n}\n\nexport default PowerDialogLink;","import React from 'react';\nimport './styles.scss'\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\nimport PowerDialogLink from \"../power-dialog\";\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center pe-2\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n      <div className=\"border-start mx-3 opacity-25\"/>\n      <PowerDialogLink/>\n    </nav>\n  );\n};\n\nexport default Result;","import React, {useContext, useState} from \"react\";\nimport {DictionaryStrings} from \"../../models/DictionaryStrings\";\nimport {Col, Modal, Row} from \"react-bootstrap\";\nimport toast from \"react-hot-toast\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUiSettings, setUiSettings} from \"../../store/slices/settingsSlice\";\nimport {UiSettings} from \"../../models/UiSettings\";\nimport {ZespContext} from \"../agents/ZespAgent\";\nimport useZespSettings from \"../../services/zesp/zespSettings.hook\";\n\ninterface IProps {\n  zespFirmwareUpdate: DictionaryStrings,\n  zespFirmwareCurrentVersion: string,\n  onClosed: () => void,\n}\n\nconst UpdatesNotificationDialog: React.FC<IProps> = ({\n  onClosed,\n  zespFirmwareUpdate,\n  zespFirmwareCurrentVersion\n}): React.ReactElement => {\n  const [show, setShow] = useState(true);\n  const dispatch = useDispatch();\n  const zesp = useContext(ZespContext);\n  const SettingsService = useZespSettings(zesp);\n  const uiSettings = useSelector(getUiSettings);\n  const zespFirmwareUpdateVersion = zespFirmwareUpdate[\"ver\"] || \"unknown\";\n\n  const onHideHandler = () => setShow(false);\n\n  const updateData: DictionaryStrings = {\n    ...{\"Current version\": zespFirmwareCurrentVersion},\n    ...{\"New version\": zespFirmwareUpdateVersion},\n    ...{...zespFirmwareUpdate, ...{\"ver\": undefined}} // skip ver from \"other\" properties, cause we'll show it before\n  }\n  const onUpdateClickHandler = () => {\n    toast.success(\"Not implemented yet...\", {icon: (<i className=\"bi bi-cone-striped text-warning\"/>)});\n  }\n\n  const onSkipClickHandler = () => {\n    const update: UiSettings = {...uiSettings || {} as UiSettings, ...{firmwareSkipUpdate: zespFirmwareUpdateVersion}};\n\n    dispatch(setUiSettings(update));\n    SettingsService.setUiSettings(update);\n\n    toast.success(\"Notification for this version disabled\", {icon: (<i className=\"bi bi-bell-slash-fill text-success\"/>)});\n  }\n\n  return (\n    <Modal show={show} onExited={onClosed} onHide={onHideHandler}>\n      <Modal.Header>\n        <div>New version of ZESP Firmware</div>\n        <div className=\"text-end modal-right-buttons\">\n          <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={onHideHandler}/>\n        </div>\n      </Modal.Header>\n      <Modal.Body className=\"text-start\">\n        <div className=\"rows-striped\">\n          {Object.keys(updateData).map((key, i) => {\n            return updateData[key]\n              && updateData[key]!.trim().length > 0\n              && (<Row key={i}><Col xs={4} className=\"py-2 text-capitalize text-muted text-end\">{key}</Col><Col className=\"py-2 text-dark\">{updateData[key]}</Col></Row>);\n          })}\n        </div>\n      </Modal.Body>\n      <Modal.Footer>\n        <button className=\"btn btn-primary\" onClick={onUpdateClickHandler}>Download and Update</button>\n        <button className=\"btn btn-secondary\" onClick={onSkipClickHandler}>Skip this version</button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default UpdatesNotificationDialog;","import React, {Fragment, useState} from \"react\";\nimport UpdatesNotificationDialog from \"./UpdatesNotificationDialog\";\nimport {useSelector} from \"react-redux\";\nimport {getZespFirmwareInstalledVersion, getZespFirmwareUpdateInfo} from \"../../store/slices/zespFirmwareSlice\";\nimport {getUiSettings} from \"../../store/slices/settingsSlice\";\n\nexport const UpdatesNotification: React.FC = (): React.ReactElement => {\n  const zespFirmwareUpdate = useSelector(getZespFirmwareUpdateInfo);\n  const zespCurrentVersion = useSelector(getZespFirmwareInstalledVersion);\n  const uiSettings = useSelector(getUiSettings);\n  const [showDialog, setShowDialog] = useState(false);\n\n  if (!zespFirmwareUpdate\n    || zespFirmwareUpdate[\"ver\"] === zespCurrentVersion\n    || uiSettings?.firmwareSkipUpdate === zespFirmwareUpdate[\"ver\"]) return (<Fragment/>);\n\n  const title = `${zespCurrentVersion} to ${zespFirmwareUpdate[\"ver\"]} update`;\n  const onUpdatesClickedHandler = () => {\n    setShowDialog(true);\n  }\n\n  return (\n    <div>\n      <span onClick={onUpdatesClickedHandler} className=\"badge bg-info ms-3 notification-updates clickable\" title={title}>\n        <i className=\"bi bi-cloud-arrow-down-fill\"/>\n      </span>\n      {showDialog && (<UpdatesNotificationDialog\n        onClosed={() => setShowDialog(false)}\n        zespFirmwareUpdate={zespFirmwareUpdate}\n        zespFirmwareCurrentVersion={zespCurrentVersion}/>)}\n    </div>\n  )\n}\n\nexport default UpdatesNotification;","import React from \"react\";\nimport \"./styles.scss\";\nimport TopMenu from \"../top-menu\";\nimport {UpdatesNotification} from \"../updates-notification/UpdatesNotification\";\n\nexport const AppHeader: React.FC = (): React.ReactElement => {\n  return (\n    <header className=\"app-header\">\n      <a href=\"/\"><h3 className=\"title\">ZESP:UI</h3></a>\n      <div className=\"d-flex flex-row align-items-center\">\n        <TopMenu/>\n        <UpdatesNotification/>\n      </div>\n    </header>\n  )\n}\n\nexport default AppHeader;","import React, {useState} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport {ZespAgent} from \"./shared/agents/ZespAgent\";\nimport {AppFooter} from \"./shared/footer\";\nimport AppHeader from \"./shared/header\";\n\nconst Content = () => {\n  const [serverIndex, setServerIndex] = useState<number | null>(null);\n  const serversString = window.localStorage.getItem(\"servers\");\n  const servers = (serversString && JSON.parse(serversString)) || [];\n  const selectedServer = (serverIndex === null || servers.length <= serverIndex!)\n    ? null\n    : servers[serverIndex!];\n\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage setServerIndex={setServerIndex}/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  return (\n    <ZespAgent server={props.server}>\n      <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n        <AppHeader/>\n        <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n          <Routes/>\n        </main>\n        <AppFooter/>\n      </div>\n    </ZespAgent>\n  )\n}\n\nconst Result = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Content/>\n        </Switch>\n      </Router>\n\n      <LoadingSpinner/>\n      <Toaster/>\n    </>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit'\nimport zespReducer from \"./slices/zespSlice\";\nimport devicesReducer from \"./slices/devicesSlice\";\nimport spinnerReducer from \"./slices/spinnerSlice\";\nimport settingsReducer from \"./slices/settingsSlice\";\nimport zespFirmwareReducer from \"./slices/zespFirmwareSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    zesp: zespReducer,\n    devices: devicesReducer,\n    spinner: spinnerReducer,\n    settings: settingsReducer,\n    zespFirmware: zespFirmwareReducer,\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/configure\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n                console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;"],"sourceRoot":""}