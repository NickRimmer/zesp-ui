{"version":3,"sources":["loader.js","i18n sync /^.*$","data/layouts sync /^/.//.*$","services/zesp/enums/CloseEventCodes.tsx","services/zesp/common/ZespConnector.tsx","shared/top-menu/index.tsx","shared/global-state-provider/state-logic.tsx","global-state.tsx","shared/loading-spinner/index.tsx","services/zesp/common/Constants.tsx","services/zesp/common/ZespDataEvent.tsx","shared/loading-spinner/service.tsx","services/single.tsx","shared/fadein-transition/index.tsx","pages/devices/item-image.tsx","services/devices.tsx","pages/devices/item.tsx","pages/devices/index.tsx","services/zesp/common/ZespResponseValidators.tsx","services/zesp/service-settings.tsx","pages/setup/index.tsx","pages/device-info/header.tsx","services/deviceControls.tsx","device-controls/root/OnOffRoot.tsx","device-controls/root/LevelRoot.tsx","services/localStorage.tsx","device-controls/root/RgbRoot.tsx","device-controls/controls/UnknownControl.tsx","shared/transition/index.tsx","shared/transition/HighlightOnUpdate.tsx","device-controls/sensors/IlluminanceSensor.tsx","device-controls/controls/LevelControl.tsx","device-controls/root/PlayerSrcRoot.tsx","device-controls/sensors/OnOffBinarySensor.tsx","device-controls/sensors/ValueSensor.tsx","device-controls/index.tsx","pages/device-info/body.tsx","pages/device-info/not-found.tsx","pages/device-info/index.tsx","shared/form/react-form/logic.tsx","shared/form/react-form/index.tsx","pages/socket-test/index.tsx","shared/form/input-group-horizontal.tsx","shared/form/checkbox-group-inline.tsx","pages/setup/mqtt.tsx","pages/setup/not-implemented-yet.tsx","pages/setup/wifi.tsx","Routes.tsx","pages/welcome/part-items.tsx","pages/welcome/part-edit.tsx","pages/welcome/index.tsx","services/zesp/service-devices.tsx","services/zesp/service-report-updates.tsx","services/zesp/service-root.tsx","services/zesp/service-general.tsx","App.tsx","reportWebVitals.ts","index.tsx","i18n/config.js"],"names":["window","$","jQuery","require","console","debug","log","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CloseEventCodes","_ws","_getGlobalState","_server","Result","t","useTranslation","className","to","process","GlobalStateContext","createContext","state","setState","GlobalStateProvider","children","value","assign","spinnerLoadingShow","zespConnected","appInitialized","zespSettings","undefined","selectedServerIndex","devices","useState","Provider","useGlobalState","context","useContext","setTimeout","removeClass","animation","variant","ConnectionStartTimeout","VerifyConnectionTimeout","DefaultRequestTimeoutSeconds","ZespDataEventType","ZespDataEvent","dataType","dataParts","response","Event","_reconnecter","_globalState","onMessageEvent","EventTarget","ZespConnector","connectAsync","getGlobalState","server","Promise","reject","warn","Single","reconnectAsync","then","catch","error","prev","Constants","setInterval","disconnect","clearInterval","underlyingWebsocket","readyState","close","force","Restart","prevState","protocol","document","location","WebsocketBuilder","address","onOpen","onConnectionOpen","onClose","onConnectionClosed","onError","onConnectionError","onMessage","onMessageReceived","build","send","args","data","isBinary","getBinaryData","requestAsync","timeoutSeconds","responseReceived","validator","responseValidator","listener","event","result","isValid","removeEventListener","addEventListener","request","onSuccess","name","errorMessage","subscribe","handler","zespEvent","unsubscribe","ws","messageParts","replace","split","length","messageType","shift","exec","unshift","resultEvent","dispatchEvent","message","dataHex","replaceAll","match","group","parseInt","Uint8Array","init","globalState","show","setVisible","hide","isVisible","ZespConnectorImplementation","LoadingSpinnerImplementation","FadeIn","props","setClassName","device","deviceImage","settings","image","src","style","backgroundImage","Devices","ieee","deviceId","find","x","zespInfo","IEEE","Device","customLayout","buildLayoutSettingsFromZesp","reduce","r","groupName","push","reportKey","endpoint","substr","clusterId","attributeId","Report","key","reportKeyInfo","registeredCluster","DataHaClusterIds","roleParts","role","buildLayoutItemForRole","attributes","getLayoutItem","dataCluster","roleSettings","layoutItem","zespRoleSettings","JSON","parse","title","Name","ModelId","detailsLink","tags","reportKeyDetails","clusterInfo","HomeAutoClusters","filter","i","indexOf","sort","a","b","DevicesGroup","Card","Body","TypedZespResponseValidator","AllMessagesZespResponseValidator","jsonString","json","parseResponse","stringify","join","toLocaleLowerCase","SaveSettings","updatedSettings","promise","ZespSettingsService","toast","loading","success","useEffect","Spinner","alert","Container","Nav","Item","exact","marginTop","headerClassName","groups","headerContent","type","activeGroupName","onClick","setActiveGroupName","Modal","Header","onDetailsClicked","onCloseClicked","DeviceControls","config","deviceInfo","layoutId","saveReportKeyInfo","val","OnOffRoot","report","Row","ButtonGroup","Button","toString","arguments","commandOn","commandOff","LevelRoot","currentValue","Number","max","min","setValue","minMaxAttributes","inRange","Math","setCurrentValue","FormControl","width","onChange","command","inputChangeHandler","target","FormRange","onMouseUp","useLocalStorage","initialValue","readValue","item","localStorage","getItem","storedValue","setStoredValue","handleStorageChange","newValue","Function","setItem","RgbRoot","g","color","setColor","colorPicker","setColorPicker","rgb","colorChangeHandler","rgbToXY","y","colorPickerButton","onChangeComplete","triangle","red","pow","green","blue","X","Y","Z","isNaN","toFixed","UnknownControl","configData","reportData","Transition","onRefresh","classNameFrom","onLoad","classNameTo","timeOutMs","HighlightOnUpdate","IlluminanceSensor","LevelControl","setReportValue","label","formatCommand","PlayerSrcRoot","srcReport","playSettings","playReport","setSrc","play","setPlay","list","placeholder","icon","OnOffBinarySensor","payloadOn","parsed","ValueSensor","unit","getControlForDevice","controlProps","DeviceControlCol1","Col","md","DeviceControlCol2","control","history","useHistory","useParams","setShow","handleClose","onHide","onExited","handleSubmit","action","preventDefault","input","prop","attr","ReactForm","onSubmit","restProps","Form","predefinedMessages","predefinedBinary","messages","_setMessages","messageSendValue","setMessageSendValue","paused","_setPaused","messagesRef","useRef","pausedRef","addMessages","current","cutCount","splice","onSendPredefined","innerText","onSendBinary","messageToSend","Footer","togglePause","startsWith","i2","controlId","defaultValue","inputProps","Group","as","Label","column","lg","Control","defaultChecked","checkedValue","uncheckedValue","defaultCheckedBool","checked_value","unchecked_value","Check","MQTT","mqttup","mqtt","mqttPort","mqttLogin","mqttPassw","mqttEnable","Home_Assistant","href","rel","Wifi","ssid","pass","ip","mask","gw","Routes","path","component","DevicesPage","DeviceInfoPage","SetupPage","SetupWifiPage","SetupMqttPage","NotImplementedYetPage","SocketTestPage","sortedServers","servers","index","openServerAction","activeClassName","openEditAction","openAddServer","deleteConfirmed","setDeleteConfirmed","popover","Popover","dangerouslySetInnerHTML","__html","editServer","updateAction","addAction","closeAction","InputGroup","Text","OverlayTrigger","trigger","placement","overlay","rootClose","onToggle","deleteAction","WelcomePage","currentPart","setCurrentPart","setEditServer","setServers","backToWelcomeAction","ServiceDevices","getDevicesList","zesp","onDevicesListReceived","zespDevices","predefinedDevices","modelIds","findIndex","layout","forEach","onUpdate","reportId","EndPoint","ClusterId","AttribId","Data","onDataReceived","layoutSettings","reportOnOff","on","reportLevel","level","reportRgb","B","G","R","volumeLevel","sound","volume","srcRadio","current_path","playControl","isInitialized","ZespConnectorPromise","ServiceRoot","ServiceReportUpdates","Content","selectedServer","App","globalStateRef","ZespGeneralService","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","languages","namespaces","i18n","use","initReactI18next","fallbackLng","lng","resources","lang","ns","loadResources","defaultNS"],"mappings":"+4HAAAA,OAAOC,EAAID,OAAOE,OAASC,EAAQ,IAESC,QAAQC,MAAQ,WAExDD,QAAQE,IAAI,6B,oBCJhB,IAAIC,EAAM,CACT,WAAY,GACZ,cAAe,GACf,sBAAuB,IACvB,2BAA4B,IAC5B,mBAAoB,IACpB,wBAAyB,IACzB,6BAA8B,IAC9B,kCAAmC,IACnC,gCAAiC,IACjC,qCAAsC,IACtC,gCAAiC,IACjC,qCAAsC,IACtC,6BAA8B,IAC9B,kCAAmC,KAIpC,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,8KCnCpB,IAAIH,EAAM,CACT,SAAU,IACV,cAAe,KAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,4CCtBRY,ECWRC,EACAC,EACAC,E,qICOWC,EAfA,WACb,IAAOC,EAAKC,YAAe,OAApBD,EAEP,OACE,sBAAKE,UAAU,0CAAf,UAEE,cAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,WAAjC,SAA6CH,EAAE,cAC9CI,EAGD,cAAC,IAAD,CAASF,UAAU,WAAWC,GAAG,SAAjC,SAA2CH,EAAE,e,mCCX7CK,EAAqBC,wBAAc,CACvCC,MAAO,GACPC,SAAU,KAGNC,EAAsB,SAAC,GAOpB,IALLC,EAKI,EALJA,SAKI,IAJJC,aAII,MAJI,GAIJ,EAENpB,OAAOqB,OAAOD,ECCN,CACNE,oBAAoB,EACpBC,eAAe,EACfC,gBAAgB,EAChBC,kBAAcC,EACdC,oBAAqB,KACrBC,QAAS,KDNX,MAA0BC,mBAAST,GAAnC,mBAAOJ,EAAP,KAAcC,EAAd,KAEA,OACE,cAACH,EAAmBgB,SAApB,CAA6BV,MAAO,CAACJ,QAAOC,YAA5C,SACGE,KAKDY,EAAiB,WACrB,IAAMC,EAAUC,qBAAWnB,GAC3B,IAAKkB,EACH,MAAM,IAAInC,MAAM,2DAGlB,OAAOmC,GEdMxB,EAfA,WAGb,OAFgBuB,IAATf,MAEGM,oBACRY,YAAW,kBAAMnD,IAAE,oBAAoBoD,YAAY,YAAW,GAE5D,qBAAKxB,UAAW,yBAAhB,SACE,cAAC,IAAD,CAASyB,UAAU,SAASC,QAAQ,aAKnC,cAAC,WAAD,K,SCPM7B,EAXA,CAEb8B,uBAAwB,IAGxBC,wBAAyB,IAGzBC,6BAA8B,G,iCCRnBC,EAAoB,qBAEpBC,EAAb,kDAKE,WAAYC,EAAkBC,EAAqBC,GAAmB,IAAD,8BACnE,cAAMJ,IALCE,cAI4D,IAH5DE,cAG4D,IAF5DD,eAE4D,EAGnE,EAAKD,SAAWA,EAChB,EAAKC,UAAYA,EACjB,EAAKC,SAAWA,EALmD,EALvE,sBAAmCC,S,SPDvB1C,O,yBAAAA,M,KCcZ,IACI2C,EOdAC,ECEG,E,ERWDC,EAAiB,IAAIC,YAGrBC,EAAgC,CACpCC,aAAc,SAACC,EAAoCC,GAArC,OAAgD,IAAIC,SAAwB,SAACtD,EAASuD,GAClG,OAAIjD,GACFrB,QAAQuE,KAAK,0CACbxD,EAAQyD,EAAOP,iBAIjB7C,EAAkB+C,EAClB9C,EAAU+C,EAGVpB,YAAW,kBAAMiB,EAAcQ,gBAAe,GACzCC,MAAK,kBAAM3D,EAAQyD,EAAOP,kBAC1BU,OAAM,SAAAC,GACLT,IAAiBpC,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACxC,eAAe,OAChEiC,EAAOM,QAEXE,EAAU1B,wBAGZS,EAAekB,aAAY,kBAAMd,EAAcQ,gBAAe,GACzDC,MAAK,kBAAM3D,EAAQyD,EAAOP,kBAC1BU,OAAM,SAAAC,GACL5E,QAAQuE,KAAR,kCAAwCK,IACxCT,IAAiBpC,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACxC,eAAe,OAChEiC,EAAOM,QAEXE,EAAUzB,yBAELY,OAGTe,WAAY,WACNnB,IACFoB,cAAcpB,GACdA,EAAe,MAEjBxC,EAAU,KACVD,IAAkBW,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACxC,eAAe,OAEjE,IAAK,IAAD,YAQK,EAPP,GAA6C,KAAtC,QAAH,EAAAlB,SAAA,mBAAK+D,2BAAL,eAA0BC,aAA4D,OAArC,QAAH,EAAAhE,SAAA,mBAAK+D,2BAAL,eAA0BC,YAE1E,YADAnF,QAAQC,MAAM,kCAET,GAA6C,KAAtC,QAAH,EAAAkB,SAAA,mBAAK+D,2BAAL,eAA0BC,YAGnC,OAFAnF,QAAQC,MAAM,mCACdkB,EAAIiE,MAAM,KAGP,QAAH,EAAAjE,SAAA,SAAKiE,MAAM,KAEb,YAKJX,eAAgB,SAACY,GAAD,OAAW,IAAIhB,SAAc,SAACtD,EAASuD,GAAY,IAAD,QAWhE,GAVKlD,GACHkD,EAAO,wCAIJjD,GACHiD,EAAO,+BAIoC,KAAtC,QAAH,EAAAnD,SAAA,mBAAK+D,2BAAL,eAA0BC,YAM9B,GAA6C,KAAtC,QAAH,EAAAhE,SAAA,mBAAK+D,2BAAL,eAA0BC,aAAqBE,EAAnD,CAMArF,QAAQC,MAAM,0BACd,IACEkB,EAAIiE,MAAMlE,EAAgBoE,SAC1B,UAIFlE,IAAkBW,UAAS,SAAAwD,GAAS,kCAASA,GAAc,CAAClD,eAAe,OAC3E,IAAMmD,EAA0C,WAA/BC,SAASC,SAASF,SAAwB,MAAQ,KACnErE,EAAM,IAAIwE,mBAAJ,UAAwBH,EAAxB,cAAsCnE,EAASuE,QAA/C,QACHC,QAAO,WACNC,IACA/E,OAEDgF,QAAQC,GACRC,SAAQ,WACPC,IACA5B,EAAO,4BAER6B,UAAUC,GACVC,aAzBDtF,SANAuD,EAAO,0BAkCXgC,KAAM,SAACC,GACL,IAAKnF,EAAiB,MAAM,IAAIT,MAAM,wCACtC,IAAM6F,GAAyB,IAAlBD,EAAKE,SACdC,EAAcH,EAAKC,MACnBD,EAAKC,KAETrF,EAAImF,KAAKE,IAGXG,aAAc,SAACJ,GAAD,OAAU,IAAIlC,SAAwB,SAACtD,EAASuD,KACvDiC,EAAKK,gBAAkBL,EAAKK,gBAAkB,KAAGL,EAAKK,eAAiB9B,EAAUxB,+BAChE,IAAlBiD,EAAKE,WAAmBF,EAAKE,UAAW,GAE5C,IAAII,GAAmB,EACjBC,EAAYP,EAAKQ,kBAGjBC,EAAW,SAAXA,EAAYC,GAChB,IAAMC,EAASD,EACVH,EAAUK,QAAQD,KAEvBL,GAAmB,EACnB9C,EAAeqD,oBAAoB7D,EAAmByD,GACtDjG,EAAQmG,KAaV,IACEnD,EAAesD,iBAAiB9D,EAAmByD,GACnD/C,EAAcqC,KAAK,CAACE,KAAMD,EAAKC,KAAMC,SAAUF,EAAKE,WACpDzD,YAZgB,WACZ6D,IAEJ9C,EAAeqD,oBAAoB7D,EAAmByD,GACtDhH,QAAQuE,KAAR,mDAAyDgC,EAAKK,eAA9D,cACAtC,EAAO,cAOqC,IAAtBiC,EAAKK,gBAC3B,MAAOhC,GACPN,EAAO,cAAD,OAAeM,SAIzB0C,QAAS,SAACf,GAAD,OAAU,IAAIlC,SAAwB,SAACtD,EAASuD,GACvDL,EACG0C,aAAaJ,GACb7B,MAAK,SAAAuC,GACAV,EAAKgB,UAAWhB,EAAKgB,UAAUN,GAC9BjH,QAAQC,MAAR,kCAAyCsG,EAAKQ,kBAAkBS,KAAhE,MAELzG,EAAQyD,EAAOP,kBAEhBU,OAAM,SAAAC,GACL,IAAM6C,EAAY,UAAM7C,EAAN,aAAgB2B,EAAKQ,kBAAkBS,KAAvC,aAAgDjB,EAAKC,KAArD,KAEdD,EAAKN,QAASM,EAAKN,QAAQwB,GAC1BzH,QAAQuE,KAAR,+BAAqCkD,IAC1CnD,EAAOmD,UAIbC,UAAW,SAACZ,EAAmCa,GAC7C,IAAMX,EAAW,SAACC,GAChB,IAAMW,EAAYX,EACbH,EAAUK,QAAQS,IAEvBD,EAAQC,IAIV,OADA7D,EAAesD,iBAAiB9D,EAAmByD,GAC5CA,GAGTa,YAAa,SAACb,GAAD,OAAqCjD,EAAeqD,oBAAoB7D,EAAmByD,IAExG7C,eAAgB,kBAAM/C,MAGlB0E,EAAmB,WACvB9F,QAAQC,MAAM,0BACdmB,IAAkBW,UAAS,SAAAwD,GAAS,kCAASA,GAAc,CAAClD,eAAe,QAGvE2D,EAAqB,WACzBhG,QAAQC,MAAM,0BACdmB,IAAkBW,UAAS,SAAAwD,GAAS,kCAASA,GAAc,CAAClD,eAAe,QAGvE6D,EAAoB,WACxBlG,QAAQC,MAAM,sCAGVmG,EAAoB,SAAC0B,EAAepH,GACxC,IAAMqH,EAAerH,EAAE8F,KACpBwB,QAAQ,gCAAiC,MACzCC,MAAM,MAET,GAA2B,GAAvBF,EAAaG,OAAjB,CAKA,IAAIC,EAAcJ,EAAaK,QAEb,iBAAiBC,KAAKF,KAEtCJ,EAAaO,QAAQH,GACrBA,EAAc,QAGhB,IAAMI,EAAc,IAAI/E,EAAc2E,EAAaJ,EAAcrH,EAAE8F,MAEnEzC,EAAeyE,cAAcD,QAd3BvI,QAAQuE,KAAK,qCAiBXmC,EAAgB,SAAC+B,GAAiC,IAAD,EAE/CC,EAAO,UADAD,EAAQE,WAAW,IAAK,IAChBC,MAAM,uBAAd,aAAG,EAA4BzI,KAAI,SAAA0I,GAAK,OAAIC,SAASD,EAAO,OACzE,OAAO,IAAIE,WAAWL,IAGTzE,IOxOA,GACb+E,KAAM,SAACC,GACDnF,EACF9D,QAAQuE,KAAK,sCAIfT,EAAemF,GAGjBC,KAAM,kBAAMC,GAAW,IACvBC,KAAM,kBAAMD,GAAW,KAGnBA,EAAa,SAACE,GAAD,OAA8BvF,EAAa/B,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACzC,mBAAoBiH,S,ECtBjG7E,M,KAC2B,cAAG8E,EACa,uBAAG,IAAIjF,SAAwB,SAAAtD,GAAO,OAAIA,EAAQyD,EAAOP,kBAC9E,UAAGsF,E,YCJ7BC,G,OAA4B,SAACC,GACxC,MAAkC9G,mBAAS,0BAA3C,mBAAOlB,EAAP,KAAkBiI,EAAlB,KAGA,OAFA1G,YAAW,kBAAM0G,EAAa,qBAAoB,GAGhD,qBAAKjI,UAAWA,EAAhB,SACGgI,EAAMxH,a,kBCFE,WAACwH,GACd,IAKyBE,EALnBC,GAKmBD,EALaF,EAAME,QAMhCE,SACLF,EAAOE,SAASC,MADM,aALvBC,EAAG,UAAMpI,IAAN,0BAA8CiI,GACvD,OAAQ,qBAAKnI,UAAU,aAAauI,MAAO,CAACC,gBAAgB,OAAD,OAASF,EAAT,S,oBCDhDG,EACA,SAACjB,EAA2BkB,EAAcC,GAA1C,uBACTnB,EAAYnH,MAAMY,eADT,aACT,EAA2B2H,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SAASC,OAASL,GAAQG,EAAEC,SAASE,SAAWL,MAF9EF,GAIO,SAACP,GAIjB,OAHeA,EAAOe,cAAgBC,GAA4BhB,IAGpDiB,QAAO,SAACC,EAAGP,GACvB,IAAMQ,EAAYR,EAAEzB,OAXK,OAYrBA,EAAQgC,EAAER,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,OAASsD,KAQnC,OAPKjC,IACHA,EAAQ,CAACrB,KAAMsD,GACfD,EAAEE,KAAKlC,IAGTA,EAAMgB,SAAN,sBAAqBhB,EAAMgB,UAAY,IAAvC,CAA2CS,IAEpCO,IACN,KAnBMX,GAsBU,SAACc,GACpB,GAAyB,KAAZ,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW9C,QACb,MAAMvH,MAAM,iCAAD,OAAkCqK,IAE/C,MAAO,CACLC,SAAUD,EAAUE,OAAO,EAAG,GAC9BC,UAAWH,EAAUE,OAAO,EAAG,GAC/BE,YAAaJ,EAAUE,OAAO,EAAG,KAKjCP,GAA8B,SAAChB,GA8BnC,OADmB7I,OAAOD,KAAK8I,EAAOY,SAASc,QAC7BlL,KAAI,SAAAmL,GAAG,OA7BH,SAACN,GAAuC,IAAD,EACrDO,EAAgBrB,GAA4Bc,GAC5CQ,EAAqBC,EAAsCpB,MAAK,SAAAC,GAAC,OAAIA,EAAEa,WAAaI,EAAcJ,aAElGjE,EAAS,CACb5G,GAAIiL,EAAcJ,UAClBH,UAAWO,GAIb,IAAKC,EAEH,OADAxL,QAAQC,MAAR,sBAA6B+K,EAA7B,wCAAsEO,EAAcJ,UAApF,eACOjE,EAIT,IACMwE,EAAS,UADA/B,EAAOY,SAASc,OAAOL,GACbW,YAAV,aAAG,EAAa1D,MAAM,KACrC,OAAIyD,GAAaA,EAAUxD,OAAS,EAC3B,2BAAIhB,GAAW0E,GAAuBF,EAAWF,EAAmBR,IAGvDQ,EAAkBK,YAAcL,EAAkBK,WAAWN,EAAcH,cACtElE,EAMA4E,CAAcR,OAGvCM,GAAyB,SAACF,EAAqBK,EAA6Bf,GAChF,IAAMO,EAAgBrB,GAA4Bc,GAE5CI,EAAcM,EAAU,GACxBM,EAAeN,EAAUxD,OAAS,EAAIwD,EAAU,GAAK,KACrDO,EAAcF,EAAYF,aAE5BE,EAAYF,WAAZ,UAA0BN,EAAcH,YAAxC,YAAuDA,KACtDW,EAAYF,WAAWT,KAFxB,CAAC9K,GAAI8K,GAST,OAHIY,IACFC,EAAWC,iBAAmBC,KAAKC,MAAMJ,IAEpCC,GC/EM,YAACxC,GAMd,IALA,IAAMc,EAAWd,EAAME,OAAOY,SACxB8B,EAAQ9B,EAAS+B,MAAQ/B,EAAS+B,KAAKpE,OAAS,EAAIqC,EAAS+B,KAAO7C,EAAME,OAAOY,SAASgC,QAC1FC,EAAW,mBAAejC,EAASC,KAAxB,YAAgCD,EAASE,QAEtDgC,EAAiB,GALW,aAM3B,IAAMnB,EAAG,KACNoB,EAAmBxC,GAA4BoB,GAC/CqB,EAAcC,EAAiBvC,MAAK,SAAAC,GAAC,OAAIA,EAAEa,YAAcuB,EAAiBvB,aAChFsB,EAAK1B,MAAgB,OAAX4B,QAAW,IAAXA,OAAA,EAAAA,EAAanF,OAAQkF,EAAiBvB,YAHlD,MAAkBrK,OAAOD,KAAK0J,EAASc,QAAvC,eAAiD,IAWjD,OAJAoB,EAAOA,EACJI,QAAO,SAACvC,EAAGwC,GAAJ,OAAUL,EAAKM,QAAQzC,IAAMwC,KACpCE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAI,GAAK,KAG7B,cAAC,IAAD,CAASzL,UAAU,0BAA0BC,GAAI8K,EAAjD,SACE,sBAAK/K,UAAU,SAAf,UACE,8BAAK,cAAC,EAAD,CAAWkI,OAAQF,EAAME,WAC9B,sBAAKlI,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SAAwB4K,IACxB,sBAAK5K,UAAU,wBAAf,UAAuC,sBAAMA,UAAU,qBAAhB,SAAsC8I,EAASE,SAAeF,EAASC,QAC7GiC,EAAKvE,OAAS,GACb,qBAAKzG,UAAU,eAAf,SACGgL,EAAKtM,KAAI,SAACmK,EAAGwC,GAAJ,OAAW,sBAAcrL,UAAU,qBAAxB,SAA8C6I,GAAnCwC,iBCNxCK,GAAe,SAAC1D,GAAD,OAAqF,GAAxBA,EAAM/G,QAAQwF,OAC3F,cAAC,WAAD,IAED,sBAAKzG,UAAU,wBAAf,UACGgI,EAAM4C,OACL,sBAAK5K,UAAU,gBAAf,UACE,+BAAOgI,EAAM4C,QACZ5C,EAAM/G,QAAQwF,OAAS,GAAM,sBAAMzG,UAAU,0BAAhB,SAA2CgI,EAAM/G,QAAQwF,YAG3F,qBAAKzG,UAAU,yBAAf,SACGgI,EAAM/G,QAAQvC,KAAI,SAACwJ,EAAQmD,GAAT,OAAgB,cAAC,GAAD,CAAMnD,OAAQA,GAAamD,YAKvDxL,GAvCA,WACb,IAAM2H,EAAcpG,IACbtB,EAAKC,YAAe,iBAApBD,EAGP,IAAK0H,EAAYnH,MAAMY,SAA+C,GAApCuG,EAAYnH,MAAMY,QAAQwF,OAAa,OACvE,sDAGF,IAAMxF,EAAUuG,EAAYnH,MAAMY,QAAQsK,OAC1C,OACE,cAAC,EAAD,UACE,qBAAKvL,UAAU,UAAf,SACE,cAAC2L,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAAC,GAAD,CAAchB,MAAO9K,EAAE,cAAemB,QAASA,a,8BCV9C4K,GAA6B,SAA7BA,EAA8B7J,GAAD,MAA+C,CACvF+D,KAAM8F,EAA2B9F,KACjCL,QAAS,SAACF,GAAD,OAA0BA,EAAMxD,WAAaA,KAG3C8J,GAA4D,CACvE/F,KAAM,2BACNL,QAAU,SAAAF,GAAK,OAAI,ICjBN,GACH,kBAA6B,IAAI5C,SAAsB,SAACtD,EAASuD,GACzEE,EAAOP,cAAc0C,aAAa,CAACH,KAAM,aAAcO,kBAAmBuG,GAA2B,cAClG5I,MAAK,SAAAuC,GAAK,OAwBjB,SAAuBuG,GACrB,IAAMC,EAAOtB,KAAKC,MAAMoB,GAClBtG,EAAS,GAGf,OAFApG,OAAOqB,OAAO+E,EAAQuG,GAEfvG,EA7BYwG,CAAczG,EAAMvD,UAAU,OAC5CgB,MAAK,SAAAmF,GAAQ,OAAI9I,EAAQ8I,MACzBlF,OAAM,SAAAC,GAAK,OAAIN,EAAOM,UALd,GAQH,SAACiF,GACT,IAAMrD,EAAO,CACX,WACA,gBACA2F,KAAKwB,UAAU9D,IACf+D,KAAK,KAEP,OAAO,IAAIvJ,SAAQ,SAACtD,EAASuD,GAC3BE,EAAOP,cAAc0C,aAAa,CAACH,KAAMA,EAAMO,kBAAmBuG,GAA2B,YAC1F5I,MAAK,SAAAuC,GAE2C,OAA3CA,EAAMvD,UAAU,GAAGmK,oBAA8B9M,IAChDuD,EAAO,2BAAD,OAA4B2C,EAAMtD,cAE9CgB,OAAM,SAAAC,GAAK,OAAIN,EAAOM,UCb/B,IAmCakJ,GAAe,SAACtH,EAA6ByC,EAA2B1H,GACnF,IAAMwM,EAA6B,2BAAQ9E,EAAYnH,MAAMS,cAAkBiE,GACzEwH,EAAUC,GAA6BF,GAC1CrJ,MAAK,kBAAMuE,EAAYlH,UAAS,SAAA8C,GAAI,kCAASA,GAAT,IAAetC,aAAcwL,UAGpE,OADAG,IAAMF,QAAQA,EAAS,CAACG,QAAS5M,EAAE,0BAA2B6M,QAAS7M,EAAE,yBAA0BqD,MAAOrD,EAAE,yBACrGyM,GAGM1M,GA5CA,WACb,IAAM2H,EAAcpG,IAepB,OAbAwL,qBAAU,WACR7J,EAAO8J,QAAQpF,OACf+E,KACGvJ,MAAK,SAAA8B,GACJyC,EAAYlH,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACtC,aAAciE,OAC1DhC,EAAO8J,QAAQlF,UAEhBzE,OAAM,SAAAC,GAEL2J,MAAM3J,QAET,IAEEqE,EAAYnH,MAAMS,aAGrB,eAAC,EAAD,WACE,qBAAKd,UAAU,MAAf,iBACA,cAAC+M,GAAA,EAAD,CAAW/M,UAAU,MAArB,SACE,eAACgN,GAAA,EAAD,CAAKtL,QAAQ,QAAb,UACE,cAACsL,GAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASjN,UAAU,WAAWC,GAAG,SAASiN,OAAK,EAA/C,2BACV,cAACF,GAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASjN,UAAU,WAAWC,GAAG,gBAAjC,sBACV,cAAC+M,GAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASjN,UAAU,WAAWC,GAAG,cAAjC,2BACV,cAAC+M,GAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASjN,UAAU,WAAWC,GAAG,kBAAjC,4BACV,cAAC+M,GAAA,EAAIC,KAAL,UAAU,cAAC,IAAD,CAASjN,UAAU,WAAWC,GAAG,aAAjC,0BACV,cAAC+M,GAAA,EAAIC,KAAL,CAAUjN,UAAU,UAApB,SAA8B,eAAC,IAAD,CAASA,UAAU,WAAWC,GAAG,iBAAjC,UAAkD,cAAC,KAAD,CAAYsI,MAAO,CAAC4E,UAAW,UAAjF,wBAZO,cAAC,WAAD,K,mBCxBhC,YAACnF,GAQd,IAAM4C,EAAQ5C,EAAME,OAAOY,SAAS+B,MAAQ7C,EAAME,OAAOY,SAASgC,QAqB5DsC,EAAkBpF,EAAMqF,OAAO5G,OAAS,EAAI,YAAc,GAC1D6G,EAAgBtF,EAAMqF,OAAO5G,OAAS,EAnB1C,oBAAIzG,UAAU,eAAd,SACGgI,EAAMqF,OAAO3O,KAAI,SAAC0I,EAAOiE,GAAR,OAEd,oBAAIrL,UAAU,WAAd,SACE,wBACEuN,KAAK,SACLvN,UAAS,iCAA4BgI,EAAMwF,kBAAoBpG,EAAMrB,KAAO,SAAW,IACvF0H,QAAS,kBAAMzF,EAAM0F,mBAAmBtG,EAAMrB,OAHhD,SAIkB,SAAfqB,EAAMrB,KAAkB6E,EAAQxD,EAAMrB,QALbsF,QAaX,8BAAMT,IAKjC,OACE,eAAC+C,GAAA,EAAMC,OAAP,CAAc5N,UAAWoN,EAAzB,UACE,8BAAME,IACN,sBAAKtN,UAAU,+BAAf,UACGgI,EAAM6F,kBAAqB,wBAAQN,KAAK,SAASvN,UAAU,MAAMyN,QAASzF,EAAM6F,iBAArD,SAAuE,mBAAG7N,UAAU,oBAChH,sBAAMA,UAAU,oBAChB,wBAAQuN,KAAK,SAASvN,UAAU,iBAAiB,aAAW,QAAQyN,QAASzF,EAAM8F,wB,8BCrC9EC,GACO,SAAC/F,GACjB,IAAKA,EAAMgG,OAAOzE,UAEhB,OADAhL,QAAQC,MAAR,4CAAmDwJ,EAAMiG,WAAWnF,SAASC,KAA7E,uBAAgGf,EAAMgG,OAAOnP,GAA7G,aACO,KAET,IAAM0K,EAAYvB,EAAMgG,OAAOzE,UAAUC,SAAWxB,EAAMgG,OAAOzE,UAAUG,UAAY1B,EAAMgG,OAAOzE,UAAUI,YAC9G,OAAO3B,EAAMiG,WAAWnF,SAASc,OAAOL,IAP/BwE,GAUS,SAAoC/F,EAA4CkG,GAAgE,IAAD,EAC3J9F,EAAQ,UAAGJ,EAAMiG,WAAWhF,oBAApB,aAAG,EAA+BL,MAAK,SAAAC,GAAC,OAAIA,EAAEhK,KAAOqP,KAKnE,MAAO,CAAC9F,EAJOA,GAAYA,EAASmB,UAChCvB,EAAMiG,WAAWnF,SAASc,OAAOxB,EAASmB,UAAUC,SAAWpB,EAASmB,UAAUG,UAAYtB,EAASmB,UAAUI,kBACjH5I,IAdKgN,GAmBO,SAACvG,EAA2BQ,EAA4CvH,EAAeqJ,GACvG,IAAMqE,EAAoBrE,GAAiB9B,EAAMgG,OAAOzE,UACxD,IAAK4E,EAAmB,OAAO,EAE/B,IAAMlN,EAAUuG,EAAYnH,MAAMY,QAC5BiH,EAAM,OAAGjH,QAAH,IAAGA,OAAH,EAAGA,EAAS2H,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SAASC,OAASf,EAAMiG,WAAWnF,SAASC,QAChF,IAAKb,EAAQ,OAAO,EAEpB,IAAMqB,EAAY4E,EAAkB3E,SAAW2E,EAAkBzE,UAAYyE,EAAkBxE,YAK/F,OAJezB,EAAOY,SAASc,OAAOL,GAC/B6E,IAAM3N,EAEb+G,EAAYlH,UAAS,SAAAuI,GAAC,kCAASA,GAAM,CAAC5H,gBAC/B,GC9BEoN,GAAY,SAACrG,GACxB,IAAMsG,EAASP,GAAgC/F,GAU/C,OACE,eAACuG,GAAA,EAAD,WACE,cAAC,GAAD,2BACA,cAAC,GAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAQ/M,QAAoC,OAArB,OAAN4M,QAAM,IAANA,OAAA,EAAAA,EAAQF,IAAIM,YAAqB,UAAY,YAAajB,QAbjE,WAChB1K,EAAOP,cAAcqC,KAAK,CAACE,KAAMiD,EAAMgG,OAAOW,UAAUC,UAAW5J,UAAU,KAYvE,gBACA,cAACyJ,GAAA,EAAD,CAAQ/M,QAAoC,OAArB,OAAN4M,QAAM,IAANA,OAAA,EAAAA,EAAQF,IAAIM,YAAqB,YAAc,UAAWjB,QAVhE,WACjB1K,EAAOP,cAAcqC,KAAK,CAACE,KAAMiD,EAAMgG,OAAOW,UAAUE,WAAY7J,UAAU,KASxE,0B,mBCdG8J,GAAY,SAAC9G,GACxB,IAAMR,EAAcpG,IACdkN,EAASP,GAAgC/F,GACzC+G,GAAqB,OAANT,QAAM,IAANA,OAAA,EAAAA,EAAQF,KAAMY,OAAOV,EAAOF,MAASpG,EAAMgG,OAAOW,UAAUM,IAAMjH,EAAMgG,OAAOW,UAAUO,KAAO,EAAIlH,EAAMgG,OAAOW,UAAUO,IAChJ,EAA0BhO,mBAAS6N,GAAnC,mBAAOtO,EAAP,KAAc0O,EAAd,KAEMC,EAAmB,CACvBF,IAAKlH,EAAMgG,OAAOW,UAAUO,IAC5BD,IAAKjH,EAAMgG,OAAOW,UAAUM,KAGxBI,EAAU,SAAC5O,GAAD,OAAmB6O,KAAKL,IAAIK,KAAKJ,IAAIlH,EAAMgG,OAAOW,UAAUM,IAAKxO,GAAQuH,EAAMgG,OAAOW,UAAUO,MAE1GK,EAAkB,SAAC9O,GAAD,OAAmBsN,GAAgCvG,EAAaQ,EAAOvH,EAAMiO,aAiBrG,OACE,eAACH,GAAA,EAAD,WACE,cAAC,GAAD,qBACA,eAAC,GAAD,WACE,cAACiB,GAAA,EAAD,aACEjH,MAAO,CAACkH,MAAO,QACfzP,UAAU,OACVuN,KAAK,SACL9M,MAAOA,EACPiP,SAAU,SAAAlK,GAAK,OAjBI,SAAC/E,GAC1B,IAAMgF,EAAS4J,EAAQ5O,GACvB0O,EAAS1J,GACT,IAAMV,EAAOiD,EAAMgG,OAAOW,UAAUgB,QAAQpJ,QAAQ,UAAWd,EAAOiJ,SAAS,KAC/E3L,EAAOP,cAAcqC,KAAK,CAACE,KAAMA,IACjCwK,EAAgB9J,GAYSmK,CAAmBZ,OAAOxJ,EAAMqK,OAAOpP,UACtD2O,IAGN,cAACU,GAAA,EAAD,aACErP,MAAOA,EACPiP,SAAU,SAAAlK,GAAK,OAAI2J,EAASH,OAAOxJ,EAAMqK,OAAOpP,SAChDsP,UA/BoB,WAC1B,IAAMtK,EAAS4J,EAAQ5O,GACjBsE,EAAOiD,EAAMgG,OAAOW,UAAUgB,QAAQpJ,QAAQ,UAAWd,EAAOiJ,SAAS,KAC/E3L,EAAOP,cAAcqC,KAAK,CAACE,KAAMA,IACjCwK,EAAgB9J,KA4BN2J,W,SCpDP,SAASY,GAAmBnG,EAAaoG,GAG9C,IAAMC,EAAY,WAEhB,GAAsB,qBAAX/R,OACT,OAAO8R,EAGT,IACE,IAAME,EAAOhS,OAAOiS,aAAaC,QAAQxG,GACzC,OAAOsG,EAAQzF,KAAKC,MAAMwF,GAAcF,EACxC,MAAO9M,GAEP,OADA5E,QAAQuE,KAAR,+CAAgD+G,EAAhD,WAAyD1G,GAClD8M,IAMX,EAAsC/O,mBAAYgP,GAAlD,mBAAOI,EAAP,KAAoBC,EAApB,KAkDA,OArBA3D,qBAAU,WACR2D,EAAeL,OACd,IAEHtD,qBAAU,WACR,IAAM4D,EAAsB,WAC1BD,EAAeL,MASjB,OALA/R,OAAOyH,iBAAiB,UAAW4K,GAGnCrS,OAAOyH,iBAAiB,gBAAiB4K,GAElC,WACLrS,OAAOwH,oBAAoB,UAAW6K,GACtCrS,OAAOwH,oBAAoB,gBAAiB6K,MAE7C,IAEI,CAACF,EA9CsB,SAAA7P,GAEP,oBAAVtC,QACTI,QAAQuE,KAAR,+CACqC+G,EADrC,mDAKF,IAEE,IAAM4G,EAAWhQ,aAAiBiQ,SAAWjQ,EAAM6P,GAAe7P,EAGlEtC,OAAOiS,aAAaO,QAAQ9G,EAAKa,KAAKwB,UAAUuE,IAGhDF,EAAeE,GAGftS,OAAO4I,cAAc,IAAI5E,MAAM,kBAC/B,MAAOgB,GACP5E,QAAQuE,KAAR,+CAAgD+G,EAAhD,WAAyD1G,MCvCxD,IAAMyN,GAAU,SAAC5I,GACtB,IAAMR,EAAcpG,IACdkN,EAASP,GAAgC/F,GAC3C+G,GAA+B,OAANT,QAAM,IAANA,OAAA,EAAAA,EAAQF,KAAR,OAAcE,QAAd,IAAcA,OAAd,EAAcA,EAAQF,IAAI5H,MAAM,KAAK9H,KAAI,SAAAmK,GAAC,OAAImG,OAAOnG,MAAM,CAAC,IAAK,IAAK,KACvE,IAAxBkG,EAAatI,SACflI,QAAQuE,KAAR,wDAAuDwL,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAQF,MAC/DW,EAAe,CAAC,IAAK,IAAK,MAG5B,MAA0B7N,mBAAmB,CAACkI,EAAG2F,EAAa,GAAI8B,EAAG9B,EAAa,GAAItD,EAAGsD,EAAa,KAAtG,mBAAO+B,EAAP,KAAcC,EAAd,KACA,EAAsCf,GAAgB,cAAe,GAArE,mBAAOgB,EAAP,KAAoBC,EAApB,KAEM1B,EAAkB,SAAC2B,GAAD,OAAmBnD,GAAgCvG,EAAaQ,EAA7C,UAAuDkJ,EAAI9H,EAA3D,YAAgE8H,EAAIL,EAApE,YAAyEK,EAAIzF,KAClH0F,EAAqB,SAACD,GAC1BH,EAASG,GAET,MAAeE,GAAQF,GAAvB,mBAAOrI,EAAP,KAAUwI,EAAV,KACI1B,EAAU3H,EAAMgG,OAAOW,UAAUgB,QAAQpJ,QAAQ,MAAOsC,EAAE6F,SAAS,KACvEiB,EAAUA,EAAQpJ,QAAQ,MAAO8K,EAAE3C,SAAS,KAC5C3L,EAAOP,cAAcqC,KAAK,CAACE,KAAM4K,IACjCJ,EAAgB2B,IAaZI,EAAoB,SAACzS,GAAD,OACvB,wBAAQmB,UAAS,gDAA2CgR,GAAenS,EAAK,SAAW,IAAM0O,KAAK,SAASE,QAAS,kBAAMwD,EAAepS,IAA7I,SAAmJA,KAEtJ,OACE,eAAC0P,GAAA,EAAD,WACE,cAAC,GAAD,CAAmBvO,UAAU,mBAA7B,SACE,gCACE,+CACA,gCACGsR,EAAkB,GAClBA,EAAkB,GAClBA,EAAkB,WAIzB,cAAC,GAAD,UACE,sBAAKtR,UAAU,cAAf,UACmB,IAAhBgR,GAAsB,cAAC,KAAD,CAAWF,MAAOA,EAAOpB,SAAU,SAAAlK,GAAK,OAAIuL,EAASvL,EAAM0L,MAAMK,iBA3BvE,WACvB,MAAeH,GAAQN,GAAvB,mBAAOjI,EAAP,KAAUwI,EAAV,KAEI1B,EAAU3H,EAAMgG,OAAOW,UAAUgB,QAAQpJ,QAAQ,MAAOsC,EAAE6F,SAAS,KACvEiB,EAAUA,EAAQpJ,QAAQ,MAAO8K,EAAE3C,SAAS,KAE5C3L,EAAOP,cAAcqC,KAAK,CAACE,KAAM4K,IACjCJ,EAAgBuB,MAqBO,IAAhBE,GAAsB,cAAC,KAAD,CAAcF,MAAOA,EAAOpB,SAAU,SAAAlK,GAAK,OAAI2L,EAAmB3L,EAAM0L,MAAMM,SAAS,OAAO/B,MAAM,UAC1G,IAAhBuB,GAAsB,cAAC,KAAD,CAAeF,MAAOA,EAAOpB,SAAU,SAAAlK,GAAK,OAAI2L,EAAmB3L,EAAM0L,iBAOpGE,GAAU,SAACF,GAGf,IAAMO,EAAOP,EAAIzF,EAAI,OAAW6D,KAAKoC,KAAKR,EAAIzF,EAAI,MAAT,MAAiC,KAAQyF,EAAIzF,EAAI,MACpFkG,EAAST,EAAIL,EAAI,OAAWvB,KAAKoC,KAAKR,EAAIL,EAAI,MAAT,MAAiC,KAAQK,EAAIL,EAAI,MAEtFe,EAAQV,EAAI9H,EAAI,OAAWkG,KAAKoC,KAAKR,EAAI9H,EAAI,MAAT,MAAiC,KAAQ8H,EAAI9H,EAAI,MAIrFyI,EAAU,QAANJ,EAAyB,QAARE,EAA0B,QAAPC,EACxCE,EAAU,QAANL,EAAyB,QAARE,EAA0B,QAAPC,EACxCG,EAAU,MAANN,EAAyB,OAARE,EAA0B,QAAPC,EAK1C/I,EAAKgJ,GAAKA,EAAIC,EAAIC,GAClBV,EAAKS,GAAKD,EAAIC,EAAIC,GAKtB,OAHIC,MAAMnJ,KAAIA,EAAI,GACdmJ,MAAMX,KAAIA,EAAI,GAEX,CAACrC,QAAY,MAAJnG,GAAWoJ,QAAQ,IAAKjD,QAAY,MAAJqC,GAAWY,QAAQ,MCzFxDC,GAAiB,SAAClK,GAC7B,IAAMmK,EAAazH,KAAKwB,UAAUlE,EAAMgG,QAClCoE,EAAa1H,KAAKwB,UAAU6B,GAAgC/F,IAElE,OACE,qCACE,oDAAuBA,EAAMgG,OAAOnP,MACpC,sBAAKmB,UAAU,mBAAf,UACE,8BAAMmS,IACLC,GAAe,qBAAKpS,UAAU,OAAf,SAAuBoS,WCHlCC,GAAa,SAACrK,GACzB,MAAkC9G,qBAAlC,mBAAOlB,EAAP,KAAkBiI,EAAlB,KAKA,OAJwB,IAApBD,EAAMsK,WAAoB1F,qBAAU,kBAAM3E,EAAaD,EAAMuK,iBAAgB,CAACvK,EAAMxH,YACnE,IAAjBwH,EAAMwK,QAAkB5F,qBAAU,kBAAM3E,EAAaD,EAAMyK,eAAc,IAE7ElR,YAAW,kBAAM0G,EAAaD,EAAMyK,eAAczK,EAAM0K,WAAa,KAC7D,sBAAM1S,UAAWA,EAAjB,SAA6BgI,EAAMxH,YCdhCmS,GAAuC,SAAC3K,GACnD,OACE,cAAC,GAAD,CAAYuK,cAAc,6BAA6BE,YAAY,kBAAkBH,WAAW,EAAME,QAAQ,EAA9G,SACGxK,EAAMxH,YCGAoS,GAAoB,SAAC5K,GAChC,IAAMsG,EAASP,GAAgC/F,GACzCvH,GAAc,OAAN6N,QAAM,IAANA,OAAA,EAAAA,EAAQF,KAAM/G,SAASiH,EAAOF,IAAK,IAAIM,WAAa,KAElE,OACE,eAACH,GAAA,EAAD,WACE,cAAC,GAAD,2BACA,eAAC,GAAD,WACG9N,GAAU,cAAC,GAAD,UAAoBA,KAC7BA,GAAU,sBAAMT,UAAU,qCAAhB,4BCPP6S,GAAe,SAAC7K,GAC3B,IAAMR,EAAcpG,IACdgO,EAAmB,CACvBF,IAAKlH,EAAMgG,OAAOW,UAAUO,IAC5BD,IAAKjH,EAAMgG,OAAOW,UAAUM,KAGxBX,EAASP,GAAgC/F,GACzC+G,GAAqB,OAANT,QAAM,IAANA,OAAA,EAAAA,EAAQF,KAAMY,OAAOV,EAAOF,MAASgB,EAAiBH,IAAMG,EAAiBF,KAAO,EAAIE,EAAiBF,IAC9H,EAA0BhO,mBAAS6N,GAAnC,mBAAOtO,EAAP,KAAc0O,EAAd,KAEME,EAAU,SAAC5O,GAAD,OAAmB6O,KAAKL,IAAIK,KAAKJ,IAAIlH,EAAMgG,OAAOW,UAAUM,IAAKxO,GAAQuH,EAAMgG,OAAOW,UAAUO,MAC1G4D,EAAiB,SAACrS,GAAD,OAAmBsN,GAAgCvG,EAAaQ,EAAOvH,EAAMiO,aAkBpG,OACE,eAACH,GAAA,EAAD,WACE,eAAC,GAAD,WAAoBvG,EAAMgG,OAAO+E,OAAS,QAA1C,OACA,eAAC,GAAD,WACE,cAACvD,GAAA,EAAD,aACEjH,MAAO,CAACkH,MAAO,SACfzP,UAAU,mBACVuN,KAAK,SACL9M,MAAOA,EACPiP,SAAU,SAAAlK,GAAK,OAlBI,SAAC/E,GAC1B,IAAMgF,EAAS4J,EAAQ5O,GACvB0O,EAAS1J,GAET,IAAMV,EAAOiO,GAAchL,EAAMgG,OAAOW,UAAUgB,QAASlK,GAC3D1C,EAAOP,cAAcqC,KAAK,CAACE,KAAMA,IACjC+N,EAAerN,GAYUmK,CAAmBZ,OAAOxJ,EAAMqK,OAAOpP,UACtD2O,IAGN,cAACU,GAAA,EAAD,aACErP,MAAOA,EACPiP,SAAU,SAAAlK,GAAK,OAAI2J,EAASH,OAAOxJ,EAAMqK,OAAOpP,SAChDsP,UAhCoB,WAC1B,IAAMtK,EAAS4J,EAAQ5O,GACjBsE,EAAOiO,GAAchL,EAAMgG,OAAOW,UAAUgB,QAASlK,GAC3D1C,EAAOP,cAAcqC,KAAK,CAACE,KAAMA,IACjC+N,EAAerN,KA6BL2J,WAOR4D,GAAgB,SAACrD,EAAiBlP,GAAlB,OAA4CkP,EAC/DpJ,QAAQ,UAAW9F,EAAMiO,SAAS,KAClCnI,QAAQ,cAAe9F,EAAMiO,aCvDnBuE,GAAgB,SAACjL,GAC5B,IAAMkL,EAAYnF,GAAgC/F,GAClD,EAAmC+F,GAAuD/F,EAAO,uBAAjG,mBAAOmL,EAAP,KAAqBC,EAArB,KAEA,IAAKF,EAIH,OAHAtG,qBAAU,WACRH,IAAMtJ,MAAN,WAAgB6E,EAAMgG,OAAOnP,GAA7B,kCACC,IACK,6BAGV,IAAKuU,EAIH,OAHAxG,qBAAU,WACRH,IAAMtJ,MAAM,qDACX,IACK,6BAGV,MAAsBjC,mBAASgS,EAAU9E,KAAO,IAAhD,mBAAO9F,EAAP,KAAY+K,EAAZ,KACA,EAAwBnS,mBAASkS,EAAYhF,KAAO,OAApD,mBAAOkF,EAAP,KAAaC,EAAb,KACM/L,EAAcpG,IA2CpB,OACE,eAACmN,GAAA,EAAD,WACE,cAAC,GAAD,4BACA,cAAC,GAAD,UACE,sBAAKvO,UAAU,cAAf,UACE,uBAAOA,UAAU,eAAewT,KAAK,kBAAkBC,YAAY,oCAAoChT,MAAO6H,EAAKoH,SApCtG,SAAClK,GACpB,IAAM/E,EAAS+E,EAAMqK,OAA4BpP,MACjD4S,EAAO5S,GAEPsN,GAAgCvG,EAAaQ,EAAOvH,MAiC9C,wBAAQT,UAAS,oCAAwC,OAATsT,EAAgB,SAAW,IAAM/F,KAAK,SAASE,QA9BpF,WACjBlP,QAAQE,IAAI,QACZ8U,EAAQ,OACRxF,GAAgCvG,EAAaQ,EAAO,MAAOmL,EAAc5J,WAEzE8J,EAAO,IACPtF,GAAgCvG,EAAaQ,EAAO,IAEhDmL,EAAcpQ,EAAOP,cAAcqC,KAAK,CAACE,KAAMoO,EAAaxE,UAAUE,aACrEtQ,QAAQuE,KAAK,kFAqBZ,SAAoH,mBAAG9C,UAAU,cACjI,wBAAQA,UAAS,gDAAoD,OAATsT,EAAgB,SAAW,IAAM/F,KAAK,SAASE,QAnBhG,WACZnF,GAAsB,IAAfA,EAAI7B,QAKhB8M,EAAQ,MACRxF,GAAgCvG,EAAaQ,EAAO,KAAMmL,EAAc5J,WACpE4J,EAAcpQ,EAAOP,cAAcqC,KAAK,CAACE,KAAMoO,EAAaxE,UAAUC,UAAUrI,QAAQ,UAAW+B,KAClG/J,QAAQuE,KAAK,iFAPhB2J,IAAMtJ,MAAM,6BAA8B,CAACuQ,KAAM,kBAiB7C,SAAgI,mBAAG1T,UAAU,cAC7I,0BAAUnB,GAAG,kBAAb,SAjDe,CACrB,qDACA,uDACA,6CACA,0CACA,kCACA,wCACA,sCA2CcH,KAAI,SAAC4J,EAAK+C,GAAN,OAAa,wBAAgB5K,MAAO6H,GAAV+C,iBC5EnCsI,GAAoB,SAAC3L,GAAgD,IAAD,MACzEsG,EAASP,GAAgC/F,GAC/C,IAAKsG,EAAQ,OAAQ,qBAAKtO,UAAU,sBAAf,2BACrB,IAAM4T,EAAY5E,QAAO,UAAAhH,EAAMgG,OAAOvD,iBAAb,iCAA6CiE,aAAc,KAE9EjJ,EADQuJ,QAAO,UAAAV,EAAOuF,cAAP,eAAenF,cAAf,UAA6BJ,EAAOF,WAApC,aAA6B,EAAYM,aAAc,OACnDkF,EAEzB,OACE,eAACrF,GAAA,EAAD,WACE,eAAC,GAAD,WAAoBD,EAAOyE,OAAS,QAApC,OACA,cAAC,GAAD,UACE,cAAC,GAAD,UAAoBtN,EAAS,KAAO,cCX/BqO,GAAc,SAAC9L,GAC1B,IAAMsG,EAASP,GAAgC/F,GAC/C,IAAKsG,EAAQ,OAAQ,qBAAKtO,UAAU,sBAAf,2BAErB,IAAMS,EAAQ6N,EAAOuF,QAAUvF,EAAOF,IAChC2F,EAAO/L,EAAMgG,OAAOvD,iBAAb,qBAAwD,GAErE,OACE,eAAC8D,GAAA,EAAD,WACE,eAAC,GAAD,WAAoBD,EAAOyE,OAAS,QAApC,OACA,cAAC,GAAD,UACE,cAAC,GAAD,UAAoBtS,EAAK,UAAMA,EAAN,YAAesT,GAAS,kB,UCF5CC,GAAsB,SAAChG,EAAwBC,GAC1D,IAAMgG,EAAoD,CACxDjG,SACAC,cAGF,OAAQD,EAAOnP,IACb,IAAK,cACH,OAAQ,cAAC,GAAD,2BAAeoV,GAAf,IAA6BjG,OAAQiG,EAAajG,UAC5D,IAAK,aACH,OAAQ,cAAC,GAAD,2BAAeiG,GAAf,IAA6BjG,OAAQiG,EAAajG,UAC5D,IAAK,WACH,OAAQ,cAAC,GAAD,2BAAaiG,GAAb,IAA2BjG,OAAQiG,EAAajG,UAC1D,IAAK,kBACH,OAAQ,cAAC,GAAD,2BAAmBiG,GAAnB,IAAiCjG,OAAQiG,EAAajG,UAChE,IAAK,sBACH,OAAQ,6BAEV,IAAK,gBACH,OAAQ,cAAC,GAAD,2BAAkBiG,GAAlB,IAAgCjG,OAAQiG,EAAajG,UAE/D,IAAK,qBACH,OAAQ,cAAC,GAAD,2BAAuBiG,GAAvB,IAAqCjG,OAAQiG,EAAajG,UACpE,IAAK,gBACH,OAAQ,cAAC,GAAD,2BAAuBiG,GAAvB,IAAqCjG,OAAQiG,EAAajG,UACpE,IAAK,SACH,OAAQ,cAAC,GAAD,2BAAiBiG,GAAjB,IAA+BjG,OAAQiG,EAAajG,UAE9D,QACE,OAAQ,cAAC,GAAD,eAAoBiG,MAIrBC,GAA2E,SAAClM,GACvF,OAAQ,cAACmM,GAAA,EAAD,CAAKC,GAAG,IAAR,SAAapM,EAAMxH,YAGhB6T,GAA2E,SAACrM,GACvF,OAAQ,cAACmM,GAAA,EAAD,UAAMnM,EAAMxH,YCjDP,YAACwH,GAKd,IAAMZ,EAAQY,EAAMqF,OAAOzE,MAAK,SAAAC,GAAC,OAAIA,EAAE9C,OAASiC,EAAMwF,mBACtD,OAAKpG,EAGH,cAACuG,GAAA,EAAM/B,KAAP,CAAY5L,UAAU,+BAAtB,SACGoH,EAAMgB,SAAS1J,KAAI,SAAC4V,EAASjJ,GAAV,OACjB,qBAAarL,UAAU,uBAAvB,SAA+CgU,GAAoBM,EAAStM,EAAME,SAAxEmD,QALG,0CAAarD,EAAMwF,gBAAnB,mBCRP,cACb,IAAM+G,EAAUC,cAKhB,OAJA5H,qBAAU,WACR2H,EAAQjL,KAAK,YACbmD,IAAMtJ,MAAM,kCACX,IACK,8BCEK,cACb,MAAuBsR,cAAhB/L,EAAP,EAAOA,KAAMR,EAAb,EAAaA,OACb,EAAwBhH,oBAAS,GAAjC,mBAAOuG,EAAP,KAAaiN,EAAb,KACMH,EAAUC,cACVhN,EAAcpG,IAEd6M,EAAaxF,EAAkBjB,EAAakB,EAAMR,GACxD,IAAK+F,EAAY,OAAQ,cAAC,GAAD,IAEzB,IAAMZ,EAAS5E,GAAyBwF,GACxC,EAA8C/M,mBAASmM,EAAO,GAAGtH,MAAjE,mBAAOyH,EAAP,KAAwBE,EAAxB,KAEMiH,EAAc,kBAAMD,GAAQ,IAOlC,OACE,eAAC/G,GAAA,EAAD,CAAOlG,KAAMA,EAAMmN,OAAQD,EAAaE,SAPvB,kBAAMtT,YAAW,kBAAMgT,EAAQjL,KAAK,cAAa,MAOlE,UACE,cAAC,GAAD,CACE+D,OAAQA,EACRnF,OAAQ+F,EACRT,gBAAiBA,EACjBE,mBAAoBA,EACpBI,eAAgB6G,EAChB9G,iBAbgB,WACpBtP,QAAQE,IAAIwP,GACZxB,IAAME,QAAQ,yBAA0B,CAAC+G,KAAM,oBAc7C,cAAC,GAAD,CACErG,OAAQA,EACRnF,OAAQ+F,EACRT,gBAAiBA,Q,2BCdV3N,GAxBA,CACbiV,aAAc,SAAsB7V,EAAc8V,GAChD9V,EAAE+V,iBAIF,IALiE,EAK3DjQ,EAAY,GAL+C,eAO7C3G,IAAEa,EAAE4Q,QAAQjH,KAAK,UAP4B,IAOjE,2BAA+C,CAAC,IAArCqM,EAAoC,QACvCpW,EAAKT,IAAE6W,GAAOC,KAAK,MACzB,GAAU,MAANrW,EAAY,OAEc,aAA1BT,IAAE6W,GAAOC,KAAK,SACiB,IAA7B9W,IAAE6W,GAAOC,KAAK,WAAqBnQ,EAAKlG,GAAMT,IAAE6W,GAAOE,KAAK,kBAAoB,OAC/EpQ,EAAKlG,GAAMT,IAAE6W,GAAOE,KAAK,oBAAsB,QAEpDpQ,EAAKlG,GAAMT,IAAE6W,GAAO7G,OAfyC,8BAmBjE2G,EAAOhQ,K,gBCrBLqQ,GAAY,SAACpN,GACjB,IAAOqN,EAA0BrN,EAA1BqN,SAAaC,EAApB,aAAiCtN,EAAjC,IAGA,OACE,cAACuN,GAAA,EAAD,yBAAMF,SAHa,SAAC7P,GAAD,OAAsBpH,GAAE0W,aAAatP,EAAO6P,KAG7BC,GAAlC,aACGtN,EAAMxH,aCJPgV,GAAqB,CAAC,gBAAiB,cAAe,0BAA2B,yBACjFC,GAAmB,CAAC,kBAAmB,mBAM9B,cACb,MAAiCvU,mBAAmB,IAApD,mBAAOwU,EAAP,KAAiBC,EAAjB,KACA,EAAgDzU,mBAAiB,IAAjE,mBAAO0U,EAAP,KAAyBC,EAAzB,KACA,EAA6B3U,oBAAkB,GAA/C,mBAAO4U,EAAP,KAAeC,EAAf,KAEMC,EAAcC,iBAAOP,GACrBQ,EAAYD,iBAAOH,GAEnBK,EAAc,SAACnP,GACnB,IAAIkP,EAAUE,QAAd,CAEA,IAAMrR,EAAc,CAAIiC,EAAQyC,OAAO,EAAG,MAAtB,mBAA+BuM,EAAYI,UACzDC,EAAWtR,EAAK0B,OApBD,GAqBjB4P,EAAW,GAAGtR,EAAKuR,OAAOvR,EAAK0B,OAAS4P,EAAUA,GAEtDL,EAAYI,QAAUrR,EACtB4Q,EAAa5Q,KAeTwR,EAAmB,SAAC/Q,GACxB,IACMT,EADKS,EAAMqK,OACD2G,UAChBX,EAAoB9Q,IAGhB0R,EAAe,SAACzP,GACpB,IAAMjC,EAAOiC,GAAW4O,EACxB7S,EAAOP,cAAcqC,KAAK,CAACE,KAAMA,EAAMC,UAAU,KAsBnD,OARA4H,qBAAU,WACR,IAAMrH,EAAWxC,EAAOP,cAAcyD,UAAU6F,IAAkC,SAACtG,GACjF,IAAMwB,EAAUxB,EAAMtD,SACtBiU,EAAYnP,MAEd,OAAO,kBAAMjE,EAAOP,cAAc4D,YAAYb,MAC7C,IAID,eAAC,EAAD,WACE,cAAC,GAAD,CAAW8P,SAvCA,SAACtQ,GACTA,EAAK2R,gBACVP,EAAY,IAAD,OAAKpR,EAAK2R,gBACrB3T,EAAOP,cAAcqC,KAAK,CAACE,KAAMA,EAAK2R,kBAoCpC,SACE,eAAC/K,EAAA,EAAD,WACE,cAACA,EAAA,EAAKiC,OAAN,sDACA,eAACjC,EAAA,EAAKC,KAAN,WACE,sBAAK5L,UAAU,WAAf,UACE,uBAAOA,UAAU,oBAAjB,6BACA,qBAAKA,UAAU,MAAf,SACE,uBAAOuN,KAAK,OAAOvN,UAAU,eAAenB,GAAG,gBAAgB4B,MAAOmV,EAAkBlG,SAAU,SAAAlK,GAAK,OAAIqQ,EAAoBrQ,EAAMqK,OAAOpP,eAGhJ,sBAAKT,UAAU,MAAf,UACE,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,MAAf,UACE,8BACGwV,GAAmB9W,KAAI,SAACmK,EAAGwC,GAAJ,OACtB,wBAAgBkC,KAAK,SAASvN,UAAU,sCAAsCyN,QAAS8I,EAAvF,SAA0G1N,GAA7FwC,QAGjB,qBAAKrL,UAAU,OAAf,SACGyV,GAAiB/W,KAAI,SAACmK,EAAGwC,GAAJ,OACpB,wBAAgBkC,KAAK,SAASvN,UAAU,wCAAwCyN,QAAS,WACvFoI,EAAoBhN,GACpB4N,EAAa5N,IAFf,SAGIA,GAHSwC,iBASvB,eAACM,EAAA,EAAKgL,OAAN,WACE,cAAClI,GAAA,EAAD,CAAQ/M,QAAQ,UAAU6L,KAAK,SAA/B,0BACA,cAACkB,GAAA,EAAD,CAAQ/M,QAAQ,YAAY6L,KAAK,SAASE,QAAS,kBAAMgJ,KAAgBzW,UAAU,OAAnF,iCAKN,eAAC2L,EAAA,EAAD,CAAM3L,UAAU,OAAhB,UACE,eAAC2L,EAAA,EAAKiC,OAAN,WACE,sDAAwB,sBAAM5N,UAAU,2BAAhB,SAA4C0V,EAASjP,YAC7E,wBAAQzG,UAAU,wCAAwCyN,QAvD/C,WACjBuI,EAAYI,QAAU,GACtBT,EAAa,KAqDP,uBACA,wBAAQ3V,UAAU,wCAAwCyN,QAAS,kBArFvD,WAClB,IAAM1I,GAAQmR,EAAUE,QACxBF,EAAUE,QAAUrR,EACpBgR,EAAWhR,GAkFoE6R,IAAzE,SAAyFd,EAAS,aAAe,kBAEnH,cAACnK,EAAA,EAAKC,KAAN,UACG8J,EAAShX,KAAI,SAACsI,EAASqE,GAAV,OAAgBrE,EAAQ6P,WAAW,KAC5C,qBAAa7W,UAAU,sDAAvB,SAA8EgH,EAAQyC,OAAO,IAAnF4B,GACV,qBAAarL,UAAU,iEAAvB,SAAyFgH,EAAQR,MAAM,KAAK9H,KAAI,SAACmK,EAAGiO,GAAJ,OACjH,sBAAe9W,UAAU,4CAAzB,SAAsE6I,GAA3DiO,OADAzL,eC/FVxL,GAlBA,SAAC,GAAyE,IAAxEkX,EAAuE,EAAvEA,UAAWhE,EAA4D,EAA5DA,MAAOU,EAAqD,EAArDA,YAAauD,EAAwC,EAAxCA,aAAwC,IAA1BzJ,KACxD0J,EAAc,CAChBxD,cACAlG,UAHoF,MAAnB,OAAmB,GAQtF,OAFIyJ,IAAcC,EAAU,2BAAQA,GAAe,CAACD,aAAcA,EAAatI,cAG7E,eAAC6G,GAAA,EAAK2B,MAAN,CAAYC,GAAI5I,KAAKvO,UAAU,OAAO+W,UAAWA,EAAjD,UACE,cAACxB,GAAA,EAAK6B,MAAN,CAAYC,QAAM,EAACjD,GAAG,IAAIkD,GAAG,IAA7B,SAAkCvE,IAClC,cAACoB,GAAA,EAAD,UACE,cAACoB,GAAA,EAAKgC,QAAN,eAAkBN,UCQXpX,GApBA,SAAC,GAAiG,IAAhGkX,EAA+F,EAA/FA,UAAWhE,EAAoF,EAApFA,MAAOyE,EAA6E,EAA7EA,eAA6E,IAA7DC,oBAA6D,MAA9C,OAA8C,MAAtCC,eAClEC,EACe,SAAnBH,GACmB,MAAnBA,GACmB,IAAnBA,IACmB,IAAnBA,IACA,EAEExP,EAAQ,CAAC4P,cAAeH,EAAcI,qBARoE,MAArB,QAAqB,GAW9G,OAFIL,IAAgBxP,EAAK,2BAAQA,GAAU,CAACwP,eAAgBG,KAG1D,cAACpC,GAAA,EAAK2B,MAAN,CAAYH,UAAWA,EAAW/W,UAAU,iBAA5C,SACE,eAACuV,GAAA,EAAK6B,MAAN,CAAYpX,UAAU,SAAtB,UACE,cAACuV,GAAA,EAAKuC,MAAN,aAAY9X,UAAU,QAAWgI,IAAQ,+BAAO+K,UCoBzClT,GAnCA,WAAO,IAAD,IACb2H,EAAcpG,IACbtB,EAAKC,YAAe,CAAC,mBAAoB,WAAzCD,EACDsI,EAAQ,UAAGZ,EAAYnH,MAAMS,oBAArB,aAAG,EAAgCiX,KAEjD,IAAK3P,EAAU,OAAQ,cAAC,WAAD,IAIvB,OACE,cAAC,EAAD,UACE,cAACuD,EAAA,EAAD,UACE,eAAC,GAAD,CAAW0J,SALA,SAACtQ,GAAD,OAA4BsH,GAAa,CAAC0L,KAAMhT,GAAOyC,EAAa1H,IAK/E,UACE,eAAC6L,EAAA,EAAKC,KAAN,WACE,cAAC,GAAD,CAAsBmL,UAAU,SAASC,aAAc5O,EAAS4P,OAAQjF,MAAOjT,EAAE,eAAgB2T,YAAa3T,EAAE,uBAChH,cAAC,GAAD,CAAsBiX,UAAU,OAAOC,aAAc5O,EAAS6P,KAAMlF,MAAOjT,EAAE,gBAAiB2T,YAAa3T,EAAE,wBAC7G,cAAC,GAAD,CAAsBiX,UAAU,WAAWC,aAAY,UAAG5O,EAAS8P,gBAAZ,aAAE,EAAqBxJ,WAAYqE,MAAOjT,EAAE,cAAe2T,YAAa3T,EAAE,sBACjI,cAAC,GAAD,CAAsBiX,UAAU,YAAYC,aAAc5O,EAAS+P,UAAWpF,MAAOjT,EAAE,eAAgB2T,YAAa3T,EAAE,uBACtH,cAAC,GAAD,CAAsByN,KAAK,WAAWwJ,UAAU,YAAYC,aAAc5O,EAASgQ,UAAWrF,MAAOjT,EAAE,kBAAmB2T,YAAa3T,EAAE,0BACzI,eAACyO,GAAA,EAAD,WACE,cAAC4F,GAAA,EAAD,CAAKC,GAAG,IAAIkD,GAAG,MACf,eAACnD,GAAA,EAAD,CAAKnU,UAAU,kBAAf,UACE,cAAC,GAAD,CAAkB+W,UAAU,aAAaS,eAAgBpP,EAASiQ,WAAYtF,MAAOjT,EAAE,oBAAqB2X,aAAc,EAAGC,eAAgB,IAC7I,cAAC,GAAD,CAAkBX,UAAU,iBAAiBS,eAAgBpP,EAASkQ,eAAgBvF,MAAOjT,EAAE,uBAAwB2X,aAAc,EAAGC,eAAgB,aAK9J,cAAC/L,EAAA,EAAKgL,OAAN,UAAa,cAAClI,GAAA,EAAD,CAAQ/M,QAAQ,UAAU6L,KAAK,SAA/B,SAAyCzN,EAAE,kCCRnDD,GA3BA,kBACb,cAAC,EAAD,UACE,qBAAKG,UAAU,+BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,oBAAd,kCACA,oBAAGA,UAAU,gBAAb,kHACuG,uBAAK,uBAD5G,yIAIA,oBAAIA,UAAU,SACd,kGAAoE,mBAAGuY,KAAK,IAAR,iCAApE,iDACA,mBAAGA,KAAK,IAAI1I,OAAQ,SAAU2I,IAAI,aAAaxY,UAAU,yBAAyBuN,KAAK,SAAvF,gCCyBO1N,GA7BA,WAAO,IAAD,EACb2H,EAAcpG,IACbtB,EAAKC,YAAe,CAAC,mBAAoB,WAAzCD,EACDsI,EAAQ,UAAGZ,EAAYnH,MAAMS,oBAArB,aAAG,EAAgC2X,KAEjD,IAAKrQ,EAAU,OAAQ,cAAC,WAAD,IAIvB,OACE,cAAC,WAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,CAAWiN,SALA,SAACtQ,GAAD,OAA2CsH,GAAa,CAACoM,KAAM1T,GAAOyC,EAAa1H,IAK9F,SACE,eAAC6L,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,KAAN,WACE,cAAC,GAAD,CAAsBmL,UAAU,OAAOC,aAAY,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAUsQ,KAAM3F,MAAOjT,EAAE,cAAe2T,YAAa3T,EAAE,sBAC5G,cAAC,GAAD,CAAsByN,KAAK,WAAWwJ,UAAU,OAAOC,aAAY,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAUuQ,KAAM5F,MAAOjT,EAAE,cAAe2T,YAAa3T,EAAE,sBAC5H,cAAC,GAAD,CAAsBiX,UAAU,KAAKC,aAAY,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAUwQ,GAAI7F,MAAOjT,EAAE,YAAa2T,YAAa3T,EAAE,oBACtG,cAAC,GAAD,CAAsBiX,UAAU,OAAOC,aAAY,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAUyQ,KAAM9F,MAAOjT,EAAE,cAAe2T,YAAa3T,EAAE,sBAC5G,cAAC,GAAD,CAAsBiX,UAAU,KAAKC,aAAY,OAAE5O,QAAF,IAAEA,OAAF,EAAEA,EAAU0Q,GAAI/F,MAAOjT,EAAE,YAAa2T,YAAa3T,EAAE,uBAExG,cAAC6L,EAAA,EAAKgL,OAAN,UAAa,cAAClI,GAAA,EAAD,CAAQ/M,QAAQ,UAAU6L,KAAK,SAA/B,SAAyCzN,EAAE,oCC1BvDiZ,GAAS,kBACpB,eAAC,WAAD,WAEI,cAAC,IAAD,CAAO7L,OAAK,EAAC8L,KAAK,IAAlB,SAAsB,cAAC,IAAD,CAAU/Y,GAAG,eACnC,cAAC,IAAD,CAAO+Y,KAAK,WAAWC,UAAWC,KAClC,cAAC,IAAD,CAAOF,KAAK,yBAAyBC,UAAWE,KAChD,cAAC,IAAD,CAAOH,KAAK,SAASC,UAAWG,KAChC,cAAC,IAAD,CAAOlM,OAAK,EAAC8L,KAAK,SAASC,UAAWI,KACtC,cAAC,IAAD,CAAOL,KAAK,cAAcC,UAAWK,KACrC,cAAC,IAAD,CAAON,KAAK,gBAAgBC,UAAWM,KACvC,cAAC,IAAD,CAAOP,KAAK,kBAAkBC,UAAWM,KACzC,cAAC,IAAD,CAAOP,KAAK,aAAaC,UAAWM,KACpC,cAAC,IAAD,CAAOP,KAAK,iBAAiBC,UAAWM,KACxC,cAAC,IAAD,CAAOP,KAAK,eAAeC,UAAWO,SCH7B,I,OAAA,SAACxR,GACd,IAAOlI,EAAKC,YAAe,iBAApBD,EACD2Z,EAAgBzR,EAAM0R,QACzBhb,KAAI,SAACiE,EAAQgX,GAAT,MAAoB,CAAChX,SAAQgX,YACjCpO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE7I,OAAOoD,KAAO0F,EAAE9I,OAAOoD,KAAO,GAAK,KAEvD,OACE,qBAAK/F,UAAU,+BAAf,SACE,cAAC,EAAD,UACE,eAAC2L,EAAA,EAAD,CAAM3L,UAAU,aAAhB,UACE,cAAC2L,EAAA,EAAKiC,OAAN,UAAc9N,EAAE,gBAChB,eAAC6L,EAAA,EAAKC,KAAN,WAC2B,GAAxB5D,EAAM0R,QAAQjT,QACb,8BAAM3G,EAAE,sBAETkI,EAAM0R,QAAQjT,OAAS,GACtB,qBAAKzG,UAAU,eAAf,SACGyZ,EAAc/a,KAAI,SAACqG,EAAMsG,GAAP,OACjB,sBAAKrL,UAAU,OAAf,UACE,eAAC,IAAD,CACEA,UAAU,gBACVC,GAAG,IACHwN,QAAS,SAACxO,GACR+I,EAAM4R,iBAAiB7U,EAAK4U,OAC5B1a,EAAE+V,kBAEJ6E,gBAAgB,OAPlB,UAOyB,mBAAG7Z,UAAU,2BAPtC,IAOkE+E,EAAKpC,OAAOoD,QAC9E,wBAAQwH,KAAK,SAASE,QAAS,kBAAMzF,EAAM8R,eAAe/U,EAAKpC,SAAS3C,UAAU,cAAlF,SAAgG,mBAAGA,UAAU,0BAT/G,eAAmCqL,YAe3C,cAACM,EAAA,EAAKgL,OAAN,CAAa3W,UAAU,aAAvB,SACE,wBAAQuN,KAAK,SAASE,QAASzF,EAAM+R,cAAe/Z,UAAU,kBAA9D,SAAiFF,EAAE,gC,8BCjChF,YAACkI,GAAmB,IAAD,IACzBlI,EAAKC,YAAe,iBAApBD,EACP,EAA8CoB,oBAAS,GAAvD,mBAAO8Y,EAAP,KAAwBC,EAAxB,KAcMC,EACJ,eAACC,GAAA,EAAD,CAAStb,GAAG,gBAAZ,UACE,cAACsb,GAAA,EAAQvM,OAAT,CAAgBuJ,GAAG,KAAnB,SAAyBrX,EAAE,uBAC3B,cAACqa,GAAA,EAAQvO,KAAT,UAAc,sBAAMwO,wBAAyB,CAACC,OAAQva,EAAE,+BAI5D,OACE,qBAAKE,UAAU,+BAAf,SACE,cAAC,EAAD,UACE,cAAC,GAAD,CAAWqV,SAtBA,SAACtQ,GAIhB,OAHIiD,EAAMsS,WAAYtS,EAAMuS,aAAaxV,GACpCiD,EAAMwS,UAAUzV,GAEdnC,QAAQtD,WAkBX,SACE,eAACqM,EAAA,EAAD,CAAM3L,UAAU,aAAhB,UACE,eAAC2L,EAAA,EAAKiC,OAAN,CAAa5N,UAAU,iCAAvB,UACE,sBAAMA,UAAU,cAAhB,SAA+BF,EAAE,gBACjC,wBAAQyN,KAAK,SAASvN,UAAU,YAAY,aAAW,QAAQyN,QAASzF,EAAMyS,iBAEhF,eAAC9O,EAAA,EAAKC,KAAN,WACE,cAAC4D,GAAA,EAAD,CAAaxP,UAAU,OAAOnB,GAAG,OAAOmY,aAAY,UAAEhP,EAAMsS,kBAAR,aAAE,EAAkBvU,KAAM0N,YAAa3T,EAAE,iCAC7F,eAAC4a,GAAA,EAAD,WACE,eAACA,GAAA,EAAWC,KAAZ,CAAiB9b,GAAG,eAApB,UAAmE,WAA/BmF,SAASC,SAASF,SAAwB,MAAQ,KAAtF,SACA,cAACyL,GAAA,EAAD,CAAa3Q,GAAG,UAAUmY,aAAY,UAAEhP,EAAMsS,kBAAR,aAAE,EAAkBnW,QAAS,mBAAiB,eAAesP,YAAa3T,EAAE,0CAIrHkI,EAAMsS,YACL,eAAC3O,EAAA,EAAKgL,OAAN,CAAa3W,UAAU,iCAAvB,UAEE,8BACE,cAAC4a,GAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,MAAMC,QAASb,EAASc,WAAW,EAAMC,SAAUhB,EAA7F,SACE,wBAAQxM,QAlCF,WACjBuM,GACLhS,EAAMkT,gBAgC4C3N,KAAK,SAASvN,UAAU,yBAA1D,SAAoFF,EAAE,4BAG1F,wBAAQyN,KAAK,SAASvN,UAAU,kBAAhC,SAAmDF,EAAE,0BAIvDkI,EAAMsS,YACN,cAAC3O,EAAA,EAAKgL,OAAN,CAAa3W,UAAU,aAAvB,SACE,wBAAQuN,KAAK,SAASvN,UAAU,kBAAhC,SAAmDF,EAAE,iCC9DxDqb,GAAiC,WAC5C,IAAM3T,EAAcpG,IACpB,EAAsCF,mBAA2B,WAAjE,mBAAOka,EAAP,KAAoBC,EAApB,KACA,EAAoCna,qBAApC,mBAAOoZ,EAAP,KAAmBgB,EAAnB,KACA,EAA8BtL,GAA+B,UAAW,IAAxE,mBAAO0J,EAAP,KAAgB6B,EAAhB,KAIMC,EAAsB,WAC1BF,OAAcva,GACdsa,EAAe,YAwCjB,MAAoB,SAAhBD,EACF,cAAC,GAAD,CAAUd,WAAYA,EAAYE,UA5BlB,SAAC7X,GACjB+W,EAAQpQ,KAAK3G,GACb4Y,EAAW7B,GACX8B,KAyBwDjB,aAtBrC,SAAC5X,GACpB,IAAMgX,EAAQD,EAAQpO,QAAQgP,GAC9BZ,EAAQC,GAAShX,EACjB4Y,EAAW7B,GAEXnb,QAAQE,IAAIib,GACZ8B,KAgBoFf,YAAae,EAAqBN,aAbnG,WACnBK,EAAW7B,EAAQtO,QAAO,SAAAzI,GAAM,OAAIA,IAAW2X,MAC/CkB,OAYM,cAAC,GAAD,CAAW9B,QAASA,EAASK,cAvCf,WACpBuB,OAAcva,GACdsa,EAAe,SAqCkDvB,eAlC5C,SAACnX,GACtB2Y,EAAc3Y,GACd0Y,EAAe,SAgCkFzB,iBAT1E,SAACD,GAIxBnS,EAAYlH,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACpC,oBAAqB2Y,W,UC5C/D8B,GAAiB,CACrBC,eAAgB,SAACC,GACf,OAAOA,EAAK9V,QAAQ,CAClBd,KAAM,gBACNO,kBAAmBuG,GAA2B,UAC9C/F,UAAW,SAACN,GAAD,OAAWoW,GAAsBpW,EAAOmW,EAAKjZ,uBAMxDkZ,GAAwB,SAACpW,EAAsBgC,GACnD,IAAMuE,EAAqBvG,EAAMvD,UAAU,GACrC4Z,EAAgC,GACtCxc,OAAOqB,OAAOmb,EAAanR,KAAKC,MAAMoB,IAEtC,IAAM9K,EAAwB4a,EAAYnd,KAAI,SAAAoK,GAC5C,IAAMV,EAAW0T,GAAkBlT,MAAK,SAAAC,GAAC,OAAIA,EAAEkT,SAASC,WAAU,SAAA3K,GAAC,OAAIA,IAAMvI,EAASgC,YAAY,KAC5F7B,GAAuB,OAARb,QAAQ,IAARA,OAAA,EAAAA,EAAU6T,SAAU3d,OAAQ,YAAsB8J,EAAS6T,SAShF,OAPAhT,GAAgBA,EAAaiT,SAAQ,SAAA1R,GACnC,GAAKA,EAAWjB,UAAhB,CAEA,IAAMA,EAAYiB,EAAWjB,UAAUC,SAAWgB,EAAWjB,UAAUG,UAAYc,EAAWjB,UAAUI,YACxGb,EAASc,OAAOL,GAAa,OAGxB,CACLT,SAAUA,EACVV,SAAUA,EACVa,aAAcA,MAIlBzB,EAAYlH,UAAS,SAAAuI,GAAC,kCAASA,GAAM,CAAC5H,QAASA,QAGlCwa,MC1CA,GACM,SAACE,EAAsBjZ,GACxCiZ,EAAK1V,UAAU4F,GAA2B,QAAQ,SAAArG,GAAK,OAAI2W,GAAS3W,EAAO9C,OAIzEyZ,GAAW,SAAC3W,EAAsB9C,GAEtC,GAAI8C,EAAMvD,UAAUwE,OAAS,EAG3B,OAFAlI,QAAQuE,KAAK,2CACbvE,QAAQuE,KAAK0C,EAAMtD,UAIrB,IAAMsF,EAAc9E,IACdzB,EAAUuG,EAAYnH,MAAMY,QAC5ByH,EAAOlD,EAAMvD,UAAU,GACvBiG,EAAM,OAAGjH,QAAH,IAAGA,OAAH,EAAGA,EAAS2H,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SAASC,OAASL,KAEtD,GAAKR,EAAL,CAKA,IAIa,EAJPnD,EAAO2F,KAAKC,MAAMnF,EAAMvD,UAAU,IAClCma,EAAWrX,EAAKsX,SAAWtX,EAAKuX,UAAYvX,EAAKwX,SACjDjO,EAASpG,EAAOY,SAASc,OAAOwS,GAEtC,GAAK9N,EAMDA,EAAOF,MAAQrJ,EAAKyX,MAAQlO,EAAOuF,SAAW9O,EAAK8O,SACrDvF,EAAOuF,OAAS9O,EAAK8O,OACrBvF,EAAOF,IAAMrJ,EAAKyX,KAClBhV,EAAYlH,UAAS,SAAAuI,GAAC,kCAASA,GAAM,CAAC5H,QAASA,aAR/C1C,QAAQC,MAAR,kBAAyB4d,EAAzB,4BAAqDlU,EAAOY,SAASC,KAArE,+BAAsFb,EAAOY,SAAS+B,YAAtG,QAA8G3C,EAAOY,SAASgC,QAA9H,WATAvM,QAAQC,MAAR,8CAAqDkK,KCpB1C,GACA,SAACiT,GACZ,OAAOA,EAAK9V,QAAQ,CAClBd,KAAM,cACNO,kBAAmBuG,GAA2B,WAC9C/F,UAAW,SAACN,GAAD,OAAWiX,GAAejX,EAAOmW,EAAKjZ,sBAKjD+Z,GAAiB,SAACjX,EAAsBgC,GAAqC,IAAD,cAC1EvG,EAAUuG,EAAYnH,MAAMY,QAClC,GAAKA,EAAL,CAKA,IAAM8D,EAAO2F,KAAKC,MAAMnF,EAAMvD,UAAU,IAClCiG,EAASjH,EAAQ2H,MAAK,SAAAC,GAAC,MAA2B,cAAvBA,EAAEC,SAASgC,WAC5C,GAAK5C,EAAL,CAKA,IAAMwU,EAAiBxU,EAAOe,aAC9B,GAAKyT,EAAL,CAMA,IAAMC,EAAW,UAAGD,EAAe9T,MAAK,SAAAC,GAAC,MAAa,gBAATA,EAAEhK,aAA9B,aAAG,EAAkD0K,UAClEoT,EAAazU,EAAOY,SAASc,OAAO+S,EAAYnT,SAAWmT,EAAYjT,UAAYiT,EAAYhT,aAAayE,IAAMrJ,EAAK6X,GAAGlO,WACzHnQ,QAAQuE,KAAK,8CAElB,IAAM+Z,EAAW,UAAGH,EAAe9T,MAAK,SAAAC,GAAC,MAAa,eAATA,EAAEhK,aAA9B,aAAG,EAAiD0K,UACjEsT,EAAa3U,EAAOY,SAASc,OAAOiT,EAAYrT,SAAWqT,EAAYnT,UAAYmT,EAAYlT,aAAayE,IAAMrJ,EAAK+X,MAAMpO,WAC5HnQ,QAAQuE,KAAK,6CAGlB,IAAMia,EAAS,UAAGL,EAAe9T,MAAK,SAAAC,GAAC,MAAa,aAATA,EAAEhK,aAA9B,aAAG,EAA+C0K,UAC7DwT,EAAW7U,EAAOY,SAASc,OAAOmT,EAAUvT,SAAWuT,EAAUrT,UAAYqT,EAAUpT,aAAayE,IAAzF,UAAkGrJ,EAAKiY,EAAvG,YAA4GjY,EAAKkY,EAAjH,YAAsHlY,EAAKmY,GACrI3e,QAAQuE,KAAK,2CAElB,IAAMqa,EAAW,UAAGT,EAAe9T,MAAK,SAAAC,GAAC,MAAa,kBAATA,EAAEhK,aAA9B,aAAG,EAAoD0K,UACpE4T,EAAajV,EAAOY,SAASc,OAAOuT,EAAY3T,SAAW2T,EAAYzT,UAAYyT,EAAYxT,aAAayE,IAAMrJ,EAAKqY,MAAMC,OAAO3O,WACnInQ,QAAQuE,KAAK,gDAElB,IAAMwa,EAAQ,UAAGZ,EAAe9T,MAAK,SAAAC,GAAC,MAAa,oBAATA,EAAEhK,aAA9B,aAAG,EAAsD0K,UACnE+T,EAAUpV,EAAOY,SAASc,OAAO0T,EAAS9T,SAAW8T,EAAS5T,UAAY4T,EAAS3T,aAAayE,IAAtF,UAA4FrJ,EAAKqY,MAAMG,oBAAvG,aAA4F,EAAyB7O,WAC9HnQ,QAAQuE,KAAK,kDAElB,IAAM0a,EAAW,UAAGd,EAAe9T,MAAK,SAAAC,GAAC,MAAa,wBAATA,EAAEhK,aAA9B,aAAG,EAA0D0K,UAC1EiU,EAAatV,EAAOY,SAASc,OAAO4T,EAAYhU,SAAWgU,EAAY9T,UAAY8T,EAAY7T,aAAayE,IAAMrJ,EAAKqY,MAAM9J,KAAK5E,WACjInQ,QAAQuE,KAAK,sDAElB0E,EAAYlH,UAAS,SAAAuI,GAAC,kCAASA,GAAM,CAAC5H,QAASA,YA9B7C1C,QAAQuE,KAAK,kDANbvE,QAAQC,MAAM,mDAPdD,QAAQC,MAAM,8CCZdif,IAAgB,EAEL,GACF,SAAC/a,GAAD,OAAuD,IAAIE,SAAc,SAACtD,EAASuD,GAC5F,GAAI4a,GAGF,OAFAlf,QAAQuE,KAAK,yCACbxD,IAIFme,IAAgB,EAChBlf,QAAQC,MAAM,kCAGduE,EAAO2a,qBAGJza,KAAKwY,GAAeC,gBACpBzY,KAAK0a,IACL1a,MAAK,SAAA0Y,GAAI,OAAIiC,GAAuCjC,EAAMjZ,MAE1DO,MAAK,kBAAM3D,OACX4D,OAAM,SAAAC,GACL5E,QAAQ4E,MAAR,uDAA8DA,IAC9DN,EAAOM,UChBT0a,GAAU,WACd,IAAMrW,EAAcpG,IACpB,EAAkB4O,GAA+B,UAAW,IAArD0J,EAAP,oBACMoE,EACsC,OAA1CtW,EAAYnH,MAAMW,qBAAgC0Y,EAAQjT,QAAUe,EAAYnH,MAAMW,oBAClF,KACA0Y,EAAQlS,EAAYnH,MAAMW,qBAGhC,OAAO8c,EAAkB,cAAC,GAAD,CAAKnb,OAAQmb,IAAsB,cAAC,GAAD,KAGxDC,GAAM,SAAC/V,GACX,IAAMR,EAAcpG,IACd4c,EAAiB/H,iBAAOzO,GA+B9B,OA7BAoF,qBAAU,WACRoR,EAAe5H,QAAU5O,IACxB,CAACA,IAEJoF,qBAAU,WACR7J,EAAO8J,QAAQtF,KAAKC,GACpBzE,EAAO8J,QAAQpF,OAEf1E,EAAO2a,qBACJza,MAAK,SAAA0Y,GAAI,OAAIA,EAAKlZ,cAAa,kBAAMub,EAAe5H,UAASpO,EAAMrF,WACnEM,MAAK,kBAAMgb,IAA6B,kBAAMD,EAAe5H,cAC7DnT,MAAK,WACJuE,EAAYlH,UAAS,SAAA8C,GAAI,kCAASA,GAAS,CAACvC,gBAAgB,OAC5DkC,EAAO8J,QAAQlF,UAEhBzE,OAAM,SAAAC,GACLqE,EAAYlH,UAAS,SAAA8C,GAAI,kCACpBA,GAAS,CACVvC,gBAAgB,EAChBG,oBAAqB,UAGzB+B,EAAOP,cAAce,aACrBR,EAAO8J,QAAQlF,OAEf8E,IAAMtJ,MAAN,+CAAoD6E,EAAMrF,OAAOwB,QAAjE,cAA8EhB,SAEjF,IAEEqE,EAAYnH,MAAMQ,eAKrB,sBAAKb,UAAU,0DAAf,UACE,yBAAQA,UAAU,WAAlB,UACE,mBAAGuY,KAAK,IAAR,SAAY,oBAAIvY,UAAU,iBAAd,uBACZ,cAAC,EAAD,OAEF,sBAAMkK,KAAK,OAAOlK,UAAU,4CAA5B,SACE,cAAC,GAAD,MAEF,wBAAQA,UAAU,gBAAlB,SACE,yDAA2B,mBAAGuY,KAAK,0BAA0B1I,OAAQ,SAAU2I,IAAI,aAAxD,yBAA3B,qBAAiI,6CAAjI,YAbI,cAAC,WAAD,KAkCG3Y,GAdA,WACb,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,YC1EKqe,GAZS,SAACC,GACnBA,GAAeA,aAAuBzN,UACxC,8BAAqBzN,MAAK,YAAgD,IAA9Cmb,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCAdM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF3a,SAAS4a,eAAe,SAM1BV,M,4cCnBA,2BAGMW,EAAY,CAAC,MACbC,EAAa,CACf,SACA,MACA,mBACA,mBACA,gBACA,iBAGYC,IAAKC,IAAIC,KACjB1X,KAAK,CACT2X,YAAaL,EAAU,GACvBM,IAAKN,EAAU,GACfO,UAMJ,WAGI,IAFA,IAAM3Z,EAAS,GAEf,MAAiBoZ,EAAjB,eAA4B,CAAvB,IAAIQ,EAAI,KACT5Z,EAAO4Z,GAAQ,GAEf,cAAeP,EAAf,eAA2B,CAAtB,IAAIQ,EAAE,KACDtG,EAAI,oBAAgBqG,EAAhB,YAAwBC,EAAG/Y,QAAQ,IAAK,KAAxC,SACV,IAEId,EAAO4Z,GAAMC,GAAMhhB,OAAQ,GAAK0a,GAChCza,QAAQC,MAAR,UAAiBwa,EAAjB,UACF,MAAO7V,GAEL5E,QAAQC,MAAR,UAAiBwa,EAAjB,eAKZ,OAAOvT,EAzBI8Z,GACXD,GAAIR,EACJU,UAAW,WAEfT,IAAKF,UAAYA,EAwBFE,YAAf,I","file":"static/js/main.9043cc3b.chunk.js","sourcesContent":["window.$ = window.jQuery = require('jquery')\n\nif (process.env.NODE_ENV !== \"development\") console.debug = () => {\n    // show info for dev environment only\n    console.log(\"Debug logs are disabled\");\n};","var map = {\n\t\"./config\": 94,\n\t\"./config.js\": 94,\n\t\"./locales/en/common\": 120,\n\t\"./locales/en/common.json\": 120,\n\t\"./locales/en/nav\": 121,\n\t\"./locales/en/nav.json\": 121,\n\t\"./locales/en/pages/devices\": 122,\n\t\"./locales/en/pages/devices.json\": 122,\n\t\"./locales/en/pages/setup-mqtt\": 123,\n\t\"./locales/en/pages/setup-mqtt.json\": 123,\n\t\"./locales/en/pages/setup-wifi\": 124,\n\t\"./locales/en/pages/setup-wifi.json\": 124,\n\t\"./locales/en/pages/welcome\": 125,\n\t\"./locales/en/pages/welcome.json\": 125\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 198;","var map = {\n\t\"./root\": 152,\n\t\"./root.json\": 152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 335;","// https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#status_codes\nexport enum CloseEventCodes {\n  Restart = 1012\n}","import {Websocket, WebsocketBuilder} from \"websocket-ts\";\nimport Constants from \"./Constants\";\nimport {ZespDataEvent, ZespDataEventType} from \"./ZespDataEvent\";\nimport {IGlobalState} from \"../../../global-state\";\nimport {IZespConnector, ZespConnectorHandler, ZespConnectorListener} from \"../interfaces/IZespConnector\";\nimport {Single} from \"../../single\";\nimport {CloseEventCodes} from \"../enums/CloseEventCodes\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\nimport {IServerInfo} from \"../../../pages/welcome/interfaces\";\n\n// const zespHost = \"192.168.3.30\"; //TODO read host from config\n\nlet _ws: Websocket;\nlet _getGlobalState: () => IGlobalState;\nlet _server: IServerInfo | null;\nconst onMessageEvent = new EventTarget();\nlet _reconnecter: NodeJS.Timeout | null | undefined;\n\nconst ZespConnector: IZespConnector = {\n  connectAsync: (getGlobalState: () => IGlobalState, server) => new Promise<IZespConnector>((resolve, reject) => {\n    if (_server) {\n      console.warn(\"ZespConnector already initialized\");\n      resolve(Single.ZespConnector);\n      return;\n    }\n\n    _getGlobalState = getGlobalState;\n    _server = server;\n\n    // start with delay\n    setTimeout(() => ZespConnector.reconnectAsync(true)\n        .then(() => resolve(Single.ZespConnector))\n        .catch(error => {\n          getGlobalState().setState(prev => ({...prev, ...{zespConnected: false}}));\n          reject(error);\n        }),\n      Constants.ConnectionStartTimeout);\n\n    // setup watchdog\n    _reconnecter = setInterval(() => ZespConnector.reconnectAsync(false)\n        .then(() => resolve(Single.ZespConnector))\n        .catch(error => {\n          console.warn(`Reconnection is failed: ${error}`);\n          getGlobalState().setState(prev => ({...prev, ...{zespConnected: false}}));\n          reject(error);\n        }),\n      Constants.VerifyConnectionTimeout);\n\n    return ZespConnector;\n  }),\n\n  disconnect: () => {\n    if (_reconnecter) {\n      clearInterval(_reconnecter);\n      _reconnecter = null;\n    }\n    _server = null;\n    _getGlobalState().setState(prev => ({...prev, ...{zespConnected: false}}));\n\n    try {\n      if (_ws?.underlyingWebsocket?.readyState === 3 || _ws?.underlyingWebsocket?.readyState == null) {\n        console.debug(\"zesp connection already closed\");\n        return;\n      } else if (_ws?.underlyingWebsocket?.readyState === 1) {\n        console.debug(\"zesp connection closing...\");\n        _ws.close(1000); // closed normal\n        return;\n      } else {\n        _ws?.close(1000); // closed normal\n      }\n    } catch {\n      //it's ok (;\n    }\n  },\n\n  reconnectAsync: (force) => new Promise<void>((resolve, reject) => {\n    if (!_getGlobalState) {\n      reject(\"ZespConnector is not initialized yet\");\n      // throw new Error(\"ZespConnector is not initialized yet\")\n    }\n\n    if (!_server) {\n      reject(\"Server configuration missed\");\n      // throw new Error(\"ZespConnector is not initialized yet\")\n    }\n\n    if (_ws?.underlyingWebsocket?.readyState === 0) {\n      reject(\"Already connecting\");\n      return;\n    }\n\n    // check if already connected\n    if (_ws?.underlyingWebsocket?.readyState === 1 && !force) {\n      resolve();\n      return;\n    }\n\n    // create new connection\n    console.debug(\"Start ws connection...\");\n    try {\n      _ws.close(CloseEventCodes.Restart);\n    } catch {\n      // it's ok :P\n    }\n\n    _getGlobalState().setState(prevState => ({...prevState, ...{zespConnected: false}}))\n    const protocol = document.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    _ws = new WebsocketBuilder(`${protocol}://${_server!.address}:81`)\n      .onOpen(() => {\n        onConnectionOpen();\n        resolve();\n      })\n      .onClose(onConnectionClosed)\n      .onError(() => {\n        onConnectionError();\n        reject(\"zesp connection error\")\n      })\n      .onMessage(onMessageReceived)\n      .build();\n  }),\n\n  send: (args) => {\n    if (!_getGlobalState) throw new Error(\"ZespConnector is not initialized yet\");\n    const data = args.isBinary === true\n      ? getBinaryData(args.data)\n      : args.data;\n\n    _ws.send(data);\n  },\n\n  requestAsync: (args) => new Promise<ZespDataEvent>(((resolve, reject) => {\n    if (!args.timeoutSeconds || args.timeoutSeconds <= 0) args.timeoutSeconds = Constants.DefaultRequestTimeoutSeconds;\n    if (args.isBinary !== true) args.isBinary = false;\n\n    let responseReceived = false;\n    const validator = args.responseValidator;\n\n    // on response received from zesp\n    const listener = (event: Event) => {\n      const result = event as ZespDataEvent;\n      if (!validator.isValid(result)) return;\n\n      responseReceived = true;\n      onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      resolve(result);\n    }\n\n    // if no response for a specific time (timeout)\n    const onTimeout = () => {\n      if (responseReceived) return;\n\n      onMessageEvent.removeEventListener(ZespDataEventType, listener);\n      console.warn(`zesp response did not received (timeout: ${args.timeoutSeconds} seconds)`);\n      reject(\"timeout\");\n    };\n\n    // send request\n    try {\n      onMessageEvent.addEventListener(ZespDataEventType, listener);\n      ZespConnector.send({data: args.data, isBinary: args.isBinary})\n      setTimeout(onTimeout, args.timeoutSeconds * 1000);\n    } catch (error) {\n      reject(`exception: ${error}`);\n    }\n  })),\n\n  request: (args) => new Promise<IZespConnector>((resolve, reject) => {\n    ZespConnector\n      .requestAsync(args)\n      .then(event => {\n        if (args.onSuccess) args.onSuccess(event);\n        else console.debug(`zesp request completed (${args.responseValidator.name})`);\n\n        resolve(Single.ZespConnector);\n      })\n      .catch(error => {\n        const errorMessage = `${error} (${args.responseValidator.name}; ${args.data})`;\n\n        if (args.onError) args.onError(errorMessage);\n        else console.warn(`zesp request failed: ${errorMessage}`);\n        reject(errorMessage);\n      });\n  }),\n\n  subscribe: (validator: IZespResponseValidator, handler: ZespConnectorHandler): ZespConnectorListener => {\n    const listener = (event: Event): void => {\n      const zespEvent = event as ZespDataEvent;\n      if (!validator.isValid(zespEvent)) return;\n\n      handler(zespEvent);\n    }\n\n    onMessageEvent.addEventListener(ZespDataEventType, listener)\n    return listener;\n  },\n\n  unsubscribe: (listener: ZespConnectorListener) => onMessageEvent.removeEventListener(ZespDataEventType, listener),\n\n  getGlobalState: () => _getGlobalState()\n};\n\nconst onConnectionOpen = () => {\n  console.debug(\"Zesp connection opened\");\n  _getGlobalState().setState(prevState => ({...prevState, ...{zespConnected: true}}));\n}\n\nconst onConnectionClosed = () => {\n  console.debug(\"Zesp connection closed\");\n  _getGlobalState().setState(prevState => ({...prevState, ...{zespConnected: false}}));\n}\n\nconst onConnectionError = () => {\n  console.debug(\"Zesp connection error happened )=\");\n}\n\nconst onMessageReceived = (ws: Websocket, e: MessageEvent) => {\n  const messageParts = e.data\n    .replace(/\\|(?=([^\"]*\"[^\"]*\")*[^\"]*$)/ig, \"\\x00\")\n    .split(\"\\x00\");\n\n  if (messageParts.length == 0) {\n    console.warn(\"Received empty message from zesp\");\n    return;\n  }\n\n  let messageType = messageParts.shift();\n\n  const jsonMatch = /\\/(.+)\\.json/ig.exec(messageType);\n  if (jsonMatch) {\n    messageParts.unshift(messageType);\n    messageType = \"json\";\n  }\n\n  const resultEvent = new ZespDataEvent(messageType, messageParts, e.data);\n  // console.debug(resultEvent);\n  onMessageEvent.dispatchEvent(resultEvent);\n}\n\nconst getBinaryData = (message: string): Uint8Array => {\n  const data = message.replaceAll(\" \", \"\");\n  const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n  return new Uint8Array(dataHex);\n}\n\nexport default ZespConnector;","import React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {NavLink} from \"react-router-dom\";\n\nimport './styles.scss'\n\nconst Result = () => {\n  const {t} = useTranslation(\"nav\");\n\n  return (\n    <nav className=\"nav nav-masthead justify-content-center\">\n      {/*<NavLink className=\"nav-link\" to=\"/\" exact={true}>{t('home')}</NavLink>*/}\n      <NavLink className=\"nav-link\" to=\"/devices\">{t('devices')}</NavLink>\n      {process.env.NODE_ENV === \"development\" && (\n        <NavLink className=\"nav-link\" to=\"/socket-test\" exact={true}>Test WS</NavLink>\n      )}\n      <NavLink className=\"nav-link\" to=\"/setup\">{t('setup')}</NavLink>\n    </nav>\n  );\n};\n\nexport default Result;","// https://jamiehaywood.medium.com/typesafe-global-state-with-typescript-react-react-context-c2df743f3ce\n\nimport React, {createContext, Dispatch, SetStateAction, useContext, useState} from \"react\";\nimport {GetDefaultGlobalStateValues, GlobalStateInterface} from \"../../global-state\";\n\nconst GlobalStateContext = createContext({\n  state: {} as Partial<GlobalStateInterface>,\n  setState: {} as Dispatch<SetStateAction<Partial<GlobalStateInterface>>>,\n});\n\nconst GlobalStateProvider = (\n  {\n    children,\n    value = {} as GlobalStateInterface,\n  }: {\n    children: React.ReactNode;\n    value?: Partial<GlobalStateInterface>;\n  }) => {\n\n  Object.assign(value, GetDefaultGlobalStateValues(useGlobalState));\n  const [state, setState] = useState(value);\n\n  return (\n    <GlobalStateContext.Provider value={{state, setState}}>\n      {children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst useGlobalState = () => {\n  const context = useContext(GlobalStateContext);\n  if (!context) {\n    throw new Error(\"useGlobalState must be used within a GlobalStateContext\");\n  }\n\n  return context;\n};\n\nconst DebugState = () => {\n  const {state} = useGlobalState();\n  return <pre>{JSON.stringify(state || {}, null, \"\\t\")}</pre>;\n};\n\nexport {GlobalStateProvider, DebugState, useGlobalState};","import {Dispatch, SetStateAction} from \"react\";\nimport {ZespSettings} from \"./services/zesp/models/ZespSettings\";\nimport {DeviceInfo} from \"./models/DeviceInfo\";\n\ninterface GlobalStateInterface {\n  spinnerLoadingShow: boolean,\n  zespConnected: boolean,\n  appInitialized: boolean,\n  zespSettings?: ZespSettings,\n  selectedServerIndex: number | null,\n  devices: DeviceInfo[],\n}\n\nexport interface IGlobalState {\n  state: Partial<GlobalStateInterface>,\n  setState: Dispatch<SetStateAction<Partial<GlobalStateInterface>>>\n}\n\n// eslint-disable-next-line\nconst GetDefaultGlobalStateValues = (useGlobalState: () => IGlobalState): GlobalStateInterface => {\n  return ({\n    spinnerLoadingShow: false,\n    zespConnected: false,\n    appInitialized: false,\n    zespSettings: undefined,\n    selectedServerIndex: null,\n    devices: [] as DeviceInfo[]\n  });\n};\n\nexport {GetDefaultGlobalStateValues};\nexport type {GlobalStateInterface};","import React, {Fragment} from \"react\";\nimport $ from \"jquery\";\nimport \"./styles.scss\"\nimport {Spinner} from \"react-bootstrap\";\nimport {useGlobalState} from \"../global-state-provider\";\n\nconst Result = () => {\n  const {state} = useGlobalState();\n\n  if (state.spinnerLoadingShow) {\n    setTimeout(() => $(\".loading-overlay\").removeClass(\"hidden\"), 0);\n    return (\n      <div className={\"loading-overlay hidden\"}>\n        <Spinner animation=\"border\" variant=\"light\"/>\n      </div>\n    );\n  }\n\n  return <Fragment/>;\n}\n\nexport default Result;","const Result = {\n  // delay before connection start\n  ConnectionStartTimeout: 500,\n\n  // connection verify interval\n  VerifyConnectionTimeout: 5000,\n\n  // default timeout for requests in seconds \n  DefaultRequestTimeoutSeconds: 5,\n}\n\nexport default Result;","export const ZespDataEventType = \"zesp-data-received\";\n\nexport class ZespDataEvent extends Event {\n  readonly dataType: string;\n  readonly response: string;\n  readonly dataParts: string[];\n\n  constructor(dataType: string, dataParts: string[], response: string) {\n    super(ZespDataEventType);\n\n    this.dataType = dataType;\n    this.dataParts = dataParts;\n    this.response = response;\n  }\n}","import {IGlobalState} from \"../../global-state\";\n\nlet _globalState: IGlobalState;\n\nexport interface ILoadingSpinner {\n  init(globalState: IGlobalState): void;\n\n  show(): void;\n\n  hide(): void;\n}\n\nexport default {\n  init: (globalState: IGlobalState) => {\n    if (_globalState) {\n      console.warn(\"Loader spinner already initialized\");\n      return;\n    }\n\n    _globalState = globalState;\n  },\n\n  show: () => setVisible(true),\n  hide: () => setVisible(false),\n} as ILoadingSpinner\n\nconst setVisible = (isVisible: boolean): void => _globalState.setState(prev => ({...prev, ...{spinnerLoadingShow: isVisible}}));","import {IZespConnector} from \"./zesp/interfaces/IZespConnector\";\nimport ZespConnectorImplementation from \"./zesp/common/ZespConnector\";\nimport LoadingSpinnerImplementation, {ILoadingSpinner} from \"../shared/loading-spinner/service\";\n\nexport namespace Single {\n  export const ZespConnector: IZespConnector = ZespConnectorImplementation;\n  export const ZespConnectorPromise: Promise<IZespConnector> = new Promise<IZespConnector>(resolve => resolve(Single.ZespConnector));\n  export const Spinner: ILoadingSpinner = LoadingSpinnerImplementation;\n}","import {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\n\nexport const FadeIn: FunctionComponent = (props) => {\n  const [className, setClassName] = useState(\"show-transition hidden\");\n  setTimeout(() => setClassName(\"show-transition\"), 0);\n\n  return (\n    <div className={className}>\n      {props.children}\n    </div>\n  )\n}","import React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\ninterface IProps {\n  device: DeviceInfo\n}\n\nexport default (props: IProps) => {\n  const deviceImage = getDeviceImageSrc(props.device);\n  const src = `${process.env.PUBLIC_URL}/device-images/${deviceImage}`;\n  return (<div className=\"item-image\" style={{backgroundImage: `url(${src})`}}/>);\n}\n\nfunction getDeviceImageSrc(device: DeviceInfo): string {\n  if (!device.settings) return \"zigbee.png\";\n  return device.settings.image;\n}","import {IGlobalState} from \"../global-state\";\nimport {DataLayoutItem, DataLayoutItemsGroup} from \"../models/DataLayoutItem\";\nimport {DataReportInfo} from \"../models/DataReportInfo\";\nimport DataHaClusterIds from \"../data/reports.json\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nconst defaultLayoutGroupName = \"main\";\n\nexport const Devices = {\n  getDevice: (globalState: IGlobalState, ieee: string, deviceId: string): DeviceInfo | undefined =>\n    globalState.state.devices?.find(x => x.zespInfo.IEEE === ieee && x.zespInfo.Device === deviceId),\n\n  getControlGroups: (device: DeviceInfo): DataLayoutItemsGroup[] => {\n    const layout = device.customLayout || buildLayoutSettingsFromZesp(device);\n\n    // group by group name (undefined groups will be saved as 'main')\n    return layout.reduce((r, x) => {\n      const groupName = x.group || defaultLayoutGroupName;\n      let group = r.find(x => x.name === groupName);\n      if (!group) {\n        group = {name: groupName} as DataLayoutItemsGroup;\n        r.push(group);\n      }\n\n      group.settings = [...group.settings || [], x];\n\n      return r;\n    }, [] as DataLayoutItemsGroup[]);\n  },\n\n  getReportKeyDetails: (reportKey: string): ReportKeyInfo => {\n    if (reportKey?.length != 10)\n      throw Error(`Unknown format of report key: ${reportKey}`);\n\n    return {\n      endpoint: reportKey.substr(0, 2),\n      clusterId: reportKey.substr(2, 4),\n      attributeId: reportKey.substr(6, 4),\n    }\n  },\n}\n\nconst buildLayoutSettingsFromZesp = (device: DeviceInfo): DataLayoutItem[] => {\n  const getLayoutItem = (reportKey: string): DataLayoutItem => {\n    const reportKeyInfo = Devices.getReportKeyDetails(reportKey);\n    const registeredCluster = (DataHaClusterIds as DataReportInfo[]).find(x => x.clusterId == reportKeyInfo.clusterId);\n\n    const result = {\n      id: reportKeyInfo.clusterId,\n      reportKey: reportKeyInfo\n    } as DataLayoutItem;\n\n    // if cluster information not found\n    if (!registeredCluster) {\n      console.debug(`Report key '${reportKey}' with unregistered cluster '${reportKeyInfo.clusterId}' received`);\n      return result;\n    }\n\n    // build layout based on role\n    const report = device.zespInfo.Report[reportKey];\n    const roleParts = report.role?.split(\"&\");\n    if (roleParts && roleParts.length > 0)\n      return {...result, ...buildLayoutItemForRole(roleParts, registeredCluster, reportKey)};\n\n    // otherwise build layout based on cluster\n    const attributeInfo = registeredCluster.attributes && registeredCluster.attributes[reportKeyInfo.attributeId];\n    if (!attributeInfo) return result;\n\n    return attributeInfo;\n  }\n\n  const reportKeys = Object.keys(device.zespInfo.Report);\n  return reportKeys.map(key => getLayoutItem(key));\n}\n\nconst buildLayoutItemForRole = (roleParts: string[], dataCluster: DataReportInfo, reportKey: string): DataLayoutItem => {\n  const reportKeyInfo = Devices.getReportKeyDetails(reportKey);\n\n  const attributeId = roleParts[0];\n  const roleSettings = roleParts.length > 1 ? roleParts[1] : null;\n  const layoutItem = !dataCluster.attributes\n    ? {id: attributeId} as DataLayoutItem // if no attributes at all\n    : dataCluster.attributes[`${reportKeyInfo.attributeId}:${attributeId}`]\n    || dataCluster.attributes[attributeId]\n    || {id: attributeId} as DataLayoutItem; // if required attribute not found\n\n  // add role configured settings\n  if (roleSettings)\n    layoutItem.zespRoleSettings = JSON.parse(roleSettings);\n\n  return layoutItem;\n}","import React from \"react\";\nimport ItemImage from \"./item-image\";\nimport {NavLink} from \"react-router-dom\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport HomeAutoClusters from \"../../data/reports.json\";\nimport {DataReportInfo} from \"../../models/DataReportInfo\";\nimport {Devices} from \"../../services/devices\";\n\ninterface IProps {\n  device: DeviceInfo\n}\n\nexport default (props: IProps) => {\n  const zespInfo = props.device.zespInfo;\n  const title = zespInfo.Name && zespInfo.Name.length > 0 ? zespInfo.Name : props.device.zespInfo.ModelId\n  const detailsLink = `/devices/${zespInfo.IEEE}-${zespInfo.Device}`;\n\n  let tags: string[] = [];\n  for (const key of Object.keys(zespInfo.Report)) {\n    const reportKeyDetails = Devices.getReportKeyDetails(key);\n    const clusterInfo = HomeAutoClusters.find(x => x.clusterId === reportKeyDetails.clusterId) as DataReportInfo | undefined\n    tags.push(clusterInfo?.name || reportKeyDetails.clusterId);\n  }\n\n  // remove duplicates\n  tags = tags\n    .filter((x, i) => tags.indexOf(x) == i)\n    .sort((a, b) => a > b ? 1 : -1);\n\n  return (\n    <NavLink className=\"item p-3 border rounded\" to={detailsLink}>\n      <div className=\"d-flex\">\n        <div><ItemImage device={props.device}/></div>\n        <div className=\"ps-2\">\n          <div className=\"title\">{title}</div>\n          <div className=\"ieee text-muted small\"><span className=\"badge bg-info me-1\">{zespInfo.Device}</span>{zespInfo.IEEE}</div>\n          {tags.length > 0 && (\n            <div className=\"badges small\">\n              {tags.map((x, i) => (<span key={i} className=\"badge bg-secondary\">{x}</span>))}\n            </div>\n          )}\n        </div>\n      </div>\n    </NavLink>\n  );\n}","import React, {Fragment} from \"react\";\nimport \"./styles.scss\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Card} from \"react-bootstrap\";\nimport Item from \"./item\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {useTranslation} from \"react-i18next\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nconst Result = () => {\n  const globalState = useGlobalState();\n  const {t} = useTranslation(\"pages.devices\");\n\n  //TODO style and translate it\n  if (!globalState.state.devices || globalState.state.devices.length == 0) return (\n    <div>No devices found...</div>\n  )\n\n  const devices = globalState.state.devices.sort();\n  return (\n    <FadeIn>\n      <div className=\"devices\">\n        <Card>\n          <Card.Body>\n            <DevicesGroup title={t(\"groups.all\")} devices={devices}/>\n          </Card.Body>\n        </Card>\n      </div>\n    </FadeIn>\n  );\n}\n\nconst DevicesGroup = (props: { devices: DeviceInfo[], title?: string | null }) => props.devices.length == 0\n  ? (<Fragment/>)\n  : (\n    <div className=\"group border-top pt-4\">\n      {props.title && (\n        <div className=\"title h5 pb-3\">\n          <span>{props.title}</span>\n          {props.devices.length > 1 && (<span className=\"badge bg-secondary ms-2\">{props.devices.length}</span>)}\n        </div>\n      )}\n      <div className=\"items d-flex flex-wrap\">\n        {props.devices.map((device, i) => (<Item device={device} key={i}/>))}\n      </div>\n    </div>\n  )\n\nexport default Result; ","import {ZespDataEvent} from \"./ZespDataEvent\";\nimport {IZespResponseValidator} from \"../interfaces/IZespResponseValidator\";\n\nexport const JsonZespResponseValidator = (fileName: string): IZespResponseValidator => ({\n  name: JsonZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => {\n    if (event.dataType !== \"json\") return false;\n    const responseFileName = event.dataParts[0];\n    const foundFileName = (/\\/(.+)\\.json/ig.exec(responseFileName) as string[])[1];\n\n    return foundFileName === fileName;\n  }\n});\n\nexport const TypedZespResponseValidator = (dataType: string): IZespResponseValidator => ({\n  name: TypedZespResponseValidator.name,\n  isValid: (event: ZespDataEvent) => event.dataType === dataType\n});\n\nexport const AllMessagesZespResponseValidator: IZespResponseValidator = ({\n  name: \"AllZespResponseValidator\",\n  isValid: (event => true)\n});","import {ZespSettings} from \"./models/ZespSettings\";\nimport {Single} from \"../single\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\n\nexport default {\n  getAsync: (): Promise<ZespSettings> => new Promise<ZespSettings>((resolve, reject) => {\n    Single.ZespConnector.requestAsync({data: \"loadConfig\", responseValidator: TypedZespResponseValidator(\"jsconfig\")})\n      .then(event => parseResponse(event.dataParts[0]))\n      .then(settings => resolve(settings))\n      .catch(error => reject(error));\n  }),\n\n  setAsync: (settings: ZespSettings): Promise<void> => {\n    const data = [\n      \"SaveJson\",\n      \"/jsconfig.txt\",\n      JSON.stringify(settings)\n    ].join(\"|\");\n\n    return new Promise((resolve, reject) => {\n      Single.ZespConnector.requestAsync({data: data, responseValidator: TypedZespResponseValidator(\"ZD_RSP\")})\n        .then(event => {\n          // console.log(event);\n          if (event.dataParts[1].toLocaleLowerCase() === \"ok\") resolve();\n          else reject(`Settings was not saved: ${event.response}`)\n        })\n        .catch(error => reject(error));\n    })\n  }\n}\n\nfunction parseResponse(jsonString: string): ZespSettings {\n  const json = JSON.parse(jsonString);\n  const result = {} as ZespSettings;\n  Object.assign(result, json);\n\n  return result;\n}\n","import React, {Fragment, useEffect} from \"react\";\nimport {Container, Nav} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {Single} from \"../../services/single\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespSettings} from \"../../services/zesp/models/ZespSettings\";\nimport toast from \"react-hot-toast\";\nimport {TFunction} from \"react-i18next\";\nimport {IGlobalState} from \"../../global-state\";\nimport {BsGearFill} from \"react-icons/bs\";\nimport ZespSettingsService from \"../../services/zesp/service-settings\";\n\nconst Result = () => {\n  const globalState = useGlobalState();\n\n  useEffect(() => {\n    Single.Spinner.show();\n    ZespSettingsService.getAsync()\n      .then(data => {\n        globalState.setState(prev => ({...prev, ...{zespSettings: data}}))\n        Single.Spinner.hide();\n      })\n      .catch(error => {\n        //TODO show error window\n        alert(error);\n      });\n  }, []);\n\n  if (!globalState.state.zespSettings) return (<Fragment/>);\n\n  return (\n    <FadeIn>\n      <div className=\"aaa\">...</div>\n      <Container className=\"p-0\">\n        <Nav variant=\"pills\">\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup\" exact>Wifi client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/zigbee\">Zigbee</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/mqtt\">MQTT client</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/telegram\">Telegram bot</NavLink></Nav.Item>\n          <Nav.Item><NavLink className=\"nav-link\" to=\"/setup/z2m\">Z2M client</NavLink></Nav.Item>\n          <Nav.Item className=\"ms-auto\"><NavLink className=\"nav-link\" to=\"/setup/zesp-ui\"><BsGearFill style={{marginTop: \"-3px\"}}/> ZESP:UI</NavLink></Nav.Item>\n        </Nav>\n      </Container>\n    </FadeIn>\n  );\n}\n\nexport const SaveSettings = (data: Partial<ZespSettings>, globalState: IGlobalState, t: TFunction<string[]>): Promise<void> => {\n  const updatedSettings: ZespSettings = ({...globalState.state.zespSettings!, ...data});\n  const promise = ZespSettingsService.setAsync(updatedSettings)\n    .then(() => globalState.setState(prev => ({...prev, zespSettings: updatedSettings})));\n\n  toast.promise(promise, {loading: t(\"common:saving_progress\"), success: t(\"common:saving_success\"), error: t(\"common:saving_error\")});\n  return promise;\n}\n\nexport default Result;\n","import {DataLayoutItemsGroup} from \"../../models/DataLayoutItem\";\nimport {Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string,\n  setActiveGroupName: (group: string) => void,\n  onCloseClicked: () => void,\n  onDetailsClicked?: () => void,\n}) => {\n  const title = props.device.zespInfo.Name || props.device.zespInfo.ModelId;\n\n  const buildMultiply = () => (\n    <ul className=\"nav nav-tabs\">\n      {props.groups.map((group, i) =>\n        (\n          <li className=\"nav-item\" key={i}>\n            <button\n              type=\"button\"\n              className={`btn btn-light nav-link ${props.activeGroupName === group.name ? \"active\" : \"\"}`}\n              onClick={() => props.setActiveGroupName(group.name)}>\n              {group.name === \"main\" ? title : group.name}\n            </button>\n          </li>\n        )\n      )}\n    </ul>\n  )\n\n  const buildSingle = () => (<div>{title}</div>);\n\n  const headerClassName = props.groups.length > 1 ? \"with-tabs\" : \"\";\n  const headerContent = props.groups.length > 1 ? buildMultiply() : buildSingle();\n\n  return (\n    <Modal.Header className={headerClassName}>\n      <div>{headerContent}</div>\n      <div className=\"text-end modal-right-buttons\">\n        {props.onDetailsClicked && (<button type=\"button\" className=\"btn\" onClick={props.onDetailsClicked}><i className=\"bi bi-archive\"/></button>)}\n        <span className=\"border-end mx-3\"/>\n        <button type=\"button\" className=\"btn-close me-1\" aria-label=\"Close\" onClick={props.onCloseClicked}/>\n      </div>\n    </Modal.Header>\n  )\n}","import {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {DataLayoutItem} from \"../models/DataLayoutItem\";\nimport {ZespReportInfo} from \"./zesp/models/ZespReportInfo\";\nimport {IGlobalState} from \"../global-state\";\nimport {ReportKeyInfo} from \"../models/ReportKeyInfo\";\n\nexport const DeviceControls = {\n  getControlReport: (props: IDeviceControlProps<DataLayoutItem>): ZespReportInfo | null => {\n    if (!props.config.reportKey) {\n      console.debug(`No report key in config found for ${props.deviceInfo.zespInfo.IEEE} device and ${props.config.id} control`);\n      return null;\n    }\n    const reportKey = props.config.reportKey.endpoint + props.config.reportKey.clusterId + props.config.reportKey.attributeId;\n    return props.deviceInfo.zespInfo.Report[reportKey];\n  },\n\n  getControlSettings: function <T extends DataLayoutItem>(props: IDeviceControlProps<DataLayoutItem>, layoutId: string): [T | undefined, ZespReportInfo | undefined] {\n    const settings = props.deviceInfo.customLayout?.find(x => x.id === layoutId) as T;\n    const report = settings && settings.reportKey\n      ? props.deviceInfo.zespInfo.Report[settings.reportKey.endpoint + settings.reportKey.clusterId + settings.reportKey.attributeId]\n      : undefined;\n\n    return [settings, report];\n  },\n\n  setControlReport: (globalState: IGlobalState, props: IDeviceControlProps<DataLayoutItem>, value: string, reportKeyInfo?: ReportKeyInfo | null): boolean => {\n    const saveReportKeyInfo = reportKeyInfo || props.config.reportKey;\n    if (!saveReportKeyInfo) return false;\n\n    const devices = globalState.state.devices;\n    const device = devices?.find(x => x.zespInfo.IEEE === props.deviceInfo.zespInfo.IEEE);\n    if (!device) return false;\n\n    const reportKey = saveReportKeyInfo.endpoint + saveReportKeyInfo.clusterId + saveReportKeyInfo.attributeId;\n    const report = device.zespInfo.Report[reportKey];\n    report.val = value;\n\n    globalState.setState(x => ({...x, ...{devices}}));\n    return true;\n  }\n}","import React from \"react\";\nimport {Button, ButtonGroup, Row} from \"react-bootstrap\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffRoot = (props: IDeviceControlProps<LayoutSettingsOnOff>) => {\n  const report = DeviceControls.getControlReport(props);\n\n  const onHandler = () => {\n    Single.ZespConnector.send({data: props.config.arguments.commandOn, isBinary: true});\n  };\n\n  const offHandler = () => {\n    Single.ZespConnector.send({data: props.config.arguments.commandOff, isBinary: true});\n  };\n\n  return (\n    <Row>\n      <DeviceControlCol1>Light power:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <ButtonGroup>\n          <Button variant={report?.val.toString() === \"1\" ? \"primary\" : \"secondary\"} onClick={onHandler}>ON</Button>\n          <Button variant={report?.val.toString() === \"1\" ? \"secondary\" : \"primary\"} onClick={offHandler}>OFF</Button>\n        </ButtonGroup>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const LevelRoot = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const globalState = useGlobalState();\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((props.config.arguments.max - props.config.arguments.min) / 2 + props.config.arguments.min);\n  const [value, setValue] = useState(currentValue);\n\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n\n  const setCurrentValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString());\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    Single.ZespConnector.send({data: data});\n    setCurrentValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n    const data = props.config.arguments.command.replace(\"{value}\", result.toString(16));\n    Single.ZespConnector.send({data: data});\n    setCurrentValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Level:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"80px\"}}\n          className=\"me-2\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","// Copy-pasted from here: https://usehooks-typescript.com/react-hook/use-local-storage\n\nimport {Dispatch, SetStateAction, useEffect, useState} from 'react'\n\ntype SetValue<T> = Dispatch<SetStateAction<T>>\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, SetValue<T>] {\n  // Get from local storage then\n  // parse stored json or return initialValue\n  const readValue = (): T => {\n    // Prevent build error \"window is undefined\" but keep keep working\n    if (typeof window === 'undefined') {\n      return initialValue\n    }\n\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : initialValue\n    } catch (error) {\n      console.warn(`Error reading localStorage key “${key}”:`, error)\n      return initialValue\n    }\n  }\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<T>(readValue)\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue: SetValue<T> = value => {\n    // Prevent build error \"window is undefined\" but keeps working\n    if (typeof window == 'undefined') {\n      console.warn(\n        `Tried setting localStorage key “${key}” even though environment is not a client`,\n      )\n    }\n\n    try {\n      // Allow value to be a function so we have the same API as useState\n      const newValue = value instanceof Function ? value(storedValue) : value\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n\n      // Save state\n      setStoredValue(newValue)\n\n      // We dispatch a custom event so every useLocalStorage hook are notified\n      window.dispatchEvent(new Event('local-storage'))\n    } catch (error) {\n      console.warn(`Error setting localStorage key “${key}”:`, error)\n    }\n  }\n\n  useEffect(() => {\n    setStoredValue(readValue())\n  }, [])\n\n  useEffect(() => {\n    const handleStorageChange = () => {\n      setStoredValue(readValue())\n    }\n\n    // this only works for other documents, not the current one\n    window.addEventListener('storage', handleStorageChange)\n\n    // this is a custom event, triggered in writeValueToLocalStorage\n    window.addEventListener('local-storage', handleStorageChange)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      window.removeEventListener('local-storage', handleStorageChange)\n    }\n  }, [])\n\n  return [storedValue, setValue]\n}\n","import React, {useState} from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {LayoutSettingsCommand} from \"../settings\";\nimport {HuePicker, GithubPicker, CompactPicker, RGBColor} from \"react-color\";\nimport {Row} from \"react-bootstrap\";\nimport {Single} from \"../../services/single\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localize\nexport const RgbRoot = (props: IDeviceControlProps<LayoutSettingsCommand>) => {\n  const globalState = useGlobalState();\n  const report = DeviceControls.getControlReport(props);\n  let currentValue: number[] = report?.val ? report?.val.split(\":\").map(x => Number(x)) : [255, 255, 255];\n  if (currentValue.length !== 3) {\n    console.warn(`Incorrect RGB value stored to reportd: ${report?.val}`);\n    currentValue = [255, 255, 255];\n  }\n\n  const [color, setColor] = useState<RGBColor>({r: currentValue[0], g: currentValue[1], b: currentValue[2]});\n  const [colorPicker, setColorPicker] = useLocalStorage(\"colorPicker\", 1);\n\n  const setCurrentValue = (rgb: RGBColor) => DeviceControls.setControlReport(globalState, props, `${rgb.r}:${rgb.g}:${rgb.b}`);\n  const colorChangeHandler = (rgb: RGBColor) => {\n    setColor(rgb);\n\n    const [x, y] = rgbToXY(rgb);\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n    Single.ZespConnector.send({data: command});\n    setCurrentValue(rgb);\n  }\n\n  const sendColorHandler = () => {\n    const [x, y] = rgbToXY(color);\n\n    let command = props.config.arguments.command.replace(\"{x}\", x.toString(16));\n    command = command.replace(\"{y}\", y.toString(16));\n\n    Single.ZespConnector.send({data: command});\n    setCurrentValue(color);\n  }\n\n  const colorPickerButton = (id: number) =>\n    (<button className={`btn btn-outline-secondary me-1 btn-xs ${colorPicker == id ? \"active\" : \"\"}`} type=\"button\" onClick={() => setColorPicker(id)}>{id}</button>)\n\n  return (\n    <Row>\n      <DeviceControlCol1 className=\"user-select-none\">\n        <div>\n          <div>Light color:</div>\n          <div>\n            {colorPickerButton(1)}\n            {colorPickerButton(2)}\n            {colorPickerButton(3)}\n          </div>\n        </div>\n      </DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"flex-grow-1\">\n          {colorPicker === 1 && (<HuePicker color={color} onChange={event => setColor(event.rgb)} onChangeComplete={sendColorHandler}/>)}\n          {colorPicker === 2 && (<GithubPicker color={color} onChange={event => colorChangeHandler(event.rgb)} triangle=\"hide\" width=\"214px\"/>)}\n          {colorPicker === 3 && (<CompactPicker color={color} onChange={event => colorChangeHandler(event.rgb)}/>)}\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  );\n}\n\nconst rgbToXY = (rgb: RGBColor) => {\n  // Apply a gamma correction to the RGB values, which makes the color more vivid and more the like the color displayed on the screen of your device\n  // const red = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n  const red = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const green = (rgb.g > 0.04045) ? Math.pow((rgb.g + 0.055) / (1.0 + 0.055), 2.4) : (rgb.g / 12.92);\n  // const blue = (rgb.b > 0.04045) ? Math.pow((rgb.b + 0.055) / (1.0 + 0.055), 2.4) : (rgb.b / 12.92);\n  const blue = (rgb.r > 0.04045) ? Math.pow((rgb.r + 0.055) / (1.0 + 0.055), 2.4) : (rgb.r / 12.92);\n\n\n  // RGB values to XYZ using the Wide RGB D65 conversion formula\n  const X = red * 0.664511 + green * 0.154324 + blue * 0.162028;\n  const Y = red * 0.283881 + green * 0.668433 + blue * 0.047685;\n  const Z = red * 0.000088 + green * 0.072310 + blue * 0.986039;\n\n  // Calculate the xy values from the XYZ values\n  // let x = (X / (X + Y + Z)).toFixed(4);\n  // let y = (Y / (X + Y + Z)).toFixed(4)\n  let x = (X / (X + Y + Z));\n  let y = (Y / (X + Y + Z));\n\n  if (isNaN(x)) x = 0;\n  if (isNaN(y)) y = 0;\n\n  return [Number((x * 65279).toFixed(0)), Number((y * 65279).toFixed(0))];\n}","import React from \"react\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataLayoutItem} from \"../../models/DataLayoutItem\";\nimport {DeviceControls} from \"../../services/deviceControls\";\n\nexport const UnknownControl = (props: IDeviceControlProps<DataLayoutItem>) => {\n  const configData = JSON.stringify(props.config)\n  const reportData = JSON.stringify(DeviceControls.getControlReport(props));\n\n  return (\n    <>\n      <div>Unknown control: {props.config.id}</div>\n      <div className=\"alert alert-info\">\n        <div>{configData}</div>\n        {reportData && (<div className=\"mt-2\">{reportData}</div>)}\n      </div>\n    </>\n  )\n}","import React, {ReactNode, useEffect, useState} from \"react\";\n\ninterface IProps {\n  children?: ReactNode | undefined,\n  classNameFrom: string,\n  classNameTo: string,\n  timeOutMs?: number,\n  onRefresh?: boolean,\n  onLoad?: boolean\n}\n\nexport const Transition = (props: IProps) => {\n  const [className, setClassName] = useState<string>();\n  if (props.onRefresh === true) useEffect(() => setClassName(props.classNameFrom), [props.children]);\n  if (props.onLoad === false) useEffect(() => setClassName(props.classNameTo), []);\n\n  setTimeout(() => setClassName(props.classNameTo), props.timeOutMs || 100);\n  return (<span className={className}>{props.children}</span>)\n}","import React, {FunctionComponent} from \"react\";\nimport {Transition} from \"./index\";\n\nexport const HighlightOnUpdate: FunctionComponent = (props) => {\n  return (\n    <Transition classNameFrom=\"highlight-value just-added\" classNameTo=\"highlight-value\" onRefresh={true} onLoad={false}>\n      {props.children}\n    </Transition>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {LayoutSettingsSensor} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n//TODO localization\nexport const IlluminanceSensor = (props: IDeviceControlProps<LayoutSettingsSensor>) => {\n  const report = DeviceControls.getControlReport(props);\n  const value = report?.val ? parseInt(report.val, 16).toString() : null;\n\n  return (\n    <Row>\n      <DeviceControlCol1>Illuminance:</DeviceControlCol1>\n      <DeviceControlCol2>\n        {value && (<HighlightOnUpdate>{value}</HighlightOnUpdate>)}\n        {!value && (<span className=\"alert alert-warning small py-2 m-0\">No data</span>)}\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {useState} from \"react\";\nimport {FormControl, Row} from \"react-bootstrap\";\nimport FormRange from \"react-bootstrap/FormRange\";\nimport {LayoutSettingsLevel} from \"../settings\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {Single} from \"../../services/single\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const LevelControl = (props: IDeviceControlProps<LayoutSettingsLevel>) => {\n  const globalState = useGlobalState();\n  const minMaxAttributes = {\n    min: props.config.arguments.min,\n    max: props.config.arguments.max\n  };\n\n  const report = DeviceControls.getControlReport(props);\n  const currentValue = report?.val ? Number(report.val) : ((minMaxAttributes.max - minMaxAttributes.min) / 2 + minMaxAttributes.min);\n  const [value, setValue] = useState(currentValue);\n\n  const inRange = (value: number) => Math.max(Math.min(props.config.arguments.max, value), props.config.arguments.min);\n  const setReportValue = (value: number) => DeviceControls.setControlReport(globalState, props, value.toString())\n\n  const sliderChangeHandler = () => {\n    const result = inRange(value);\n    const data = formatCommand(props.config.arguments.command, result);\n    Single.ZespConnector.send({data: data});\n    setReportValue(result);\n  }\n\n  const inputChangeHandler = (value: number) => {\n    const result = inRange(value);\n    setValue(result);\n\n    const data = formatCommand(props.config.arguments.command, result);\n    Single.ZespConnector.send({data: data});\n    setReportValue(result);\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>{props.config.label || \"Level\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <FormControl\n          style={{width: \"100px\"}}\n          className=\"me-2 text-center\"\n          type=\"number\"\n          value={value}\n          onChange={event => inputChangeHandler(Number(event.target.value))}\n          {...minMaxAttributes}\n        />\n\n        <FormRange\n          value={value}\n          onChange={event => setValue(Number(event.target.value))}\n          onMouseUp={sliderChangeHandler}\n          {...minMaxAttributes}\n        />\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n\nconst formatCommand = (command: string, value: number): string => command\n  .replace(\"{value}\", value.toString(16))\n  .replace(\"{value:dec}\", value.toString());","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DataLayoutItem} from \"../../models/DataLayoutItem\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport toast from \"react-hot-toast\";\nimport {LayoutSettingsOnOff} from \"../settings\";\nimport {Single} from \"../../services/single\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\n// TODO add localization\nexport const PlayerSrcRoot = (props: IDeviceControlProps<DataLayoutItem>) => {\n  const srcReport = DeviceControls.getControlReport(props);\n  const [playSettings, playReport] = DeviceControls.getControlSettings<LayoutSettingsOnOff>(props, \"player_control_root\");\n\n  if (!srcReport) {\n    useEffect(() => {\n      toast.error(`'${props.config.id}' layout settings not found`);\n    }, []);\n    return (<></>);\n  }\n\n  if (!playReport) {\n    useEffect(() => {\n      toast.error(\"'player_control_root' layout settings not found\");\n    }, []);\n    return (<></>);\n  }\n\n  const [src, setSrc] = useState(srcReport.val || \"\");\n  const [play, setPlay] = useState(playReport!.val || \"OFF\");\n  const globalState = useGlobalState();\n\n  const srcs: string[] = [\n    \"http://chanson.hostingradio.ru:8041/chanson128.mp3\",\n    \"http://dorognoe.hostingradio.ru:8000/radio?type=.mp3\",\n    \"http://stream3.radiostyle.ru:8001/biker-fm\",\n    \"http://air.radiorecord.ru:8102/sd90_320\",\n    \"http://stream.hitroe.com/stream\",\n    \"http://air.radiorecord.ru:8102/tm_320\",\n    \"http://eu.radioboss.fm:8024/stream\"\n  ];\n\n  const handleChange = (event: ChangeEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    setSrc(value);\n\n    DeviceControls.setControlReport(globalState, props, value);\n  }\n\n  const handleStop = () => {\n    console.log(\"stop\");\n    setPlay(\"OFF\");\n    DeviceControls.setControlReport(globalState, props, \"OFF\", playSettings!.reportKey);\n\n    setSrc(\"\");\n    DeviceControls.setControlReport(globalState, props, \"\");\n\n    if (playSettings) Single.ZespConnector.send({data: playSettings.arguments.commandOff});\n    else console.warn(\"No configured OFF command for 'player_control_root' operation found in layout\");\n  }\n\n  const handlePlay = () => {\n    if (!src || src.length === 0) {\n      toast.error(\"Please select source first\", {icon: \"🎵\"});\n      return;\n    }\n\n    setPlay(\"ON\");\n    DeviceControls.setControlReport(globalState, props, \"ON\", playSettings!.reportKey);\n    if (playSettings) Single.ZespConnector.send({data: playSettings.arguments.commandOn.replace(\"{value}\", src)});\n    else console.warn(\"No configured ON command for 'player_control_root' operation found in layout\");\n  }\n\n  return (\n    <Row>\n      <DeviceControlCol1>Radio stream:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <div className=\"input-group\">\n          <input className=\"form-control\" list=\"datalistOptions\" placeholder=\"Click to see dropdown suggestions\" value={src} onChange={handleChange}/>\n          <button className={`btn btn-outline-secondary ${play !== \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handleStop}><i className=\"bi-stop\"/></button>\n          <button className={`btn btn-outline-secondary rounded-end ${play === \"ON\" ? \"active\" : \"\"}`} type=\"button\" onClick={handlePlay}><i className=\"bi-play\"/></button>\n          <datalist id=\"datalistOptions\">\n            {srcs.map((src, i) => (<option key={i} value={src}/>))}\n          </datalist>\n        </div>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataLayoutItem} from \"../../models/DataLayoutItem\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const OnOffBinarySensor = (props: IDeviceControlProps<DataLayoutItem>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n  const payloadOn = Number(props.config.zespRoleSettings[\"payload_on\"]?.toString() || \"0\");\n  const value = Number(report.parsed?.toString() || report.val?.toString() || \"1\");\n  const result = value === payloadOn;\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"State\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{result ? \"ON\" : \"OFF\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\nimport {IDeviceControlProps} from \"../../interfaces/IDeviceControlProps\";\nimport {DeviceControls} from \"../../services/deviceControls\";\nimport {HighlightOnUpdate} from \"../../shared/transition/HighlightOnUpdate\";\nimport {DataLayoutItem} from \"../../models/DataLayoutItem\";\nimport {DeviceControlCol1, DeviceControlCol2} from \"../index\";\n\nexport const ValueSensor = (props: IDeviceControlProps<DataLayoutItem>) => {\n  const report = DeviceControls.getControlReport(props);\n  if (!report) return (<div className=\"alert alert-warning\">Report missed</div>);\n\n  const value = report.parsed || report.val;\n  const unit = props.config.zespRoleSettings[\"unit_of_measurement\"] || \"\";\n\n  return (\n    <Row>\n      <DeviceControlCol1>{report.label || \"Value\"}:</DeviceControlCol1>\n      <DeviceControlCol2>\n        <HighlightOnUpdate>{value ? `${value} ${unit}` : \"No data\"}</HighlightOnUpdate>\n      </DeviceControlCol2>\n    </Row>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {LayoutSettingsCommand, LayoutSettingsLevel, LayoutSettingsOnOff, LayoutSettingsSensor} from \"./settings\";\nimport {IDeviceControlProps} from \"../interfaces/IDeviceControlProps\";\nimport {OnOffRoot} from \"./root/OnOffRoot\";\nimport {LevelRoot} from \"./root/LevelRoot\";\nimport {RgbRoot} from \"./root/RgbRoot\";\nimport {UnknownControl} from \"./controls/UnknownControl\";\nimport {IlluminanceSensor} from \"./sensors/IlluminanceSensor\";\n\nimport {DataLayoutItem} from \"../models/DataLayoutItem\";\nimport {LevelControl} from \"./controls/LevelControl\";\nimport {DeviceInfo} from \"../models/DeviceInfo\";\nimport {PlayerSrcRoot} from \"./root/PlayerSrcRoot\";\nimport {OnOffBinarySensor} from \"./sensors/OnOffBinarySensor\";\nimport {ValueSensor} from \"./sensors/ValueSensor\";\nimport {Col} from \"react-bootstrap\";\n\nexport const getControlForDevice = (config: DataLayoutItem, deviceInfo: DeviceInfo) => {\n  const controlProps: IDeviceControlProps<DataLayoutItem> = {\n    config,\n    deviceInfo,\n  }\n\n  switch (config.id) {\n    case \"on_off_root\" :\n      return (<OnOffRoot {...controlProps} config={controlProps.config as LayoutSettingsOnOff}/>);\n    case \"level_root\" :\n      return (<LevelRoot {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>);\n    case \"rgb_root\" :\n      return (<RgbRoot {...controlProps} config={controlProps.config as LayoutSettingsCommand}/>);\n    case \"player_src_root\" :\n      return (<PlayerSrcRoot {...controlProps} config={controlProps.config as DataLayoutItem}/>);\n    case \"player_control_root\":\n      return (<></>);\n\n    case \"level_control\" :\n      return (<LevelControl {...controlProps} config={controlProps.config as LayoutSettingsLevel}/>);\n\n    case \"illuminance_sensor\" :\n      return (<IlluminanceSensor {...controlProps} config={controlProps.config as LayoutSettingsSensor}/>);\n    case \"binary_sensor\" :\n      return (<OnOffBinarySensor {...controlProps} config={controlProps.config as DataLayoutItem}/>);\n    case \"sensor\" :\n      return (<ValueSensor {...controlProps} config={controlProps.config as DataLayoutItem}/>);\n\n    default:\n      return (<UnknownControl {...controlProps}/>)\n  }\n}\n\nexport const DeviceControlCol1: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col md=\"4\">{props.children}</Col>)\n}\n\nexport const DeviceControlCol2: FunctionComponent<React.HTMLProps<HTMLButtonElement>> = (props) => {\n  return (<Col>{props.children}</Col>)\n} ","import {DataLayoutItemsGroup} from \"../../models/DataLayoutItem\";\nimport {Modal} from \"react-bootstrap\";\nimport {getControlForDevice} from \"../../device-controls\";\nimport React from \"react\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\n\nexport default (props: {\n  device: DeviceInfo,\n  groups: DataLayoutItemsGroup[],\n  activeGroupName: string\n}) => {\n  const group = props.groups.find(x => x.name === props.activeGroupName);\n  if (!group) return (<div>Group '{props.activeGroupName}' not found.</div>)\n\n  return (\n    <Modal.Body className=\"text-start device-dialog p-4\">\n      {group.settings.map((control, i) =>\n        (<div key={i} className=\"device-control-group\">{getControlForDevice(control, props.device)}</div>))}\n    </Modal.Body>\n  )\n}","import {useHistory} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport toast from \"react-hot-toast\";\n\nexport default () => {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/devices\");\n    toast.error(\"Device information not found\");\n  }, []);\n  return (<></>);\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {Modal} from \"react-bootstrap\";\nimport {Devices} from \"../../services/devices\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport CustomHeader from \"./header\";\nimport CustomBody from \"./body\";\nimport CustomDeviceNotFound from \"./not-found\";\nimport toast from \"react-hot-toast\";\n\n//TODO localize\nexport default () => {\n  const {ieee, device} = useParams<{ ieee: string, device: string }>();\n  const [show, setShow] = useState(true);\n  const history = useHistory();\n  const globalState = useGlobalState();\n\n  const deviceInfo = Devices.getDevice(globalState, ieee, device);\n  if (!deviceInfo) return (<CustomDeviceNotFound/>);\n\n  const groups = Devices.getControlGroups(deviceInfo);\n  const [activeGroupName, setActiveGroupName] = useState(groups[0].name);\n\n  const handleClose = () => setShow(false);\n  const handleExit = () => setTimeout(() => history.push(\"/devices\"), 100);\n  const handleDetails = () => {\n    console.log(deviceInfo);\n    toast.success(\"Check console for logs\", {icon: \"👽\"});\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose} onExited={handleExit}>\n      <CustomHeader\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}\n        setActiveGroupName={setActiveGroupName}\n        onCloseClicked={handleClose}\n        onDetailsClicked={handleDetails}\n      />\n\n      <CustomBody\n        groups={groups}\n        device={deviceInfo}\n        activeGroupName={activeGroupName}/>\n    </Modal>\n  )\n}","import {FormEvent} from \"react\";\nimport $ from \"jquery\";\n\n// we need this 'any' type to provide general solution\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype IAction = (arg: any) => void;\n\nconst Result = {\n  handleSubmit: function handleSubmit(e: FormEvent, action: IAction) {\n    e.preventDefault();\n\n    // we need this 'any' type to provide general solution\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data: any = {};\n\n    for (const input of $(e.target).find(\"input\")) {\n      const id = $(input).prop(\"id\");\n      if (id == null) return;\n\n      if ($(input).prop(\"type\") === \"checkbox\") {\n        if ($(input).prop(\"checked\") === true) data[id] = $(input).attr(\"checked_value\") || \"true\";\n        else data[id] = $(input).attr(\"unchecked_value\") || \"false\";\n      } else {\n        data[id] = $(input).val();\n      }\n    }\n    // console.log(data);\n    action(data)\n  }\n};\n\nexport default Result;","import React, {FormEvent} from \"react\";\nimport {Form} from \"react-bootstrap\";\n\nimport {IProps} from \"./interfaces\";\nimport $ from \"./logic\";\n\nconst ReactForm = (props: IProps) => {\n  const {onSubmit, ...restProps} = props;\n  const onSubmitForm = (event: FormEvent) => $.handleSubmit(event, onSubmit);\n\n  return (\n    <Form onSubmit={onSubmitForm} {...restProps}>\n      {props.children}\n    </Form>\n  );\n}\n\nexport {ReactForm};","import React, {useEffect, useRef, useState} from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {Single} from \"../../services/single\";\nimport {AllMessagesZespResponseValidator} from \"../../services/zesp/common/ZespResponseValidators\";\n\nconst maxMessagesCount = 15;\nconst predefinedMessages = [\"getDeviceList\", \"get_Mi_lamp\", \"LoadJson|/location.json\", \"LoadJson|/groups.json\"];\nconst predefinedBinary = [\"01 0000 01 0100\", \"01 0000 01 0000\"];\n\ninterface IFormData {\n  messageToSend?: string,\n}\n\nexport default () => {\n  const [messages, _setMessages] = useState<string[]>([]);\n  const [messageSendValue, setMessageSendValue] = useState<string>(\"\");\n  const [paused, _setPaused] = useState<boolean>(false);\n\n  const messagesRef = useRef(messages);\n  const pausedRef = useRef(paused);\n\n  const addMessages = (message: string) => {\n    if (pausedRef.current) return;\n\n    const data: string[] = [message.substr(0, 250), ...messagesRef.current];\n    const cutCount = data.length - maxMessagesCount;\n    if (cutCount > 0) data.splice(data.length - cutCount, cutCount)\n\n    messagesRef.current = data;\n    _setMessages(data);\n  }\n\n  const togglePause = () => {\n    const data = !pausedRef.current;\n    pausedRef.current = data;\n    _setPaused(data);\n  }\n\n  const onSend = (data: IFormData) => {\n    if (!data.messageToSend) return;\n    addMessages(`>${data.messageToSend}`);\n    Single.ZespConnector.send({data: data.messageToSend});\n  }\n\n  const onSendPredefined = (event: React.MouseEvent): void => {\n    const el = event.target as HTMLButtonElement;\n    const data = el.innerText;\n    setMessageSendValue(data);\n  }\n\n  const onSendBinary = (message?: string | null): void => {\n    const data = message || messageSendValue;\n    Single.ZespConnector.send({data: data, isBinary: true});\n\n    // const dataHex = data.match(/[\\da-f]{2}/gi)?.map(group => parseInt(group, 16)) as ArrayLike<number>;\n    // const dataToSend = new Uint8Array(dataHex);\n    //\n    // addMessages(`>bin: ${data} (${dataToSend})`);\n    // Single.ZespConnector.send(dataToSend);\n  }\n\n  const onClearLog = () => {\n    messagesRef.current = [];\n    _setMessages([]);\n  }\n\n  useEffect(() => {\n    const listener = Single.ZespConnector.subscribe(AllMessagesZespResponseValidator, (event) => {\n      const message = event.response;\n      addMessages(message);\n    });\n    return () => Single.ZespConnector.unsubscribe(listener);\n  }, []);\n\n  return (\n\n    <FadeIn>\n      <ReactForm onSubmit={onSend}>\n        <Card>\n          <Card.Header>WebSocket tester (FOR DEVELOPMENT ONLY)</Card.Header>\n          <Card.Body>\n            <div className=\"row mb-2\">\n              <label className=\"col-md-3 col-lg-2\">Message to send</label>\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" id=\"messageToSend\" value={messageSendValue} onChange={event => setMessageSendValue(event.target.value)}/>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-3 col-lg-2\"/>\n              <div className=\"col\">\n                <div>\n                  {predefinedMessages.map((x, i) => (\n                    <button key={i} type=\"submit\" className=\"btn btn-sm btn-outline-primary me-1\" onClick={onSendPredefined}>{x}</button>\n                  ))}\n                </div>\n                <div className=\"mt-1\">\n                  {predefinedBinary.map((x, i) => (\n                    <button key={i} type=\"button\" className=\"btn btn-sm btn-outline-secondary me-1\" onClick={() => {\n                      setMessageSendValue(x);\n                      onSendBinary(x);\n                    }}>{x}</button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <Button variant=\"primary\" type=\"submit\">Send message</Button>\n            <Button variant=\"secondary\" type=\"button\" onClick={() => onSendBinary()} className=\"ms-2\">Send binary</Button>\n          </Card.Footer>\n        </Card>\n      </ReactForm>\n\n      <Card className=\"mt-4\">\n        <Card.Header>\n          <span>Communication log <span className=\"badge bg-secondary small\">{messages.length}</span></span>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={onClearLog}>Clear log</button>\n          <button className=\"btn btn-outline-secondary ms-3 btn-sm\" onClick={() => togglePause()}>{paused ? \"Start logs\" : \"Pause logs\"}</button>\n        </Card.Header>\n        <Card.Body>\n          {messages.map((message, i) => message.startsWith(\">\")\n            ? (<div key={i} className=\"px-2 mb-3 py-1 m-1 bg-success bg-opacity-25 rounded\">{message.substr(1)}</div>)\n            : (<div key={i} className=\"border-start mb-3 border-3 border-warning p-0 d-flex flex-wrap\">{message.split(\"|\").map((x, i2) => (\n              <span key={i2} className=\"bg-warning bg-opacity-25 m-1 px-2 rounded\">{x}</span>\n            ))}</div>))}\n        </Card.Body>\n      </Card>\n    </FadeIn>\n  );\n}","import React from \"react\";\nimport {Col, Form, Row} from \"react-bootstrap\";\n\ntype Props = {\n  defaultValue?: string | number | boolean | undefined;\n  controlId: string;\n  label: string;\n  placeholder?: string;\n  type?: \"text\" | \"password\";\n};\n\nconst Result = ({controlId, label, placeholder, defaultValue, type = \"text\"}: Props) => {\n  let inputProps = ({\n    placeholder,\n    type\n  });\n\n  if (defaultValue) inputProps = ({...inputProps, ...{defaultValue: defaultValue.toString()}});\n\n  return (\n    <Form.Group as={Row} className=\"mb-3\" controlId={controlId}>\n      <Form.Label column md=\"3\" lg=\"2\">{label}</Form.Label>\n      <Col>\n        <Form.Control {...inputProps} />\n      </Col>\n    </Form.Group>\n  );\n}\n\nexport default Result;\n","import React from \"react\";\nimport {Form} from \"react-bootstrap\";\n\ntype IProps = {\n  defaultChecked?: boolean | number | string;\n  controlId: string;\n  label: string;\n  checkedValue?: string | number | boolean | undefined;\n  uncheckedValue?: string | number | boolean | undefined;\n};\n\nconst Result = ({controlId, label, defaultChecked, checkedValue = \"true\", uncheckedValue = \"false\"}: IProps) => {\n  const defaultCheckedBool =\n    defaultChecked === \"true\" ||\n    defaultChecked === \"1\" ||\n    defaultChecked === 1 ||\n    defaultChecked === true ||\n    false;\n\n  let props = {checked_value: checkedValue, unchecked_value: uncheckedValue};\n  if (defaultChecked) props = ({...props, ...{defaultChecked: defaultCheckedBool}});\n\n  return (\n    <Form.Group controlId={controlId} className=\"d-inline-block\">\n      <Form.Label className=\"d-flex\">\n        <Form.Check className=\"pe-2\" {...props}/><span>{label}</span>\n      </Form.Label>\n    </Form.Group>\n  );\n}\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Button, Card, Col, Row} from \"react-bootstrap\";\nimport {CheckGroupInline, InputGroupHorizontal} from \"../../shared/form\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {ZespMqttSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\n\nconst Result = () => {\n  const globalState = useGlobalState();\n  const {t} = useTranslation([\"pages.setup-mqtt\", \"common\"]);\n  const settings = globalState.state.zespSettings?.MQTT;\n\n  if (!settings) return (<Fragment/>);\n\n  const onSubmit = (data: ZespMqttSettings) => SaveSettings({MQTT: data}, globalState, t);\n\n  return (\n    <FadeIn>\n      <Card>\n        <ReactForm onSubmit={onSubmit}>\n          <Card.Body>\n            <InputGroupHorizontal controlId=\"mqttup\" defaultValue={settings.mqttup} label={t(\"topic.label\")} placeholder={t(\"topic.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqtt\" defaultValue={settings.mqtt} label={t(\"server.label\")} placeholder={t(\"server.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttPort\" defaultValue={(settings.mqttPort)?.toString()} label={t(\"port.label\")} placeholder={t(\"port.placeholder\")}/>\n            <InputGroupHorizontal controlId=\"mqttLogin\" defaultValue={settings.mqttLogin} label={t(\"login.label\")} placeholder={t(\"login.placeholder\")}/>\n            <InputGroupHorizontal type=\"password\" controlId=\"mqttPassw\" defaultValue={settings.mqttPassw} label={t(\"password.label\")} placeholder={t(\"password.placeholder\")}/>\n            <Row>\n              <Col md=\"3\" lg=\"2\"/>\n              <Col className=\"space-between-4\">\n                <CheckGroupInline controlId=\"mqttEnable\" defaultChecked={settings.mqttEnable} label={t(\"is_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n                <CheckGroupInline controlId=\"Home_Assistant\" defaultChecked={settings.Home_Assistant} label={t(\"is_ha_enabled.label\")} checkedValue={1} uncheckedValue={0}/>\n              </Col>\n            </Row>\n\n          </Card.Body>\n          <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n        </ReactForm>\n      </Card>\n    </FadeIn>\n  );\n}\n\nexport default Result;","import React from \"react\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\n\nconst Result = () => (\n  <FadeIn>\n    <div className=\"px-4 py-5 bg-light rounded-3\">\n      <div className=\"container-fluid\">\n        <h1 className=\"display-5 fw-bold\">Not implemented yet!</h1>\n        <p className=\"col-md-8 fs-4\">\n          Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/><br/>\n          Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!\n        </p>\n        <hr className=\"my-4\"/>\n        <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>\n        <a href=\"#\" target={\"_blank\"} rel=\"noreferrer\" className=\"btn btn-primary btn-lg\" type=\"button\">Learn more</a>\n      </div>\n    </div>\n    {/*<div className=\"jumbotron\">*/}\n    {/*  <h1 className=\"display-4\">Not implemented yet!</h1>*/}\n    {/*  <p className=\"lead\">*/}\n    {/*    Hello, my dear friend! Just imagine how awesome this feature can be and share it with developers ~_~ <br/>*/}\n    {/*    Or you can even implement it yourself, everything you need is just to jump to source codes, made some magic, test it and that's it!*/}\n    {/*  </p>*/}\n    {/*  <hr className=\"my-4\"/>*/}\n    {/*  <p>This feature is under contruction. You can find latest verion on <a href=\"#\">github project page</a> or just click this big blue button bellow.</p>*/}\n    {/*  <a className=\"btn btn-primary btn-lg\" href=\"#\" target={\"_blank\"} rel=\"noreferrer\" role=\"button\">Learn more</a>*/}\n    {/*</div>*/}\n  </FadeIn>\n);\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Button, Card} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\nimport {useTranslation} from \"react-i18next\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {InputGroupHorizontal} from \"../../shared/form\";\nimport {ZespWifiSettings} from \"../../services/zesp/models/ZespSettings\";\nimport {SaveSettings} from \"./index\";\n\nconst Result = () => {\n  const globalState = useGlobalState();\n  const {t} = useTranslation([\"pages.setup-wifi\", \"common\"]);\n  const settings = globalState.state.zespSettings?.Wifi;\n\n  if (!settings) return (<Fragment/>);\n\n  const onSubmit = (data: ZespWifiSettings): Promise<void> => SaveSettings({Wifi: data}, globalState, t);\n\n  return (\n    <Fragment>\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card>\n            <Card.Body>\n              <InputGroupHorizontal controlId=\"ssid\" defaultValue={settings?.ssid} label={t(\"ssid.label\")} placeholder={t(\"ssid.placeholder\")}/>\n              <InputGroupHorizontal type=\"password\" controlId=\"pass\" defaultValue={settings?.pass} label={t(\"pass.label\")} placeholder={t(\"pass.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"ip\" defaultValue={settings?.ip} label={t(\"ip.label\")} placeholder={t(\"ip.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"mask\" defaultValue={settings?.mask} label={t(\"mask.label\")} placeholder={t(\"mask.placeholder\")}/>\n              <InputGroupHorizontal controlId=\"gw\" defaultValue={settings?.gw} label={t(\"gw.label\")} placeholder={t(\"gw.placeholder\")}/>\n            </Card.Body>\n            <Card.Footer><Button variant=\"primary\" type=\"submit\">{t(\"common:save_button\")}</Button></Card.Footer>\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </Fragment>\n  )\n};\n\nexport default Result;","import React, {Fragment} from \"react\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {DeviceInfoPage, DevicesPage, SetupPage, SocketTestPage} from \"./pages\";\nimport {NotImplementedYetPage, SetupMqttPage, SetupWifiPage} from \"./pages/setup/setup-pages\";\n\nexport const Routes = () => (\n  <Fragment>\n      {/*<Route exact path=\"/\" component={MainPage}/>*/}\n      <Route exact path=\"/\"><Redirect to=\"/devices\"/></Route>\n      <Route path=\"/devices\" component={DevicesPage}/>\n      <Route path=\"/devices/:ieee-:device\" component={DeviceInfoPage}/>\n      <Route path=\"/setup\" component={SetupPage}/>\n      <Route exact path=\"/setup\" component={SetupWifiPage}/>\n      <Route path=\"/setup/mqtt\" component={SetupMqttPage}/>\n      <Route path=\"/setup/zigbee\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/telegram\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/z2m\" component={NotImplementedYetPage}/>\n      <Route path=\"/setup/zesp-ui\" component={NotImplementedYetPage}/>\n      <Route path=\"/socket-test\" component={SocketTestPage}/>\n  </Fragment>\n)","import React from \"react\";\nimport \"./styles.scss\";\nimport {Card} from \"react-bootstrap\";\nimport {NavLink} from \"react-router-dom\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  openAddServer: () => void,\n  openEditAction: (server: IServerInfo) => void,\n  openServerAction: (index: number) => void,\n  servers: IServerInfo[]\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const sortedServers = props.servers\n    .map((server, index) => ({server, index}))\n    .sort((a, b) => a.server.name > b.server.name ? 1 : -1);\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <Card className=\"text-start\">\n          <Card.Header>{t(\"list.title\")}</Card.Header>\n          <Card.Body>\n            {props.servers.length == 0 && (\n              <div>{t(\"list.add_message\")}</div>\n            )}\n            {props.servers.length > 0 && (\n              <nav className=\"servers-list\">\n                {sortedServers.map((data, i) => (\n                  <div className=\"item\" key={`item-${i}`}>\n                    <NavLink\n                      className=\"server-button\"\n                      to=\"/\"\n                      onClick={(e) => {\n                        props.openServerAction(data.index);\n                        e.preventDefault();\n                      }}\n                      activeClassName=\"none\"><i className=\"bi bi-caret-right-fill\"/> {data.server.name}</NavLink>\n                    <button type=\"button\" onClick={() => props.openEditAction(data.server)} className=\"edit-button\"><i className=\"bi bi-pencil-fill\"/></button>\n                  </div>\n                ))}\n              </nav>\n            )}\n          </Card.Body>\n          <Card.Footer className=\"text-right\">\n            <button type=\"button\" onClick={props.openAddServer} className=\"btn btn-primary\">{t(\"list.add_button\")}</button>\n          </Card.Footer>\n        </Card>\n      </FadeIn>\n    </div>\n  )\n}","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {Card, FormControl, InputGroup, OverlayTrigger, Popover} from \"react-bootstrap\";\nimport {FadeIn} from \"../../shared/fadein-transition\";\nimport {IServerInfo} from \"./interfaces\";\nimport {ReactForm} from \"../../shared/form/react-form\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface IProps {\n  closeAction: () => void;\n  deleteAction: () => void;\n  addAction: (data: IServerInfo) => void;\n  updateAction: (data: IServerInfo) => void;\n  editServer?: IServerInfo;\n}\n\nexport default (props: IProps) => {\n  const {t} = useTranslation(\"pages.welcome\");\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n\n  const onSubmit = (data: IServerInfo): Promise<void> => {\n    if (props.editServer) props.updateAction(data);\n    else props.addAction(data);\n\n    return Promise.resolve();\n  }\n\n  const onDeleteClicked = () => {\n    if (!deleteConfirmed) return;\n    props.deleteAction();\n  }\n\n  const popover = (\n    <Popover id=\"popover-basic\">\n      <Popover.Header as=\"h3\">{t(\"edit.delete_title\")}</Popover.Header>\n      <Popover.Body><span dangerouslySetInnerHTML={{__html: t(\"edit.delete_message\")}}/></Popover.Body>\n    </Popover>\n  );\n\n  return (\n    <div className=\"container welcome-page h-100\">\n      <FadeIn>\n        <ReactForm onSubmit={onSubmit}>\n          <Card className=\"text-start\">\n            <Card.Header className=\"d-flex justify-content-between\">\n              <span className=\"modal-title\">{t(\"edit.title\")}</span>\n              <button type=\"button\" className=\"btn-close\" aria-label=\"Close\" onClick={props.closeAction}/>\n            </Card.Header>\n            <Card.Body>\n              <FormControl className=\"mb-2\" id=\"name\" defaultValue={props.editServer?.name} placeholder={t(\"edit.name_input_placeholder\")}/>\n              <InputGroup>\n                <InputGroup.Text id=\"basic-addon3\">{document.location.protocol === \"https:\" ? \"wss\" : \"ws\"}://</InputGroup.Text>\n                <FormControl id=\"address\" defaultValue={props.editServer?.address} aria-describedby=\"basic-addon3\" placeholder={t(\"edit.address_input_placeholder\")}/>\n              </InputGroup>\n            </Card.Body>\n\n            {props.editServer && (\n              <Card.Footer className=\"d-flex justify-content-between\">\n                {/*<button type=\"button\" onClick={props.deleteAction} className=\"btn btn-outline-danger\">Delete</button>*/}\n                <div>\n                  <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={popover} rootClose={true} onToggle={setDeleteConfirmed}>\n                    <button onClick={onDeleteClicked} type=\"button\" className=\"btn btn-outline-danger\">{t(\"edit.delete_button\")}</button>\n                  </OverlayTrigger>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.save_button\")}</button>\n              </Card.Footer>\n            )}\n\n            {!props.editServer && (\n              <Card.Footer className=\"text-right\">\n                <button type=\"submit\" className=\"btn btn-primary\">{t(\"edit.add_button\")}</button>\n              </Card.Footer>\n            )}\n          </Card>\n        </ReactForm>\n      </FadeIn>\n    </div>\n  )\n}","import React, {FunctionComponent, useState} from \"react\";\nimport \"./styles.scss\";\nimport {IServerInfo, WelcomePageParts} from \"./interfaces\";\nimport PartItems from \"./part-items\";\nimport PartEdit from \"./part-edit\";\nimport {useLocalStorage} from \"../../services/localStorage\";\nimport {useGlobalState} from \"../../shared/global-state-provider\";\n\nexport const WelcomePage: FunctionComponent = () => {\n  const globalState = useGlobalState();\n  const [currentPart, setCurrentPart] = useState<WelcomePageParts>(\"welcome\");\n  const [editServer, setEditServer] = useState<IServerInfo>();\n  const [servers, setServers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n\n  // const servers: IServerInfo[] = [];\n\n  const backToWelcomeAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"welcome\");\n  }\n\n  const openAddAction = () => {\n    setEditServer(undefined);\n    setCurrentPart(\"edit\");\n  }\n\n  const openEditAction = (server: IServerInfo) => {\n    setEditServer(server);\n    setCurrentPart(\"edit\");\n  }\n\n  const addAction = (server: IServerInfo) => {\n    servers.push(server)\n    setServers(servers);\n    backToWelcomeAction();\n  }\n\n  const updateAction = (server: IServerInfo) => {\n    const index = servers.indexOf(editServer!);\n    servers[index] = server;\n    setServers(servers);\n\n    console.log(servers);\n    backToWelcomeAction();\n  }\n\n  const deleteAction = () => {\n    setServers(servers.filter(server => server !== editServer));\n    backToWelcomeAction();\n  };\n\n  const openServerAction = (index: number) => {\n    // const selectedServer = servers[index];\n    // console.log(selectedServer);\n    // console.log(index);\n    globalState.setState(prev => ({...prev, ...{selectedServerIndex: index}}));\n  }\n\n  if (currentPart === \"edit\") return (\n    <PartEdit editServer={editServer} addAction={addAction} updateAction={updateAction} closeAction={backToWelcomeAction} deleteAction={deleteAction}/>);\n  return (<PartItems servers={servers} openAddServer={openAddAction} openEditAction={openEditAction} openServerAction={openServerAction}/>);\n}","import {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {ZespDeviceInfo} from \"./models/ZespDeviceInfo\";\nimport {IGlobalState} from \"../../global-state\";\nimport {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport predefinedDevices from \"../../data/devices.json\";\nimport {DataLayoutItem} from \"../../models/DataLayoutItem\";\nimport {DeviceInfo} from \"../../models/DeviceInfo\";\nimport {DataDeviceSettings} from \"../../models/DataDeviceSettings\";\nimport {ZespReportInfo} from \"./models/ZespReportInfo\";\n\nconst ServiceDevices = {\n  getDevicesList: (zesp: IZespConnector) => {\n    return zesp.request({\n      data: \"getDeviceList\",\n      responseValidator: TypedZespResponseValidator(\"alldev\"),\n      onSuccess: (event) => onDevicesListReceived(event, zesp.getGlobalState())\n    })\n  }\n}\n\n// when list of devices received from ZESP\nconst onDevicesListReceived = (event: ZespDataEvent, globalState: IGlobalState): void => {\n  const jsonString: string = event.dataParts[0];\n  const zespDevices: ZespDeviceInfo[] = [];\n  Object.assign(zespDevices, JSON.parse(jsonString))\n\n  const devices: DeviceInfo[] = zespDevices.map(zespInfo => {\n    const settings = predefinedDevices.find(x => x.modelIds.findIndex(y => y === zespInfo.ModelId) >= 0) as DataDeviceSettings | undefined;\n    const customLayout = settings?.layout && require(`../../data/layouts/${settings.layout}`) as DataLayoutItem[] | undefined;\n\n    customLayout && customLayout.forEach(layoutItem => {\n      if (!layoutItem.reportKey) return;\n\n      const reportKey = layoutItem.reportKey.endpoint + layoutItem.reportKey.clusterId + layoutItem.reportKey.attributeId;\n      zespInfo.Report[reportKey] = {} as ZespReportInfo;\n    });\n\n    return {\n      zespInfo: zespInfo,\n      settings: settings,\n      customLayout: customLayout\n    } as DeviceInfo;\n  });\n\n  globalState.setState(x => ({...x, ...{devices: devices}}));\n}\n\nexport default ServiceDevices;","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {IGlobalState} from \"../../global-state\";\nimport {ZespDeviceUpdate} from \"./models/ZespDeviceUpdate\";\n\nexport default {\n  subscribeToEvents: (zesp: IZespConnector, getGlobalState: () => IGlobalState) => {\n    zesp.subscribe(TypedZespResponseValidator(\"rep\"), event => onUpdate(event, getGlobalState))\n  }\n}\n\nconst onUpdate = (event: ZespDataEvent, getGlobalState: () => IGlobalState): void => {\n  // we are expecting 'rep|{...}' string\n  if (event.dataParts.length < 2) {\n    console.warn(\"Unknown format of updated received\");\n    console.warn(event.response);\n    return;\n  }\n\n  const globalState = getGlobalState();\n  const devices = globalState.state.devices;\n  const ieee = event.dataParts[1];\n  const device = devices?.find(x => x.zespInfo.IEEE === ieee);\n\n  if (!device) {\n    console.debug(`Update received for unknown device: ${ieee}`);\n    return;\n  }\n\n  const data = JSON.parse(event.dataParts[0]) as ZespDeviceUpdate;\n  const reportId = data.EndPoint + data.ClusterId + data.AttribId;\n  const report = device.zespInfo.Report[reportId];\n\n  if (!report) {\n    console.debug(`Report '${reportId}' not found for '${device.zespInfo.IEEE}' device (${device.zespInfo.Name ?? device.zespInfo.ModelId})`);\n    // console.debug(data);\n    return;\n  }\n\n  if (report.val !== data.Data && report.parsed !== data.parsed) {\n    report.parsed = data.parsed;\n    report.val = data.Data;\n    globalState.setState(x => ({...x, ...{devices: devices}}));\n  }\n\n  // console.debug(`Device '${device.IEEE}' (${device.Name ?? device.ModelId}) report '${reportId}' updated with value '${data.Data}'`);\n}","import {IZespConnector} from \"./interfaces/IZespConnector\";\nimport {TypedZespResponseValidator} from \"./common/ZespResponseValidators\";\nimport {ZespDataEvent} from \"./common/ZespDataEvent\";\nimport {IGlobalState} from \"../../global-state\";\nimport {ZespRootData} from \"./models/ZespRootData\";\n\nexport default {\n  getRootData: (zesp: IZespConnector) => {\n    return zesp.request({\n      data: \"get_Mi_lamp\",\n      responseValidator: TypedZespResponseValidator(\"Mi_lamp\"),\n      onSuccess: (event) => onDataReceived(event, zesp.getGlobalState())\n    })\n  }\n}\n\nconst onDataReceived = (event: ZespDataEvent, globalState: IGlobalState): void => {\n  const devices = globalState.state.devices;\n  if (!devices) {\n    console.debug(\"Update received, but no any devices found\")\n    return;\n  }\n\n  const data = JSON.parse(event.dataParts[0]) as ZespRootData;\n  const device = devices.find(x => x.zespInfo.ModelId === \"ZESP_Root\");\n  if (!device) {\n    console.debug(\"Update received, but no root devices found\")\n    return;\n  }\n\n  const layoutSettings = device.customLayout;\n  if (!layoutSettings) {\n    console.warn(\"Update received, but no root layout found\");\n    // console.debug(globalState.state.devices);\n    return;\n  }\n\n  const reportOnOff = layoutSettings.find(x => x.id === \"on_off_root\")?.reportKey;\n  if (reportOnOff) device.zespInfo.Report[reportOnOff.endpoint + reportOnOff.clusterId + reportOnOff.attributeId].val = data.on.toString();\n  else console.warn(\"Root device report 'on_off_root' not found\");\n\n  const reportLevel = layoutSettings.find(x => x.id === \"level_root\")?.reportKey;\n  if (reportLevel) device.zespInfo.Report[reportLevel.endpoint + reportLevel.clusterId + reportLevel.attributeId].val = data.level.toString();\n  else console.warn(\"Root device report 'level_root' not found\");\n\n  // ZESP returns wrong colors red and blue swapped\n  const reportRgb = layoutSettings.find(x => x.id === \"rgb_root\")?.reportKey;\n  if (reportRgb) device.zespInfo.Report[reportRgb.endpoint + reportRgb.clusterId + reportRgb.attributeId].val = `${data.B}:${data.G}:${data.R}`;\n  else console.warn(\"Root device report 'rgb_root' not found\");\n\n  const volumeLevel = layoutSettings.find(x => x.id === \"level_control\")?.reportKey;\n  if (volumeLevel) device.zespInfo.Report[volumeLevel.endpoint + volumeLevel.clusterId + volumeLevel.attributeId].val = data.sound.volume.toString();\n  else console.warn(\"Root device report 'level_control' not found\");\n\n  const srcRadio = layoutSettings.find(x => x.id === \"player_src_root\")?.reportKey;\n  if (srcRadio) device.zespInfo.Report[srcRadio.endpoint + srcRadio.clusterId + srcRadio.attributeId].val = data.sound.current_path?.toString();\n  else console.warn(\"Root device report 'player_src_root' not found\");\n\n  const playControl = layoutSettings.find(x => x.id === \"player_control_root\")?.reportKey;\n  if (playControl) device.zespInfo.Report[playControl.endpoint + playControl.clusterId + playControl.attributeId].val = data.sound.play.toString();\n  else console.warn(\"Root device report 'player_control_root' not found\");\n\n  globalState.setState(x => ({...x, ...{devices: devices}}));\n}\n","import {Single} from \"../single\";\nimport {IGlobalState} from \"../../global-state\";\nimport ServiceDevices from \"./service-devices\";\nimport ServiceReportUpdates from \"./service-report-updates\";\nimport ServiceRoot from \"./service-root\";\n\nconst send = (data: string) => Single.ZespConnector.send({data: data});\nlet isInitialized = false;\n\nexport default {\n  initAsync: (getGlobalState: () => IGlobalState): Promise<void> => new Promise<void>((resolve, reject) => {\n    if (isInitialized) {\n      console.warn(\"zesp service already initialized\");\n      resolve();\n      return;\n    }\n\n    isInitialized = true;\n    console.debug(\"Load initial data from zesp...\");\n\n    //TODO move each promise to fn\n    Single.ZespConnectorPromise\n      // .then(zesp => zesp.request({data: \"LoadJson|/groups.json\", responseValidator: JsonZespResponseValidator(\"groups\"), onSuccess: onGroupsReceived}))\n      // .then(zesp => zesp.request({data: \"LoadJson|/location.json\", responseValidator: JsonZespResponseValidator(\"location\"), onSuccess: onLocationsReceived}))\n      .then(ServiceDevices.getDevicesList)\n      .then(ServiceRoot.getRootData)\n      .then(zesp => ServiceReportUpdates.subscribeToEvents(zesp, getGlobalState))\n\n      .then(() => resolve())\n      .catch(error => {\n        console.error(`Cannot complete zesp service initialization: ${error}`);\n        reject(error);\n      });\n  }),\n\n  ping: () => send(\"ping\"),\n}\n\n// function onGroupsReceived(event: ZespDataEvent) {\n//   console.log(\"groups received\");\n// }\n//\n// function onLocationsReceived(event: ZespDataEvent) {\n//   console.log(\"locations received\");\n// }","import React, {Fragment, useEffect, useRef} from 'react';\nimport {BrowserRouter as Router, Switch} from \"react-router-dom\";\nimport './bootstrap-updates.scss';\nimport './App.scss';\nimport TopMenu from \"./shared/top-menu\";\nimport LoadingSpinner from \"./shared/loading-spinner\";\nimport {GlobalStateProvider, useGlobalState} from \"./shared/global-state-provider\";\nimport {Single} from \"./services/single\";\nimport toast, {Toaster} from \"react-hot-toast\";\nimport {Routes} from \"./Routes\";\nimport {WelcomePage} from \"./pages/welcome\";\nimport {useLocalStorage} from \"./services/localStorage\";\nimport {IServerInfo} from \"./pages/welcome/interfaces\";\nimport ZespGeneralService from \"./services/zesp/service-general\";\n\nconst Content = () => {\n  const globalState = useGlobalState();\n  const [servers] = useLocalStorage<IServerInfo[]>(\"servers\", []);\n  const selectedServer = (\n    globalState.state.selectedServerIndex === null || servers.length <= globalState.state.selectedServerIndex!\n      ? null\n      : servers[globalState.state.selectedServerIndex!]\n  );\n\n  return selectedServer ? (<App server={selectedServer}/>) : (<WelcomePage/>);\n}\n\nconst App = (props: { server: IServerInfo }) => {\n  const globalState = useGlobalState();\n  const globalStateRef = useRef(globalState);\n\n  useEffect(() => {\n    globalStateRef.current = globalState;\n  }, [globalState]);\n\n  useEffect(() => {\n    Single.Spinner.init(globalState);\n    Single.Spinner.show();\n\n    Single.ZespConnectorPromise\n      .then(zesp => zesp.connectAsync(() => globalStateRef.current, props.server))\n      .then(() => ZespGeneralService.initAsync(() => globalStateRef.current))\n      .then(() => {\n        globalState.setState(prev => ({...prev, ...{appInitialized: true}}))\n        Single.Spinner.hide();\n      })\n      .catch(error => {\n        globalState.setState(prev => ({\n          ...prev, ...{\n            appInitialized: false,\n            selectedServerIndex: null,\n          }\n        }))\n        Single.ZespConnector.disconnect();\n        Single.Spinner.hide();\n\n        toast.error(`Ooops, cannot connect to the server (${props.server.address}). ${error}`); //TODO localization\n      });\n  }, []);\n\n  if (!globalState.state.appInitialized) {\n    return (<Fragment/>);\n  }\n\n  return (\n    <div className=\"container-md d-flex w-100 h-100 p-3 mx-auto flex-column\">\n      <header className=\"masthead\">\n        <a href=\"/\"><h3 className=\"masthead-brand\">ZESP:UI</h3></a>\n        <TopMenu/>\n      </header>\n      <main role=\"main\" className=\"text-start d-flex flex-grow-1 flex-column\">\n        <Routes/>\n      </main>\n      <footer className=\"mastfoot mt-3\">\n        <p>ZESP UI application, by <a href=\"https://t.me/NickRimmer\" target={\"_blank\"} rel=\"noreferrer\">@NickRimmer</a>. (0.0.0 version, <span>dev build</span>)\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nconst Result = () => {\n  return (\n    <Router>\n      <Switch>\n        <GlobalStateProvider>\n          <Content/>\n          <LoadingSpinner/>\n          <Toaster/>\n        </GlobalStateProvider>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Result;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './loader.js';\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport './i18n/config';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import i18n from \"i18next\";\nimport {initReactI18next} from \"react-i18next\";\n\nconst languages = [\"en\"];\nconst namespaces = [\n    \"common\",\n    \"nav\",\n    \"pages.setup-mqtt\",\n    \"pages.setup-wifi\",\n    \"pages.welcome\",\n    \"pages.devices\",\n];\n\nconst i18next = i18n.use(initReactI18next);\ni18next.init({\n    fallbackLng: languages[0],\n    lng: languages[0],\n    resources: loadResources(),\n    ns: namespaces,\n    defaultNS: 'common'\n});\ni18n.languages = languages;\n\nfunction loadResources() {\n    const result = {};\n\n    for (let lang of languages) {\n        result[lang] = {};\n\n        for (let ns of namespaces) {\n            const path = `./locales/${lang}/${ns.replace(\".\", \"/\")}.json`;\n            try {\n                // eslint-disable-next-line \n                result[lang][ns] = require('' + path); // wtf with JS???\n                console.debug(`${path} (ok)`);\n            } catch (error) {\n                // it's ok\n                console.debug(`${path} (error)`);\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default i18n;"],"sourceRoot":""}